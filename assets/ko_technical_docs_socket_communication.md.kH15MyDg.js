import{_ as a,c as i,o as l,U as e,li as t,lj as o,lk as s,ll as n,lm as r,ln as c,lo as p,lp as h}from"./chunks/framework.rC8qtnLq.js";const x=JSON.parse('{"title":"소켓 통신 활용 기본 안내서 v2.0","description":"","frontmatter":{"layout":"doc","outline":"deep"},"headers":[],"relativePath":"ko/technical_docs/socket_communication.md","filePath":"ko/technical_docs/socket_communication.md"}'),d={name:"ko/technical_docs/socket_communication.md"},m=e('<h1 id="소켓-통신-활용-기본-안내서-v2-0" tabindex="-1">소켓 통신 활용 기본 안내서 v2.0 <a class="header-anchor" href="#소켓-통신-활용-기본-안내서-v2-0" aria-label="Permalink to &quot;소켓 통신 활용 기본 안내서 v2.0&quot;">​</a></h1><h3 id="_1-기본-개요" tabindex="-1">1. 기본 개요 <a class="header-anchor" href="#_1-기본-개요" aria-label="Permalink to &quot;1. 기본 개요&quot;">​</a></h3><p>Rainbow Robotics 에서 제공하는 TCP/IP 소켓 통신을 이용한 어플리케이션 개발에는 크게 두 가지 방식을 사용할 수 있습니다.</p><h4 id="_1-1-일반-소켓-통신을-통한-데이터-교환" tabindex="-1">1.1 일반 소켓 통신을 통한 데이터 교환 <a class="header-anchor" href="#_1-1-일반-소켓-통신을-통한-데이터-교환" aria-label="Permalink to &quot;1.1 일반 소켓 통신을 통한 데이터 교환&quot;">​</a></h4><ul><li>Rainbow Robotics 시스템은 TCP/IP 의 서버 또는 클라이언트가 될 수 있습니다.</li><li>상대방 PC/시스템과 유효한 데이터 (숫자, 배열, 문자열 등) 만 주고 받는 방식입니다.</li><li>사용자는 Rainbow Robotics 의 UI 를 이용하여 프로그램을 구성합니다.</li><li>상대방 PC/시스템에서 특정 데이터를 보내면, 해당 데이터를 활용하여 동작/프로그램을 수행 가능합니다.</li></ul><p><img src="'+t+'" alt="missing"></p><h4 id="_1-2-외부-제어-스크립트를-통한-로봇-제어" tabindex="-1">1.2 외부 제어 스크립트를 통한 로봇 제어 <a class="header-anchor" href="#_1-2-외부-제어-스크립트를-통한-로봇-제어" aria-label="Permalink to &quot;1.2 외부 제어 스크립트를 통한 로봇 제어&quot;">​</a></h4><ul><li>Rainbow Robotics 시스템은 TCP/IP 의 서버로 동작합니다. (포트 5000/5001 사용)</li><li>기본적으로 Rainbow Robotics 의 UI를 사용하는 것이 아니라, 사용자가 직접 운용 프로그램을 원하는 개발 언어로 만드는 방식입니다.</li><li>Rainbow Robotics 에서 규정한 전용 스크립트 문법에 맞게 사용자가 문자열을 보냅니다.</li><li>사용자의 개발 언어는 상관없습니다. (JAVA, C++, Python 등)</li><li>문법에 맞는 스크립트 문자열을 규정된 포트로 전송만 하면 됩니다.</li></ul><p><img src="'+o+'" alt="missing"></p><p>TCP/IP 소켓 통신을 위해서는 사전에 Rainbow Robotics 제어박스의 IP 주소가 세팅 되어야 합니다.<br> IP 주소 및 Netmask 등은 UI Program을 통해서 세팅합니다.<br> Setup 페이지의 System 란에서 설정 및 확인 가능합니다.</p><p><img src="'+s+'" alt="missing"></p><h3 id="_2-방식-1-일반-소켓-통신을-통한-데이터-교환" tabindex="-1">2. [방식 1] 일반 소켓 통신을 통한 데이터 교환 <a class="header-anchor" href="#_2-방식-1-일반-소켓-통신을-통한-데이터-교환" aria-label="Permalink to &quot;2. [방식 1] 일반 소켓 통신을 통한 데이터 교환&quot;">​</a></h3><p><img src="'+n+'" alt="missing"></p><ul><li>RB 시스템은 TCP/IP 의 서버 또는 클라이언트가 될 수 있습니다.</li><li>RB 시스템이 서버일 경우 사용자 시스템은 클라이언트이고 RB 시스템이 클라이언트일 경우 사용자 시스템은 서버로 작동시키면 됩니다.<br> 어느 쪽을 서버로 사용할지는 사용자의 편의에 따라 선택하면 됩니다.</li><li>상대방 PC/시스템과 유효한 데이터 (숫자, 배열, 문자열 등) 만 주고 받는 방식입니다.</li><li>사용자는 RB 의 UI 프로그램을 이용하여 프로그램을 구성합니다.</li><li>상대방 PC/시스템에서 특정 데이터를 보내면, 해당 데이터를 활용하여 동작/프로그램을 수행 가능합니다.</li><li>주고 받는 데이터는 기본적으로 Ascii String(문자열) 입니다.</li><li>문자열을 주고 받고, 필요에 따라 문자열 함수를 활용하여, 문자열을 숫자 또는 배열 등으로 변환하여 사용 가능합니다.</li><li>양 쪽 시스템의 IP 주소는 사용자가 설정 가능합니다.</li><li>통신할 포트의 경우 예약된 포트 번호 (1000번 미만 포트들, 2000, 2001, 5000, 5001)를 제외한 모든 번호가 사용 가능합니다.</li></ul><br><p>아래의 예시는 [<strong>방식 1</strong>]을 사용했을 때 로봇 프로그램 구성의 간단한 예시입니다.<br> 본 안내서에서는 아래의 예시 및 예시에 사용된 기능을 별도로 설명하지 않습니다.<br> 각 기능에 대한 설명과 다양한 예시는 별도의 <u>‘소켓 통신 예시 문서’</u>를 통해 참고하세요.</p><p><img src="'+r+'" alt="missing"></p><figcaption style="text-align:center;">[ RB 시스템을 TCP 클라이언트로 사용할 경우 예 ]</figcaption><p><img src="'+c+'" alt="missing"></p><figcaption style="text-align:center;">[ RB 시스템을 TCP 서버로 사용할 경우 예 ]</figcaption><h3 id="_3-방식-2-외부-제어-스크립트를-통한-로봇-제어" tabindex="-1">3. [방식 2] 외부 제어 스크립트를 통한 로봇 제어 <a class="header-anchor" href="#_3-방식-2-외부-제어-스크립트를-통한-로봇-제어" aria-label="Permalink to &quot;3. [방식 2] 외부 제어 스크립트를 통한 로봇 제어&quot;">​</a></h3><p><img src="'+p+'" alt="missing"></p><ul><li>RB 시스템은 TCP/IP 의 서버로 동작합니다. (포트 5000/5001 사용)</li><li>기본적으로 RB 의 UI 를 사용하는 것이 아니라, 사용자가 직접 운용 프로그램을 원하는 개발 언어로 만드는 방식입니다.</li><li>RB 에서 규정한 전용 스크립트 문법에 맞게 사용자가 문자열을 보냅니다.</li><li>사용자의 개발 언어는 상관없습니다. (JAVA, C#, C/C++, Python 등)</li><li>사용자의 개발 언어에 상관없이 문법에 맞는 스크립트 문자열을 규정된 포트로 전송만 하면 됩니다.</li><li>5000 번 포트는 사용자의 명령어를 RB 시스템에 보내는데 사용합니다. (동작 명령 등)</li><li>5001 번 포트는 RB 시스템의 상태 정보를 사용자에게 알려주는데 사용합니다. (관절 각도, 동작 여부, 각종 상태 정보 등)</li></ul><p><img src="'+h+'" alt="missing"></p><br><p>외부 제어 스크립트를 통한 제어의 자세한 설명은 <u>“제품 매뉴얼 Appendix E”</u>에 있습니다. 로봇 동작 명령어 스크립트의 경우 두 가지 형태가 존재합니다.</p><ul><li>서술형 (제품 매뉴얼 Appendix E에 설명)</li><li>함수형 (UI script 매뉴얼에 설명)</li></ul><p>어떤 형태를 사용해도 상관없습니다. 명령어를 5000번 포트로 보내기만 하면 됩니다.</p><h4 id="_3-1-example-1-move-j" tabindex="-1">3.1 Example 1 - Move J <a class="header-anchor" href="#_3-1-example-1-move-j" aria-label="Permalink to &quot;3.1 Example 1 - Move J&quot;">​</a></h4><p>아래 예시는 Move J로 6개 관절을 0,45,90,0,90,0도로 이동하기 위한 서술형과 함수형 두 형태의 예시입니다.</p><h5 id="_3-1-1-서술형-명령어-예시" tabindex="-1">3.1.1 서술형 명령어 예시: <a class="header-anchor" href="#_3-1-1-서술형-명령어-예시" aria-label="Permalink to &quot;3.1.1 서술형 명령어 예시:&quot;">​</a></h5><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>“jointall 0.3, 0.1, 0, 45, 90, 0, 90, 0”</span></span></code></pre></div><h5 id="_3-1-2-함수형-명령어-예시" tabindex="-1">3.1.2 함수형 명령어 예시: <a class="header-anchor" href="#_3-1-2-함수형-명령어-예시" aria-label="Permalink to &quot;3.1.2 함수형 명령어 예시:&quot;">​</a></h5><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>“move_j(jnt[0, 45, 90, 0, 90, 0], 60, 80)”</span></span></code></pre></div><h4 id="_3-2-example-2-move-l" tabindex="-1">3.2 Example 2 - Move L <a class="header-anchor" href="#_3-2-example-2-move-l" aria-label="Permalink to &quot;3.2 Example 2 - Move L&quot;">​</a></h4><p>아래 예시는 Move L로 직교좌표계 100,200,300,0,90,0으로 이동하기 위한 서술형과 함수형 두 형태의 예시입니다.</p><h5 id="_3-2-1-서술형-명령어-예시" tabindex="-1">3.2.1 서술형 명령어 예시: <a class="header-anchor" href="#_3-2-1-서술형-명령어-예시" aria-label="Permalink to &quot;3.2.1 서술형 명령어 예시:&quot;">​</a></h5><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>“movetcp 0.2, 0.1, 100, 200, 300, 0, 90, 0”</span></span></code></pre></div><h5 id="_3-2-2-함수형-명령어-예시" tabindex="-1">3.2.2 함수형 명령어 예시: <a class="header-anchor" href="#_3-2-2-함수형-명령어-예시" aria-label="Permalink to &quot;3.2.2 함수형 명령어 예시:&quot;">​</a></h5><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>“move_l(pnt[100, 200, 300, 0, 90, 0], 100, 300)”</span></span></code></pre></div><h3 id="_4-기타" tabindex="-1">4. 기타 <a class="header-anchor" href="#_4-기타" aria-label="Permalink to &quot;4. 기타&quot;">​</a></h3><p>Rainbow Robotics 에서는 &#39;외부제어 스크립트&#39; 예시 프로그램을 제공합니다.</p><ul><li>예시 프로그램에 대한 설명은 제품 매뉴얼 Appendix E에 서술되어 있습니다.</li><li>예시 프로그램은 두 가지 언어로 제공됩니다. (C++ &amp; C#)</li><li>예시 프로그램은 C++과 C#으로 구성되어 있지만, 앞서 설명된 것과 같이 사용자 개발 언어는 자유입니다.</li><li>Python, JAVA 등 다른 프로그래밍 언어를 사용해도 상관 없습니다.</li><li>TCP/IP 소켓 포트 5000/5001로 규정된 문법의 스크립트가 문자열 형태로 전송만 되면 됩니다.</li></ul><h4 id="_4-1-예시-프로그램-1" tabindex="-1">4.1 예시 프로그램 1 <a class="header-anchor" href="#_4-1-예시-프로그램-1" aria-label="Permalink to &quot;4.1 예시 프로그램 1&quot;">​</a></h4><ol><li>C++ 언어 기반<br></li><li>Qt (IDE 개발 프로그램) 5.8 기반으로 제공 (Qt는 기본적으로 무료이며, 가장 편리한 Window Gui 개발 프로그램 입니다.) <ul><li><a href="https://www.qt.io/" target="_blank" rel="noreferrer">https://www.qt.io/</a> (Qt 5.8버전 다운로드)</li></ul></li></ol><h4 id="_4-2-예시-프로그램-2" tabindex="-1">4.2 예시 프로그램 2 <a class="header-anchor" href="#_4-2-예시-프로그램-2" aria-label="Permalink to &quot;4.2 예시 프로그램 2&quot;">​</a></h4><ol><li>C# 언어 기반</li><li>Microsoft Visual Studio (VS) 기반으로 제공</li></ol>',47),u=[m];function _(b,g,P,v,k,C){return l(),i("div",null,u)}const f=a(d,[["render",_]]);export{x as __pageData,f as default};
