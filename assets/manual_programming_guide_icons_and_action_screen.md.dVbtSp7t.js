import{_ as t,c as a,o as e,U as o,tc as r,td as i,te as d,tf as n,tg as s,th as b,ti as f,tj as c,tk as v,tl as h,tm as l,tn as m,to as u,tp as p,tq as g,tr as _,ts as y,tt as T,tu as w,tv as I,tw as P,tx as k,ty as x,tz as M,tA as C,tB as S,tC as j,tD as A,tE as q,tF as L,tG as D,tH as E,tI as J,tJ as N,tK as B,tL as R,tM as U,tN as V,tO as O,tP as W,tQ as Y,tR as z,tS as $,tT as F,tU as H,tV as G,tW as Z,tX as K,tY as Q,tZ as X,t_ as tt,t$ as at,t7 as et,u0 as ot,t1 as rt,sZ as it,sY as dt,t4 as nt,ta as st,u1 as bt,u2 as ft,u3 as ct,u4 as vt,u5 as ht,u6 as lt,u7 as mt,u8 as ut,u9 as pt,sS as gt,ua as _t}from"./chunks/framework._bMY95IQ.js";const At=JSON.parse('{"title":"ICONS AND ACTION SCREEN","description":"","frontmatter":{"layout":"doc","outline":"deep"},"headers":[],"relativePath":"manual/programming_guide/icons_and_action_screen.md","filePath":"manual/programming_guide/icons_and_action_screen.md"}'),yt={name:"manual/programming_guide/icons_and_action_screen.md"},Tt=o('<h1 id="icons-and-action-screen" tabindex="-1" data-v-705b23f8>ICONS AND ACTION SCREEN <a class="header-anchor" href="#icons-and-action-screen" aria-label="Permalink to &quot;ICONS AND ACTION SCREEN&quot;" data-v-705b23f8>​</a></h1><h3 id="make" tabindex="-1" data-v-705b23f8>Make <a class="header-anchor" href="#make" aria-label="Permalink to &quot;Make&quot;" data-v-705b23f8>​</a></h3><p data-v-705b23f8>Description of components in Make screen display</p><div class="center-align" data-v-705b23f8><img src="'+r+'" data-v-705b23f8><table data-v-705b23f8><tr data-v-705b23f8><th data-v-705b23f8>Num</th><th data-v-705b23f8>Description</th></tr><tr data-v-705b23f8><th data-v-705b23f8>①</th><td data-v-705b23f8>Show the program list in tree form.</td></tr><tr data-v-705b23f8><th data-v-705b23f8>②</th><td data-v-705b23f8>Shows the angle of each joint of the robot arm and the Cartesian coordinate position of the TCP.</td></tr><tr data-v-705b23f8><th data-v-705b23f8>③</th><td data-v-705b23f8>TCP Jog: can change the Cartesian coordinate position. (base/tool/user defined coordinate system Selectable)<br data-v-705b23f8> Joint: Jog: can change the angle of each joint.</td></tr><tr data-v-705b23f8><th data-v-705b23f8>④</th><td data-v-705b23f8>Button to switch to Simulation or Real mode.<br data-v-705b23f8> ※Real mode must be selected to drive the real robot arm.</td></tr><tr data-v-705b23f8><th data-v-705b23f8>⑤</th><td data-v-705b23f8>Can import saved projects and create new projects.</td></tr><tr data-v-705b23f8><th data-v-705b23f8>⑥</th><td data-v-705b23f8>Starts or stops the program and exists Motion Speed Adjustment Bar.</td></tr><tr data-v-705b23f8><th data-v-705b23f8>⑦</th><td data-v-705b23f8>Various editing tools are located, such as Copy/Paste/Annotations.</td></tr><tr data-v-705b23f8><th data-v-705b23f8>⑧</th><td data-v-705b23f8>Various program functions (command/action) are deployed.<br data-v-705b23f8> Click the arrow on the right to include more functions.</td></tr><tr data-v-705b23f8><th data-v-705b23f8>⑨</th><td data-v-705b23f8>Determines Jog Method – either Smooth Mode or Tick Mode.</td></tr></table></div><div class="tip custom-block" data-v-705b23f8><p class="custom-block-title" data-v-705b23f8>TIP</p><ul data-v-705b23f8><li data-v-705b23f8>Teaching: programming RB’s motion by means of moving the robot by hand</li><li data-v-705b23f8>TCP (Tool Center Point): The point defined for the tool center point within the robot’s base coordinate system. It may also be the origin of the end-effector.</li></ul></div><div class="center-align" data-v-705b23f8><figure data-v-705b23f8><img src="'+i+'" alt="missing" data-v-705b23f8><br data-v-705b23f8><figcaption style="text-align:center;" data-v-705b23f8>[ Basic View Mode ]</figcaption></figure><br data-v-705b23f8><figure data-v-705b23f8><img src="'+d+'" alt="missing" data-v-705b23f8><br data-v-705b23f8><figcaption style="text-align:center;" data-v-705b23f8>[ Icon Extended View Mode ]</figcaption></figure><br data-v-705b23f8><figure data-v-705b23f8><img src="'+n+'" alt="missing" data-v-705b23f8><br data-v-705b23f8><figcaption style="text-align:center;" data-v-705b23f8>[ Program-only Mode ]</figcaption></figure></div><br data-v-705b23f8><h4 id="_1-teaching-icon-function-icon-make-screen" tabindex="-1" data-v-705b23f8>1. Teaching Icon (Function Icon, Make screen) <a class="header-anchor" href="#_1-teaching-icon-function-icon-make-screen" aria-label="Permalink to &quot;1. Teaching Icon (Function Icon, Make screen)&quot;" data-v-705b23f8>​</a></h4><div class="center-align" data-v-705b23f8><table data-v-705b23f8><tr data-v-705b23f8><th data-v-705b23f8>Icon</th><th data-v-705b23f8>Description</th></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+s+'" data-v-705b23f8></th><td data-v-705b23f8> You can set the movement methods for the robot arm for teaching.<br data-v-705b23f8> There are two types of movements: Move J,<br data-v-705b23f8> which moves each joint to the specified target joint angles,<br data-v-705b23f8> and Move L, which moves the TCP linearly to the specified target TCP values.<br data-v-705b23f8> Additionally, there are four other movements that can be applied based on<br data-v-705b23f8> these two basic movements: Move JB, Move PB, Move JL,<br data-v-705b23f8> Move ITPL, and Move Pro, making a total of seven built-in movements. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+b+'" data-v-705b23f8></th><td data-v-705b23f8> This feature allows you to input the target values as sub-items of the movements.<br data-v-705b23f8> For Move J and Move JB, the target values are the joint angle values.<br data-v-705b23f8> For Move L, Move PB, Move JL, Move Pro, and Move ITPL, the target values are<br data-v-705b23f8> the orthogonal coordinates of the TCP (x, y, z, rx, ry, rz). </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+f+'" data-v-705b23f8></th><td data-v-705b23f8> In addition to the Move, there is a feature specifically for circular motion.<br data-v-705b23f8> It includes a mode for drawing an arc by specifying a starting point<br data-v-705b23f8> and two additional points, forming an arc that passes through all three points.<br data-v-705b23f8> There is also a mode that allows you to draw a circle by setting a center point<br data-v-705b23f8> and a rotation axis. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+c+'" data-v-705b23f8></th><td data-v-705b23f8> This is a function that can be used by storing certain posture/position information<br data-v-705b23f8> as a variable and then referring to (calling) another motion function.<br data-v-705b23f8> However, this function itself does not move to that position. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+v+'" data-v-705b23f8></th><td data-v-705b23f8> This is the pin joint feature used to store and assign specific joint angle values as variables.<br data-v-705b23f8> It does not move to the specified location.<br data-v-705b23f8> Instead, the joint angle values are saved as variables and can be referenced (called)<br data-v-705b23f8> in other motion functions for use. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+h+'" data-v-705b23f8></th><td data-v-705b23f8> This function moves the robot to either the starting position of the program or<br data-v-705b23f8> the zero position of the robot&#39;s joints.<br data-v-705b23f8> The movement method can be chosen between Move J and Move L. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+l+'" data-v-705b23f8></th><td data-v-705b23f8> This function allows the robot to wait for a specified condition or amount of time.<br data-v-705b23f8> There are 5 modes available:<br data-v-705b23f8> waiting for a specified time, waiting while a condition is true,<br data-v-705b23f8> ending the wait when a condition becomes true,<br data-v-705b23f8> waiting while an input condition is true, and<br data-v-705b23f8> ending the wait when an input condition becomes true. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+m+'" data-v-705b23f8></th><td data-v-705b23f8> This feature helps organize program commands into modules by grouping them under sub-items.<br data-v-705b23f8> Each folder can be named differently, making it easier to manage the program. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+u+'" data-v-705b23f8></th><td data-v-705b23f8> This icon allows a user to add a comment or memo to the program. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+p+'" data-v-705b23f8></th><td data-v-705b23f8> This function allows for program termination and the display of an alarm pop-up message.<br data-v-705b23f8> There are four options: terminate the program, terminate only the sub-program,<br data-v-705b23f8> terminate only the folder&#39;s sub-programs, and display an alarm pop-up message. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+g+'" data-v-705b23f8></th><td data-v-705b23f8> This is the Debug function for internal value debugging.<br data-v-705b23f8> There are two options: Debug Pop-up and User Log.<br data-v-705b23f8> The Debug Pop-up allows you to check specific variable values or<br data-v-705b23f8> internal parameters by requesting them in a pop-up format.<br data-v-705b23f8> The User Log lets you leave a string or string variable in the log system.<br data-v-705b23f8> However, logging too frequently may affect the system. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+_+'" data-v-705b23f8></th><td data-v-705b23f8> The user input function pauses during program execution to allow users to change<br data-v-705b23f8> the value of a variable/arrangement/point/character/global/ROM by entering it.<br data-v-705b23f8> You can change the value, ignore it, and skip it, depending on your situation. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+y+'" data-v-705b23f8></th><td data-v-705b23f8> This function is for controlling external axis in addition to the robot.<br data-v-705b23f8> Up to 6 can be added. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+T+'" data-v-705b23f8></th><td data-v-705b23f8> This icon is used to create a conditional statement.<br data-v-705b23f8> A user can generate separate motion program branches depending on conditions using If, Else if, and Else. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+w+'" data-v-705b23f8></th><td data-v-705b23f8> This icon is used to create another type of conditional statement. For the Switch statement, a user defines each case. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+I+'" data-v-705b23f8></th><td data-v-705b23f8> This feature includes the Pre Program, which executes the contents only once at the beginning, and the Post Program,<br data-v-705b23f8> which defines functions to be performed after the program ends.<br data-v-705b23f8> In cases where the program runs continuously, such as in Play mode, the Pre Program content is executed only once.<br data-v-705b23f8> For one-time commands like variable declaration or communication setup, you can manage them under the Pre Program.<br data-v-705b23f8> The functions declared under the Post Program are executed sequentially after the program ends.<br data-v-705b23f8> Motion-related commands cannot be used in the Post Program. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+P+'" data-v-705b23f8></th><td data-v-705b23f8> This is the Set function. It allows you to configure various setting parameters<br data-v-705b23f8> that are typically set in the Setup menu directly within the program.<br data-v-705b23f8> You can change specific setting parameters during program execution. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+k+'" data-v-705b23f8></th><td data-v-705b23f8> The TCP setting function allows you to temporarily change the TCP value<br data-v-705b23f8> during program execution by loading a pre-saved TCP value.<br data-v-705b23f8> TCP values can be saved in advance in the Tool List on the Setup page. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+x+'" data-v-705b23f8></th><td data-v-705b23f8> This manual operation feature allows you to pause the program and<br data-v-705b23f8> perform direct teaching during its execution. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+M+'" data-v-705b23f8></th><td data-v-705b23f8> It is a function to operate the robot joint and the external axis at the same time. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+C+'" data-v-705b23f8></th><td data-v-705b23f8> This is a loop function. It repeats the sub-program based on a specified condition or number of times.<br data-v-705b23f8> There are four modes:<br data-v-705b23f8> repeating a set number of times, repeating while a condition is true,<br data-v-705b23f8> the Do While function (executes at least once and continues while the condition is true),<br data-v-705b23f8> and ending the loop when the condition becomes true. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+S+'" data-v-705b23f8></th><td data-v-705b23f8> This function forcefully breaks out of a loop. It is used under the repeat function,<br data-v-705b23f8> and even if a specific condition is declared for the loop,<br data-v-705b23f8> using the break function allows you to exit the loop early.<br data-v-705b23f8> Additionally, the continue function moves the program flow to the top of the loop,<br data-v-705b23f8> the program logic jump function allows you to jump to a logic point marked with Here,<br data-v-705b23f8> and there is also a function to jump to a folder or the logic jump destination. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+j+'" data-v-705b23f8></th><td data-v-705b23f8> This is the thread function, which includes two options:<br data-v-705b23f8> adding a general/non-stop thread and calling an event thread.<br data-v-705b23f8> There are five thread properties: general thread, non-stop thread, non-stop thread 2,<br data-v-705b23f8> event general thread, and event non-stop thread.<br data-v-705b23f8> The sub-items of the thread function run in parallel with the main program.<br data-v-705b23f8> However, motion-related commands cannot be placed under the thread function. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+A+'" data-v-705b23f8></th><td data-v-705b23f8> The G-code function is available when a G-code file is placed in the specified folder.<br data-v-705b23f8> The robot will execute the path defined by the G-code. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+q+'" data-v-705b23f8></th><td data-v-705b23f8> This is a function to replay a recorded motion using the motion recording feature.<br data-v-705b23f8> The motion recorded via direct teaching can be replayed using either the J or L type with this feature. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+L+'" data-v-705b23f8></th><td data-v-705b23f8> This function adjusts the TCP position based on feedback from the welding current via analog input signals.<br data-v-705b23f8> The user must adjust the current/voltage signal according to the analog input range (0~10V) provided by Rainbow. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+D+'" data-v-705b23f8></th><td data-v-705b23f8> This function automatically generates predefined motions.<br data-v-705b23f8> Multiple predefined motions are available, and you can modify the parameters to create the desired motion. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+E+'" data-v-705b23f8></th><td data-v-705b23f8> This command controls the digital output of the control box. There are seven functions:<br data-v-705b23f8> individual output, bit combination output, signal toggle output, full signal output,<br data-v-705b23f8> unit pulse output, pulse width modulation (PWM), and condition-based output.<br data-v-705b23f8> The selected signal is output through the chosen port among the 16 ports available.<br data-v-705b23f8> Each port can be set to High, Low, or Bypass signals. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+J+'" data-v-705b23f8></th><td data-v-705b23f8> This command controls the analog output of the control box.<br data-v-705b23f8> The selected voltage is output through the chosen port among the four analog ports available.<br data-v-705b23f8> Each port can output a voltage range of 0~10V.<br data-v-705b23f8> There are two functions: individual analog output and speed-based analog output. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+N+'" data-v-705b23f8></th><td data-v-705b23f8> The tool flange has two digital outputs. You can assign signals to these two digital outputs.<br data-v-705b23f8> Additionally, the voltage level (0V, 12V, or 24V) for the output from the tool flange can be adjusted. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+B+'" data-v-705b23f8></th><td data-v-705b23f8> This is the gripper function. Functions for third-party grippers are pre-installed.<br data-v-705b23f8> By selecting the gripper you wish to use and the function provided by that gripper,<br data-v-705b23f8> the system helps you easily operate the gripper automatically. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+R+'" data-v-705b23f8></th><td data-v-705b23f8> This function is available when an I/O expansion module is added.<br data-v-705b23f8> You can configure the digital/analog outputs of the I/O expansion module,<br data-v-705b23f8> which works similarly to the existing digital and analog output functions. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+U+'" data-v-705b23f8></th><td data-v-705b23f8> This is a dedicated macro function for arc welding.<br data-v-705b23f8> It groups functions that can be implemented through common D.out or Wait functions<br data-v-705b23f8> into a macro format for quick use.<br data-v-705b23f8> Settings for the arc welder are performed in Setup &gt; Device. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+V+'" data-v-705b23f8></th><td data-v-705b23f8> This function is for using digital welders.<br data-v-705b23f8> After selecting the brand of digital welder to be used,<br data-v-705b23f8> you can choose the mode and options to easily operate the digital welder. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+O+'" data-v-705b23f8></th><td data-v-705b23f8> This is a script function that allows the user to write custom scripts.<br data-v-705b23f8> It can be used for specific calculations, variable substitution,<br data-v-705b23f8> and assignment beyond the basic functions. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+W+'" data-v-705b23f8></th><td data-v-705b23f8> This is the Assign function for declaring variables, with five types available.<br data-v-705b23f8> The types include variable for storing single numbers,<br data-v-705b23f8> array for storing arrays of numbers,<br data-v-705b23f8> point for storing positional information (x, y, z, rx, ry, rz),<br data-v-705b23f8> joint for storing joint angle information, and string for storing text. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+Y+'" data-v-705b23f8></th><td data-v-705b23f8> This function declares variables (single variables, arrays, point variables, etc.)<br data-v-705b23f8> for real-time monitoring during program execution.<br data-v-705b23f8> Variables declared in the monitoring function can be observed in real-time<br data-v-705b23f8> during program execution by clicking the monitor icon on the right side of the Make/Play page. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+z+'" data-v-705b23f8></th><td data-v-705b23f8> This function enables RS485/232 output via the tool flange/control box.<br data-v-705b23f8> You can output in ASCII mode or hex mode.<br data-v-705b23f8> The communication protocol is set in the Setup &gt; Socket/Serial menu. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+$+'" data-v-705b23f8></th><td data-v-705b23f8> This is a socket communication function.<br data-v-705b23f8> It allows you to open a socket, connect to a specific server, send request messages,<br data-v-705b23f8> and receive specific data from the server.<br data-v-705b23f8> Up to five different servers can be connected simultaneously. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+F+'" data-v-705b23f8></th><td data-v-705b23f8> This is a Modbus client function.<br data-v-705b23f8> It allows requesting data from a specific IP/address and retrieving the returned data.<br data-v-705b23f8> The request interval and format can be specified.<br data-v-705b23f8> A separate protocol is provided for the Modbus server included with this product. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+H+'" data-v-705b23f8></th><td data-v-705b23f8> This function integrates features for using external products like HMI and PLC easily.<br data-v-705b23f8> You can select the desired product and its specific features for use. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+G+'" data-v-705b23f8></th><td data-v-705b23f8> This function allows you to insert a pre-created program file (teaching file) into the current project.<br data-v-705b23f8> There are three options: sub-program call, copy command content, and switch program.<br data-v-705b23f8> The sub-program call allows viewing the sub-project without modification.<br data-v-705b23f8> If modification is necessary, the sub-project must be opened separately.<br data-v-705b23f8> The copy command content option lets you insert another program file into the current document in an editable form.<br data-v-705b23f8> Unlike sub-program call, which simply calls the program,<br data-v-705b23f8> copy command content copies the program in a modifiable format.<br data-v-705b23f8> The switch program option is used when you want to replace the main program with another project. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+Z+'" data-v-705b23f8></th><td data-v-705b23f8> This function defines repetitive actions.<br data-v-705b23f8> It defines the space where the repeated actions will be performed and the actions at each location.<br data-v-705b23f8> The same actions will be performed at all defined points.<br data-v-705b23f8> This function is useful for implementing palletizing. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+K+'" data-v-705b23f8></th><td data-v-705b23f8> This is a conveyor tracking function.<br data-v-705b23f8> Once the conveyor speed and direction are set, the sub-actions (L, PB, ITPL, Pro, Circle)<br data-v-705b23f8> of the conveyor function will be added to the conveyor flow. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+Q+'" data-v-705b23f8></th><td data-v-705b23f8> This is a force control function.<br data-v-705b23f8> You can select the direction and coordinate system for the desired force.<br data-v-705b23f8> Sub-actions under force control will have this force control feature applied automatically. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+X+'" data-v-705b23f8></th><td data-v-705b23f8> This is a dedicated function for weaving movements.<br data-v-705b23f8> Movements like L-series and Circle under weaving are combined with the set weaving options.<br data-v-705b23f8> The available weaving patterns are Trapezoidal, SineWave, Triangle, C-Wave, and Circle. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+tt+'" data-v-705b23f8></th><td data-v-705b23f8> This is a dedicated function for weaving movements.<br data-v-705b23f8> Unlike the existing weaving functions, the reference for weaving is through the TCP coordinate system.<br data-v-705b23f8> Movements like L-series and Circle under weaving are combined with the set weaving options.<br data-v-705b23f8> The available weaving patterns are Trapezoidal, SineWave, Triangle, C-Wave, and Circle. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+at+'" data-v-705b23f8></th><td data-v-705b23f8> This function is used for welding applications.<br data-v-705b23f8> It detects the movement of the base material and reflects the movement and direction to proceed with welding. </td></tr></table></div><h4 id="_2-editing-icon-left-side-in-make-screen" tabindex="-1" data-v-705b23f8>2. Editing Icon (Left side in Make screen) <a class="header-anchor" href="#_2-editing-icon-left-side-in-make-screen" aria-label="Permalink to &quot;2. Editing Icon (Left side in Make screen)&quot;" data-v-705b23f8>​</a></h4><div class="center-align" data-v-705b23f8><table data-v-705b23f8><tr data-v-705b23f8><th data-v-705b23f8>Icon</th><th data-v-705b23f8>Description</th></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+et+'" data-v-705b23f8></th><td data-v-705b23f8> You can raise or lower commands one space at a time. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+ot+'" data-v-705b23f8></th><td data-v-705b23f8> Revert the operation to a step before, after, up to 50 times. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+rt+'" data-v-705b23f8></th><td data-v-705b23f8> It can copy the selected command and you can the copied command to a different location. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+it+'" data-v-705b23f8></th><td data-v-705b23f8> It can paste the copied or cut command into the selected location. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+dt+'" data-v-705b23f8></th><td data-v-705b23f8> It can cut the selected command. This command can be pasted to a different location. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+nt+'" data-v-705b23f8></th><td data-v-705b23f8> It can delete the selected command. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+st+'" data-v-705b23f8></th><td data-v-705b23f8> This is Annotation function. It prevents the selected command from running.<br data-v-705b23f8> Annotated commands exist in the program but not executed.<br data-v-705b23f8> If you press the disable button on the annotated command, it is activated. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+bt+'" data-v-705b23f8></th><td data-v-705b23f8> It can mark the highlight (marking) in the desired program line.<br data-v-705b23f8> Therefore, you can underline important program lines.<br data-v-705b23f8> There are two colors, blue and pink. </td></tr></table></div><h4 id="_3-jog-and-other-utilities-right-side-of-make-screen" tabindex="-1" data-v-705b23f8>3. Jog and other utilities (Right side of Make screen) <a class="header-anchor" href="#_3-jog-and-other-utilities-right-side-of-make-screen" aria-label="Permalink to &quot;3. Jog and other utilities (Right side of Make screen)&quot;" data-v-705b23f8>​</a></h4><div class="center-align" data-v-705b23f8><table data-v-705b23f8><tr data-v-705b23f8><th data-v-705b23f8>Icon</th><th data-v-705b23f8>Description</th></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+ft+'" data-v-705b23f8></th><td data-v-705b23f8> It can move TCP’s position relative to a global coordinate system fixed to the base. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+ct+'" data-v-705b23f8></th><td data-v-705b23f8> It can move the position of TCP based on the local coordinate system<br data-v-705b23f8> (tool coordinate system) fixed to TCP. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+vt+'" data-v-705b23f8></th><td data-v-705b23f8> It can move the position of TCP based on the user-defined coordinate system<br data-v-705b23f8> (User Coordinate). </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+ht+'" data-v-705b23f8></th><td data-v-705b23f8> It can allow to move each joint of the robot arm separately. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+lt+'" data-v-705b23f8></th><td data-v-705b23f8> This is a collection of settings such as User coordinate system settings,<br data-v-705b23f8> automatic TCP find, and other easy-to-use settings with a Jog.<br data-v-705b23f8> These settings can also be set in the Setup menu by default. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+mt+'" data-v-705b23f8></th><td data-v-705b23f8> This is a collection of special features which can view status and set-up values<br data-v-705b23f8> such as I/O status information of the system,<br data-v-705b23f8> user-coordinate Setting information and current/temperature information of the robot. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+ut+'" data-v-705b23f8></th><td data-v-705b23f8> It is a window for real-time observation of the values selected variables through<br data-v-705b23f8> the Monitor function.<br data-v-705b23f8> In addition to the selected variables, system variables that need to be checked<br data-v-705b23f8> frequently are also displayed. </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+pt+'" data-v-705b23f8></th><td data-v-705b23f8> This function allows the user to select the UI mode.<br data-v-705b23f8> Users can select UI mode according to their level and environment.<br data-v-705b23f8> There are four mode options: Expert Mode, Beginner Mode,<br data-v-705b23f8> Welding Mode (Analog), and Welding Mode (Digital). </td></tr></table></div><h4 id="_4-system-function-button" tabindex="-1" data-v-705b23f8>4. System function button <a class="header-anchor" href="#_4-system-function-button" aria-label="Permalink to &quot;4. System function button&quot;" data-v-705b23f8>​</a></h4><div class="center-align" data-v-705b23f8><table data-v-705b23f8><tr data-v-705b23f8><th data-v-705b23f8>Icon</th><th data-v-705b23f8>Description</th></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+gt+'" data-v-705b23f8></th><td data-v-705b23f8> This icon is used to move to home screen &amp; another page.<br data-v-705b23f8> (It is located in the top left.). </td></tr><tr data-v-705b23f8><th data-v-705b23f8><img src="'+_t+'" data-v-705b23f8></th><td data-v-705b23f8> This icon is used to power off the UI.<br data-v-705b23f8> When the tablet PC is connected to the robot,<br data-v-705b23f8> the robot will also be turned off.<br data-v-705b23f8> Screen Lock function is included in here. (It is located in the bottom right.). </td></tr></table></div><div class="tip custom-block" data-v-705b23f8><p class="custom-block-title" data-v-705b23f8>TIP</p><ul data-v-705b23f8><li data-v-705b23f8>A detailed description of each function is described later.</li></ul></div>',16),wt=[Tt];function It(Pt,kt,xt,Mt,Ct,St){return e(),a("div",null,wt)}const qt=t(yt,[["render",It],["__scopeId","data-v-705b23f8"]]);export{At as __pageData,qt as default};
