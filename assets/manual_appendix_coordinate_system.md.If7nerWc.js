import{_ as e,c as t,o,U as a,q$ as i}from"./chunks/framework.q5CotVXo.js";const b=JSON.parse('{"title":"Coordinate System","description":"","frontmatter":{"layout":"doc","outline":"deep"},"headers":[],"relativePath":"manual/appendix/coordinate_system.md","filePath":"manual/appendix/coordinate_system.md"}'),r={name:"manual/appendix/coordinate_system.md"},n=a('<h1 id="coordinate-system" tabindex="-1">Coordinate System <a class="header-anchor" href="#coordinate-system" aria-label="Permalink to &quot;Coordinate System&quot;">​</a></h1><p><img src="'+i+'" alt="missing"></p><h3 id="global-coordinate" tabindex="-1">Global Coordinate <a class="header-anchor" href="#global-coordinate" aria-label="Permalink to &quot;Global Coordinate&quot;">​</a></h3><p>Once the robot is fixed with the coordinate system fixed to the base of the robot, the global coordinate system is also fixed.<br> The center of the base surface is the origin. Set the robot direction to the +Z direction from the origin and the connector direction to the +Y direction from the origin.</p><h3 id="local-coordinate" tabindex="-1">Local Coordinate <a class="header-anchor" href="#local-coordinate" aria-label="Permalink to &quot;Local Coordinate&quot;">​</a></h3><p>Coordinate system fixed to TCP (Tool Center Point) of the robot, the direction of the axis changes in real time by setting or moving the TCP offset.<br> Set TCP as the origin and set the robot direction from the origin to the +Y direction and the teach button direction from the origin to the +Z direction.</p>',6),s=[n];function d(c,h,l,m,_,f){return o(),t("div",null,s)}const u=e(r,[["render",d]]);export{b as __pageData,u as default};
