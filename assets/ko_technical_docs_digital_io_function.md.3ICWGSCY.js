import{_ as a,c as e,o,U as r}from"./chunks/framework.XIocvv-P.js";const m=JSON.parse('{"title":"제어박스 디지털 I/O 특수 기능 v221004","description":"","frontmatter":{"layout":"doc","outline":"deep"},"headers":[],"relativePath":"ko/technical_docs/digital_io_function.md","filePath":"ko/technical_docs/digital_io_function.md"}'),t={name:"ko/technical_docs/digital_io_function.md"},i=r('<h1 id="제어박스-디지털-i-o-특수-기능-v221004" tabindex="-1">제어박스 디지털 I/O 특수 기능 v221004 <a class="header-anchor" href="#제어박스-디지털-i-o-특수-기능-v221004" aria-label="Permalink to &quot;제어박스 디지털 I/O 특수 기능 v221004&quot;">​</a></h1><h3 id="_1-제어박스-디지털-입력-기능-정의" tabindex="-1">1. 제어박스 디지털 입력 기능 정의 <a class="header-anchor" href="#_1-제어박스-디지털-입력-기능-정의" aria-label="Permalink to &quot;1. 제어박스 디지털 입력 기능 정의&quot;">​</a></h3><br><h4 id="_1-1-r-start-program-once" tabindex="-1">1.1 R=Start Program (Once) <a class="header-anchor" href="#_1-1-r-start-program-once" aria-label="Permalink to &quot;1.1 R=Start Program (Once)&quot;">​</a></h4><p>Idle 상황: 현재 제어 박스에 로드되어 있는 프로그램을 1회 실행합니다.<br> 일시 정지 상황: 프로그램을 재시작 합니다.<br> (Rising Edge)</p><h4 id="_1-2-r-stop-program" tabindex="-1">1.2 R=Stop Program <a class="header-anchor" href="#_1-2-r-stop-program" aria-label="Permalink to &quot;1.2 R=Stop Program&quot;">​</a></h4><p>재생 중인 동작 및 프로그램을 정지합니다.<br> (Rising Edge)</p><h4 id="_1-3-r-pause-program" tabindex="-1">1.3 R=Pause Program <a class="header-anchor" href="#_1-3-r-pause-program" aria-label="Permalink to &quot;1.3 R=Pause Program&quot;">​</a></h4><p>재생 중인 프로그램을 일시 정지합니다.<br> (Rising Edge)</p><h4 id="_1-4-r-freedriveon-f-off" tabindex="-1">1.4 R=FreeDriveOn / F=Off <a class="header-anchor" href="#_1-4-r-freedriveon-f-off" aria-label="Permalink to &quot;1.4 R=FreeDriveOn / F=Off&quot;">​</a></h4><p>R=직접 교시 모드를 시작합니다.<br> F=직접 교시 모드를 종료합니다.</p><h4 id="_1-5-r-speed-100-f-0" tabindex="-1">1.5 R=Speed 100% / F=0% <a class="header-anchor" href="#_1-5-r-speed-100-f-0" aria-label="Permalink to &quot;1.5 R=Speed 100% / F=0%&quot;">​</a></h4><p>R=속도 바를 100% 로 설정합니다.<br> F=속도 바를 0% 로 설정합니다.</p><h4 id="_1-6-r-real-mode-f-simulation" tabindex="-1">1.6 R=Real mode / F=simulation <a class="header-anchor" href="#_1-6-r-real-mode-f-simulation" aria-label="Permalink to &quot;1.6 R=Real mode / F=simulation&quot;">​</a></h4><p>R=리얼 로봇 모드로 전환합니다.<br> F=시뮬레이션 모드로 전환합니다.</p><h4 id="_1-7-r-initialize-robot" tabindex="-1">1.7 R=Initialize Robot <a class="header-anchor" href="#_1-7-r-initialize-robot" aria-label="Permalink to &quot;1.7 R=Initialize Robot&quot;">​</a></h4><p>로봇 팔을 활성화 (서보 온) 및 리얼 로봇 모드 전환합니다.<br> (Rising Edge)</p><h4 id="_1-8-h-temporary-collision-off" tabindex="-1">1.8 H=Temporary Collision off <a class="header-anchor" href="#_1-8-h-temporary-collision-off" aria-label="Permalink to &quot;1.8 H=Temporary Collision off&quot;">​</a></h4><p>외부 충돌 감지 기능을 Off 합니다.<br> (High State)</p><h4 id="_1-9-h-auto-initialize-key" tabindex="-1">1.9 H=Auto-Initialize Key <a class="header-anchor" href="#_1-9-h-auto-initialize-key" aria-label="Permalink to &quot;1.9 H=Auto-Initialize Key&quot;">​</a></h4><p>‘자동 활성화 with Key’ 설정의 사용을 위한 Key 포트 입니다.<br> (High State)</p><h4 id="_1-10-r-resume-from-out-coll-stop" tabindex="-1">1.10 R=Resume from Out Coll. Stop <a class="header-anchor" href="#_1-10-r-resume-from-out-coll-stop" aria-label="Permalink to &quot;1.10 R=Resume from Out Coll. Stop&quot;">​</a></h4><p>외부 충돌 감지로 인한 정지 상태를 해제합니다.<br> (Rising Edge)</p><h4 id="_1-11-r-point-add" tabindex="-1">1.11 R=Point Add <a class="header-anchor" href="#_1-11-r-point-add" aria-label="Permalink to &quot;1.11 R=Point Add&quot;">​</a></h4><p>로봇 팔의 현재 자세/위치 정보를 Move 기능 하위에 포인트로 추가합니다.<br> (Rising Edge)</p><h4 id="_1-12-r-start-program-repeat" tabindex="-1">1.12 R=Start Program (Repeat) <a class="header-anchor" href="#_1-12-r-start-program-repeat" aria-label="Permalink to &quot;1.12 R=Start Program (Repeat)&quot;">​</a></h4><p>Idle 상황: 현재 제어 박스에 로드되어 있는 프로그램을 반복 실행합니다.<br> 일시 정지 상황: 프로그램을 재시작 합니다.<br> (Rising Edge)</p><h4 id="_1-13-r-approach-to-begin" tabindex="-1">1.13 R=Approach to Begin <a class="header-anchor" href="#_1-13-r-approach-to-begin" aria-label="Permalink to &quot;1.13 R=Approach to Begin&quot;">​</a></h4><p>현재 제어 박스에 로드된 프로젝트에서 정의된 시작 위치 (홈 위치)로 이동합니다.<br> (Rising Edge)</p><h4 id="_1-14-r-program-resume" tabindex="-1">1.14 R=Program Resume <a class="header-anchor" href="#_1-14-r-program-resume" aria-label="Permalink to &quot;1.14 R=Program Resume&quot;">​</a></h4><p>일시 정지되어 있는 프로그램을 재시작 합니다.<br> (Rising Edge)</p><h4 id="_1-15-h-quick-freedrive-change" tabindex="-1">1.15 H=Quick Freedrive Change <a class="header-anchor" href="#_1-15-h-quick-freedrive-change" aria-label="Permalink to &quot;1.15 H=Quick Freedrive Change&quot;">​</a></h4><p>직접 교시 모드를 종료할 때 빠르게 Servo 락을 잡는 기능입니다.<br> (High State)</p><h4 id="_1-16-r-pause-f-resume-program" tabindex="-1">1.16 R=Pause / F=Resume Program <a class="header-anchor" href="#_1-16-r-pause-f-resume-program" aria-label="Permalink to &quot;1.16 R=Pause / F=Resume Program&quot;">​</a></h4><p>R=프로그램 일시 정지 합니다.<br> F=프로그램 재시작 합니다.</p><h4 id="_1-17-f-pause-r-resume-program" tabindex="-1">1.17 F=Pause / R=Resume Program <a class="header-anchor" href="#_1-17-f-pause-r-resume-program" aria-label="Permalink to &quot;1.17 F=Pause / R=Resume Program&quot;">​</a></h4><p>F=프로그램 일시 정지 합니다.<br> R=프로그램 재시작 합니다.</p><h4 id="_1-18-h-speed-100-f-0" tabindex="-1">1.18 H=Speed 100% / F=0% <a class="header-anchor" href="#_1-18-h-speed-100-f-0" aria-label="Permalink to &quot;1.18 H=Speed 100% / F=0%&quot;">​</a></h4><p>H=속도 바를 100% 로 설정합니다.<br> F=속도 바를 0%로 설정합니다.</p><h4 id="_1-19-r-load-default-program" tabindex="-1">1.19 R=Load Default Program <a class="header-anchor" href="#_1-19-r-load-default-program" aria-label="Permalink to &quot;1.19 R=Load Default Program&quot;">​</a></h4><p>제어 박스에 기본 프로그램으로 설정된 프로그램을 로드합니다.<br> (Rising Edge)</p><h4 id="_1-20-f-robot-arm-power-down" tabindex="-1">1.20 F=Robot Arm Power Down <a class="header-anchor" href="#_1-20-f-robot-arm-power-down" aria-label="Permalink to &quot;1.20 F=Robot Arm Power Down&quot;">​</a></h4><p>로봇 팔에 인가되는 DC전원을 Off 합니다.<br> (Falling Edge)</p><h4 id="_1-21-r-touch-sensing" tabindex="-1">1.21 R=Touch Sensing <a class="header-anchor" href="#_1-21-r-touch-sensing" aria-label="Permalink to &quot;1.21 R=Touch Sensing&quot;">​</a></h4><p>터치 센싱 기능 사용 시, 용접기에서 출력되는 터치 센싱 신호 선을 결선하는 포트입니다.<br> (Rising Edge)</p><h4 id="_1-22-f-touch-sensing" tabindex="-1">1.22 F=Touch Sensing <a class="header-anchor" href="#_1-22-f-touch-sensing" aria-label="Permalink to &quot;1.22 F=Touch Sensing&quot;">​</a></h4><p>터치 센싱 기능 사용 시, 용접기에서 출력되는 터치 센싱 신호 선을 결선하는 포트입니다.<br> (Falling Edge)</p><h4 id="_1-23-h-no-arc" tabindex="-1">1.23 H=No Arc <a class="header-anchor" href="#_1-23-h-no-arc" aria-label="Permalink to &quot;1.23 H=No Arc&quot;">​</a></h4><p>신호가 들어오면 (High-state 이면) No-Arc 기능을 활성화 합니다.<br> (High State)</p><h4 id="_1-24-h-program-start-block" tabindex="-1">1.24 H=Program Start Block <a class="header-anchor" href="#_1-24-h-program-start-block" aria-label="Permalink to &quot;1.24 H=Program Start Block&quot;">​</a></h4><p>해당 신호가 High-state 동안 프로그램 시작을 할 수 없습니다.<br> (High State)</p><h4 id="_1-25-r-ext-joint-0-plus-f-stop" tabindex="-1">1.25 R=Ext.Joint 0 Plus / F=stop <a class="header-anchor" href="#_1-25-r-ext-joint-0-plus-f-stop" aria-label="Permalink to &quot;1.25 R=Ext.Joint 0 Plus / F=stop&quot;">​</a></h4><p>R=부가 축 0번을 (+) 방향으로 이동 / F=정지</p><h4 id="_1-26-r-ext-joint-0-minus-f-stop" tabindex="-1">1.26 R=Ext.Joint 0 Minus / F=stop <a class="header-anchor" href="#_1-26-r-ext-joint-0-minus-f-stop" aria-label="Permalink to &quot;1.26 R=Ext.Joint 0 Minus / F=stop&quot;">​</a></h4><p>R=부가 축 0번을 (-) 방향으로 이동 / F=정지</p><h4 id="_1-27-r-ext-joint-1-plus-f-stop" tabindex="-1">1.27 R=Ext.Joint 1 Plus / F=stop <a class="header-anchor" href="#_1-27-r-ext-joint-1-plus-f-stop" aria-label="Permalink to &quot;1.27 R=Ext.Joint 1 Plus / F=stop&quot;">​</a></h4><p>R=부가 축 1번을 (+) 방향으로 이동 / F=정지</p><h4 id="_1-28-r-ext-joint-1-minus-f-stop" tabindex="-1">1.28 R=Ext.Joint 1 Minus / F=stop <a class="header-anchor" href="#_1-28-r-ext-joint-1-minus-f-stop" aria-label="Permalink to &quot;1.28 R=Ext.Joint 1 Minus / F=stop&quot;">​</a></h4><p>R=부가 축 1번을 (-) 방향으로 이동 / F=정지</p><h4 id="_1-29-r-ext-joint-2-plus-f-stop" tabindex="-1">1.29 R=Ext.Joint 2 Plus / F=stop <a class="header-anchor" href="#_1-29-r-ext-joint-2-plus-f-stop" aria-label="Permalink to &quot;1.29 R=Ext.Joint 2 Plus / F=stop&quot;">​</a></h4><p>R=부가 축 2번을 (+) 방향으로 이동 / F=정지</p><h4 id="_1-30-r-ext-joint-2-minus-f-stop" tabindex="-1">1.30 R=Ext.Joint 2 Minus / F=stop <a class="header-anchor" href="#_1-30-r-ext-joint-2-minus-f-stop" aria-label="Permalink to &quot;1.30 R=Ext.Joint 2 Minus / F=stop&quot;">​</a></h4><p>R=부가 축 2번을 (-) 방향으로 이동 / F=정지</p><h4 id="_1-31-h-safety-speed" tabindex="-1">1.31 H=Safety Speed <a class="header-anchor" href="#_1-31-h-safety-speed" aria-label="Permalink to &quot;1.31 H=Safety Speed&quot;">​</a></h4><p>로봇 팔의 동작 속도를 안전 속도 범위로 전환합니다.<br> (High State)</p><h4 id="_1-32-f-user-coord-0-←-tcp-frame" tabindex="-1">1.32 F=User Coord 0 ← TCP frame <a class="header-anchor" href="#_1-32-f-user-coord-0-←-tcp-frame" aria-label="Permalink to &quot;1.32 F=User Coord 0 ← TCP frame&quot;">​</a></h4><p>사용자 좌표계 0번의 설정 값을 현재 로봇 팔의 TCP 좌표계의 위치/회전과 동일하게 변경합니다.<br> (Falling Edge)</p><h4 id="_1-33-f-user-coord-1-←-tcp-frame" tabindex="-1">1.33 F=User Coord 1 ← TCP frame <a class="header-anchor" href="#_1-33-f-user-coord-1-←-tcp-frame" aria-label="Permalink to &quot;1.33 F=User Coord 1 ← TCP frame&quot;">​</a></h4><p>사용자 좌표계 1번의 설정 값을 현재 로봇 팔의 TCP 좌표계의 위치/회전과 동일하게 변경합니다.<br> (Falling Edge)</p><h4 id="_1-34-f-user-coord-2-←-tcp-frame" tabindex="-1">1.34 F=User Coord 2 ← TCP frame <a class="header-anchor" href="#_1-34-f-user-coord-2-←-tcp-frame" aria-label="Permalink to &quot;1.34 F=User Coord 2 ← TCP frame&quot;">​</a></h4><p>사용자 좌표계 2번의 설정 값을 현재 로봇 팔의 TCP 좌표계의 위치/회전과 동일하게 변경합니다.<br> (Falling Edge)</p><h4 id="_1-35-f-load-run-program-table" tabindex="-1">1.35 F=Load &amp; Run Program Table <a class="header-anchor" href="#_1-35-f-load-run-program-table" aria-label="Permalink to &quot;1.35 F=Load &amp; Run Program Table&quot;">​</a></h4><p>Program Table의 해당 입력 포트의 번호에 설정된 프로젝트를 로드하고 재생합니다.<br> (Falling Edge)</p><h4 id="_1-36-r-start-prog-once-f-stop-prog" tabindex="-1">1.36 R=Start Prog. (Once) / F=Stop Prog. <a class="header-anchor" href="#_1-36-r-start-prog-once-f-stop-prog" aria-label="Permalink to &quot;1.36 R=Start Prog. (Once) / F=Stop Prog.&quot;">​</a></h4><p>R=제어박스에 로드된 프로그램을 1회 실행 / F=프로그램 정지</p><h4 id="_1-37-r-start-prog-repeat-f-stop-prog" tabindex="-1">1.37 R=Start Prog. (Repeat) / F=Stop Prog. <a class="header-anchor" href="#_1-37-r-start-prog-repeat-f-stop-prog" aria-label="Permalink to &quot;1.37 R=Start Prog. (Repeat) / F=Stop Prog.&quot;">​</a></h4><p>R=제어박스에 로드된 프로그램을 반복 실행 / F=프로그램 정지</p><h4 id="_1-38-f-change-global-pinpoint-s-pos" tabindex="-1">1.38 F=Change Global Pinpoint #’s Pos <a class="header-anchor" href="#_1-38-f-change-global-pinpoint-s-pos" aria-label="Permalink to &quot;1.38 F=Change Global Pinpoint #’s Pos&quot;">​</a></h4><p>글로벌 핀-포인트의 자세 값을 로봇 팔의 현 자세 값으로 저장합니다.<br> (Falling Edge)</p><h4 id="_1-39-r-ext-joint-0-slow-plus-f-stop" tabindex="-1">1.39 R=EXT.Joint 0 Slow Plus / F=stop <a class="header-anchor" href="#_1-39-r-ext-joint-0-slow-plus-f-stop" aria-label="Permalink to &quot;1.39 R=EXT.Joint 0 Slow Plus / F=stop&quot;">​</a></h4><p>R=부가 축 0번을 느리게 (+) 방향으로 이동 / F=정지</p><h4 id="_1-40-r-ext-joint-0-slow-minus-f-stop" tabindex="-1">1.40 R=EXT.Joint 0 Slow Minus / F=stop <a class="header-anchor" href="#_1-40-r-ext-joint-0-slow-minus-f-stop" aria-label="Permalink to &quot;1.40 R=EXT.Joint 0 Slow Minus / F=stop&quot;">​</a></h4><p>R=부가 축 0번을 느리게 (-) 방향으로 이동 / F=정지</p><h4 id="_1-41-r-ext-joint-1-slow-plus-f-stop" tabindex="-1">1.41 R=EXT.Joint 1 Slow Plus / F=stop <a class="header-anchor" href="#_1-41-r-ext-joint-1-slow-plus-f-stop" aria-label="Permalink to &quot;1.41 R=EXT.Joint 1 Slow Plus / F=stop&quot;">​</a></h4><p>R=부가 축 1번을 느리게 (+) 방향으로 이동 / F=정지</p><h4 id="_1-42-r-ext-joint-1-slow-minus-f-stop" tabindex="-1">1.42 R=EXT.Joint 1 Slow Minus / F=stop <a class="header-anchor" href="#_1-42-r-ext-joint-1-slow-minus-f-stop" aria-label="Permalink to &quot;1.42 R=EXT.Joint 1 Slow Minus / F=stop&quot;">​</a></h4><p>R=부가 축 1번을 느리게 (-) 방향으로 이동 / F=정지</p><h4 id="_1-43-r-ext-joint-2-slow-plus-f-stop" tabindex="-1">1.43 R=EXT.Joint 2 Slow Plus / F=stop <a class="header-anchor" href="#_1-43-r-ext-joint-2-slow-plus-f-stop" aria-label="Permalink to &quot;1.43 R=EXT.Joint 2 Slow Plus / F=stop&quot;">​</a></h4><p>R=부가 축 2번을 느리게 (+) 방향으로 이동 / F=정지</p><h4 id="_1-44-r-ext-joint-2-slow-minus-f-stop" tabindex="-1">1.44 R=EXT.Joint 2 Slow Minus / F=stop <a class="header-anchor" href="#_1-44-r-ext-joint-2-slow-minus-f-stop" aria-label="Permalink to &quot;1.44 R=EXT.Joint 2 Slow Minus / F=stop&quot;">​</a></h4><p>R=부가 축 2번을 느리게 (-) 방향으로 이동 / F=정지</p><h4 id="_1-45-r-reset-sos" tabindex="-1">1.45 R=Reset SOS <a class="header-anchor" href="#_1-45-r-reset-sos" aria-label="Permalink to &quot;1.45 R=Reset SOS&quot;">​</a></h4><p>SOS 상태를 초기화 (리셋) 합니다.<br> (Rising Edge)</p><h4 id="_1-46-f-reset-sos" tabindex="-1">1.46 F=Reset SOS <a class="header-anchor" href="#_1-46-f-reset-sos" aria-label="Permalink to &quot;1.46 F=Reset SOS&quot;">​</a></h4><p>SOS 상태를 초기화 (리셋) 합니다.<br> (Falling Edge)</p><h3 id="_2-제어박스-디지털-출력-기능-정의" tabindex="-1">2. 제어박스 디지털 출력 기능 정의 <a class="header-anchor" href="#_2-제어박스-디지털-출력-기능-정의" aria-label="Permalink to &quot;2. 제어박스 디지털 출력 기능 정의&quot;">​</a></h3><br><h4 id="_2-1-h-program-run-l-idle" tabindex="-1">2.1 H=Program Run / L=Idle <a class="header-anchor" href="#_2-1-h-program-run-l-idle" aria-label="Permalink to &quot;2.1 H=Program Run / L=Idle&quot;">​</a></h4><p>H=프로그램 실행 중 or 동작 명령 실행 중<br> L=Idle 상황</p><h4 id="_2-2-l-program-run-h-idle" tabindex="-1">2.2 L=Program Run / H=Idle <a class="header-anchor" href="#_2-2-l-program-run-h-idle" aria-label="Permalink to &quot;2.2 L=Program Run / H=Idle&quot;">​</a></h4><p>L=프로그램 실행 중 or 동작 명령 실행 중<br> H=Idle 상황</p><h4 id="_2-3-h-collision-detected" tabindex="-1">2.3 H=Collision Detected <a class="header-anchor" href="#_2-3-h-collision-detected" aria-label="Permalink to &quot;2.3 H=Collision Detected&quot;">​</a></h4><p>외부 충돌 (Out-Collision) 혹은 자가 충돌 (Self-Collision)이 감지되었는지 여부를 나타냅니다.<br> (High State)</p><h4 id="_2-4-h-direct-teaching-mode" tabindex="-1">2.4 H=Direct Teaching mode <a class="header-anchor" href="#_2-4-h-direct-teaching-mode" aria-label="Permalink to &quot;2.4 H=Direct Teaching mode&quot;">​</a></h4><p>직접 교시 모드 실행 중임을 나타냅니다.<br> (High State)</p><h4 id="_2-5-bypass-din" tabindex="-1">2.5 Bypass Din # <a class="header-anchor" href="#_2-5-bypass-din" aria-label="Permalink to &quot;2.5 Bypass Din \\#&quot;">​</a></h4><p>선택 포트와 동일한 번호의 디지털 입력 신호를 전달합니다.</p><h4 id="_2-6-bypass-tool-din-0" tabindex="-1">2.6 Bypass Tool Din 0 <a class="header-anchor" href="#_2-6-bypass-tool-din-0" aria-label="Permalink to &quot;2.6 Bypass Tool Din 0&quot;">​</a></h4><p>툴 플랜지 입력 포트 0번 신호 전달합니다.</p><h4 id="_2-7-bypass-tool-din-1" tabindex="-1">2.7 Bypass Tool Din 1 <a class="header-anchor" href="#_2-7-bypass-tool-din-1" aria-label="Permalink to &quot;2.7 Bypass Tool Din 1&quot;">​</a></h4><p>툴 플랜지 입력 포트 1번 신호 전달합니다.</p><h4 id="_2-8-h-robot-ready-l-not-init" tabindex="-1">2.8 H=Robot Ready / L=Not Init. <a class="header-anchor" href="#_2-8-h-robot-ready-l-not-init" aria-label="Permalink to &quot;2.8 H=Robot Ready / L=Not Init.&quot;">​</a></h4><p>H=로봇 팔 활성화 상태<br> L=로봇 팔 비활성화 상태</p><h4 id="_2-9-h-real-mode-l-simulation" tabindex="-1">2.9 H=Real mode / L=Simulation <a class="header-anchor" href="#_2-9-h-real-mode-l-simulation" aria-label="Permalink to &quot;2.9 H=Real mode / L=Simulation&quot;">​</a></h4><p>H=리얼 로봇 모드 상태<br> L=시뮬레이션 모드 상태</p><h4 id="_2-10-h-robot-moving-l-idle" tabindex="-1">2.10 H=Robot Moving / L=Idle <a class="header-anchor" href="#_2-10-h-robot-moving-l-idle" aria-label="Permalink to &quot;2.10 H=Robot Moving / L=Idle&quot;">​</a></h4><p>H=로봇 팔이 움직이고 있을 때<br> L=로봇 팔이 정지 상태 일 때</p><h4 id="_2-11-l-robot-moving-h-idle" tabindex="-1">2.11 L=Robot Moving / H=Idle <a class="header-anchor" href="#_2-11-l-robot-moving-h-idle" aria-label="Permalink to &quot;2.11 L=Robot Moving / H=Idle&quot;">​</a></h4><p>L=로봇 팔이 움직이고 있을 때<br> H=로봇 팔이 정지 상태 일 때</p><h4 id="_2-12-h-robot-initialize-fail" tabindex="-1">2.12 H=Robot Initialize Fail <a class="header-anchor" href="#_2-12-h-robot-initialize-fail" aria-label="Permalink to &quot;2.12 H=Robot Initialize Fail&quot;">​</a></h4><p>로봇 팔 활성화 과정 중에 실패하였을 때<br> (High State)</p><h4 id="_2-13-h-robot-power-on-l-off" tabindex="-1">2.13 H=Robot Power On / L=Off <a class="header-anchor" href="#_2-13-h-robot-power-on-l-off" aria-label="Permalink to &quot;2.13 H=Robot Power On / L=Off&quot;">​</a></h4><p>H=로봇 팔에 DC 전원 인가 상태<br> L=전원 비인가 상태</p><h4 id="_2-14-h-coll-detection-on-l-off" tabindex="-1">2.14 H=Coll. Detection On / L=Off <a class="header-anchor" href="#_2-14-h-coll-detection-on-l-off" aria-label="Permalink to &quot;2.14 H=Coll. Detection On / L=Off&quot;">​</a></h4><p>H=외부 충돌 감지 모드가 On 상태<br> L=외부 충돌 감지 모드가 Off 상태</p><h4 id="_2-15-h-pause-state" tabindex="-1">2.15 H=Pause state <a class="header-anchor" href="#_2-15-h-pause-state" aria-label="Permalink to &quot;2.15 H=Pause state&quot;">​</a></h4><p>프로그램 및 동작이 일시 정지 상태임을 나타냅니다.<br> (High State)</p><h4 id="_2-16-h-inbox-0-trap-flag-on" tabindex="-1">2.16 H=Inbox 0 Trap Flag On <a class="header-anchor" href="#_2-16-h-inbox-0-trap-flag-on" aria-label="Permalink to &quot;2.16 H=Inbox 0 Trap Flag On&quot;">​</a></h4><p>인-박스 0번에 트랩이 발생한 상태를 나타냅니다.<br> (High State)</p><h4 id="_2-17-h-inbox-1-trap-flag-on" tabindex="-1">2.17 H=Inbox 1 Trap Flag On <a class="header-anchor" href="#_2-17-h-inbox-1-trap-flag-on" aria-label="Permalink to &quot;2.17 H=Inbox 1 Trap Flag On&quot;">​</a></h4><p>인-박스 1번에 트랩이 발생한 상태를 나타냅니다.<br> (High State)</p><h4 id="_2-18-pwm-module" tabindex="-1">2.18 PWM Module <a class="header-anchor" href="#_2-18-pwm-module" aria-label="Permalink to &quot;2.18 PWM Module&quot;">​</a></h4><p>해당 포트를 PWM 모듈로 사용합니다.</p><h4 id="_2-19-h-tpu-is-conndected" tabindex="-1">2.19 H=TPU is conndected <a class="header-anchor" href="#_2-19-h-tpu-is-conndected" aria-label="Permalink to &quot;2.19 H=TPU is conndected&quot;">​</a></h4><p>티칭 팬던트 (Ui)가 연결된 상태를 나타냅니다.<br> (High State)</p><h4 id="_2-20-h-run-in-make-page" tabindex="-1">2.20 H=Run in MAKE page <a class="header-anchor" href="#_2-20-h-run-in-make-page" aria-label="Permalink to &quot;2.20 H=Run in MAKE page&quot;">​</a></h4><p>현재 MAKE 창에서 프로그램이 실행중임을 나타냅니다.<br> (High State)</p><h4 id="_2-21-h-run-in-play-page" tabindex="-1">2.21 H=Run in PLAY page <a class="header-anchor" href="#_2-21-h-run-in-play-page" aria-label="Permalink to &quot;2.21 H=Run in PLAY page&quot;">​</a></h4><p>현재 PLAY 창에서 프로그램이 실행중임을 나타냅니다.<br> (High State)</p><h4 id="_2-22-h-is-conveyor-mode" tabindex="-1">2.22 H=Is Conveyor mode <a class="header-anchor" href="#_2-22-h-is-conveyor-mode" aria-label="Permalink to &quot;2.22 H=Is Conveyor mode&quot;">​</a></h4><p>컨베이어 모드 사용중임을 나타냅니다.<br> (High State)</p><h4 id="_2-23-h-control-box-boot" tabindex="-1">2.23 H=Control Box Boot <a class="header-anchor" href="#_2-23-h-control-box-boot" aria-label="Permalink to &quot;2.23 H=Control Box Boot&quot;">​</a></h4><p>컨트롤 박스 부팅 완료 상태를 나타냅니다.<br> (High State)</p><h4 id="_2-24-h-force-control-mode" tabindex="-1">2.24 H=Force Control mode <a class="header-anchor" href="#_2-24-h-force-control-mode" aria-label="Permalink to &quot;2.24 H=Force Control mode&quot;">​</a></h4><p>힘 제어 모드 사용중임을 나타냅니다.<br> (High State)</p><h4 id="_2-25-pc-alive-pulse" tabindex="-1">2.25 PC Alive Pulse <a class="header-anchor" href="#_2-25-pc-alive-pulse" aria-label="Permalink to &quot;2.25 PC Alive Pulse&quot;">​</a></h4><p>제어 박스 내 메인 PC가 살아있음을 확인하기 위한 펄스 신호 (Alive signal) 0.5Hz.</p><h4 id="_2-26-h-speed-bar-100" tabindex="-1">2.26 H=Speed Bar 100% <a class="header-anchor" href="#_2-26-h-speed-bar-100" aria-label="Permalink to &quot;2.26 H=Speed Bar 100%&quot;">​</a></h4><p>속도 조절 바가 100%임을 나타냅니다.<br> (High State)</p><h4 id="_2-27-h-last-program-load-success" tabindex="-1">2.27 H=Last Program Load Success <a class="header-anchor" href="#_2-27-h-last-program-load-success" aria-label="Permalink to &quot;2.27 H=Last Program Load Success&quot;">​</a></h4><p>마지막 수행한 ‘프로그램 로드’ (프로그램 불러오기)에 성공했음을 나타냅니다.<br> 만약 작성된 프로그램에 문법적 오류가 있을 경우, 로드에 실패합니다.<br> (High State)</p><h4 id="_2-28-h-tcp-is-in-inbox-0" tabindex="-1">2.28 H=TCP is in Inbox 0 <a class="header-anchor" href="#_2-28-h-tcp-is-in-inbox-0" aria-label="Permalink to &quot;2.28 H=TCP is in Inbox 0&quot;">​</a></h4><p>인-박스 0번 영역에 TCP가 진입하였음을 나타냅니다.<br> (High State)</p><h4 id="_2-29-h-tcp-is-in-inbox-1" tabindex="-1">2.29 H=TCP is in Inbox 1 <a class="header-anchor" href="#_2-29-h-tcp-is-in-inbox-1" aria-label="Permalink to &quot;2.29 H=TCP is in Inbox 1&quot;">​</a></h4><p>인-박스 1번 영역에 TCP가 진입하였음을 나타냅니다.<br> (High State)</p><h4 id="_2-30-h-is-alarm" tabindex="-1">2.30 H=Is Alarm <a class="header-anchor" href="#_2-30-h-is-alarm" aria-label="Permalink to &quot;2.30 H=Is Alarm&quot;">​</a></h4><p>프로그램 상의 알람 기능이 실행되어 일시정지 중임을 나타냅니다.<br> (High State)</p><h4 id="_2-31-h-robot-posture-is-begin-posture" tabindex="-1">2.31 H=Robot posture is Begin posture <a class="header-anchor" href="#_2-31-h-robot-posture-is-begin-posture" aria-label="Permalink to &quot;2.31 H=Robot posture is Begin posture&quot;">​</a></h4><p>현재 로봇 팔이 시작 위치 (홈 위치)에 있음을 나타냅니다.<br> 시작 위치 (홈 위치)는 현재 로드된 프로그램에 따라 정의됩니다.<br> (High State)</p><h4 id="_2-32-h-emergency-teaching-enable" tabindex="-1">2.32 H=Emergency Teaching Enable <a class="header-anchor" href="#_2-32-h-emergency-teaching-enable" aria-label="Permalink to &quot;2.32 H=Emergency Teaching Enable&quot;">​</a></h4><p>비상 직접 교시 모드가 사용 가능한 상태임을 나타냅니다.<br> (High State)</p><h4 id="_2-33-h-prog-run-in-sub-p-area" tabindex="-1">2.33 H=Prog. Run in Sub.P area <a class="header-anchor" href="#_2-33-h-prog-run-in-sub-p-area" aria-label="Permalink to &quot;2.33 H=Prog. Run in Sub.P area&quot;">​</a></h4><p>현재 실행 중인 프로그램 구간이 서브-프로그램 (Sub.P) 영역일 경우 High 신호가 출력됩니다.<br> (High State)</p><h4 id="_2-34-h-normal-program-run-l-others" tabindex="-1">2.34 H=Normal Program Run / L=Others <a class="header-anchor" href="#_2-34-h-normal-program-run-l-others" aria-label="Permalink to &quot;2.34 H=Normal Program Run / L=Others&quot;">​</a></h4><p>H=정상적인 프로그램 재생 상태 / L=그 외의 경우<br> (일시 정지 혹은 외부 충돌 감지로 인한 일시 멈춤이 아닌 경우를 ‘정상’으로 정의합니다)<br> (High State)</p><h4 id="_2-35-l-normal-program-run-h-others" tabindex="-1">2.35 L=Normal Program Run / H=Others <a class="header-anchor" href="#_2-35-l-normal-program-run-h-others" aria-label="Permalink to &quot;2.35 L=Normal Program Run / H=Others&quot;">​</a></h4><p>L=정상적인 프로그램 재생 상태 / H=그 외의 경우<br> (일시 정지 혹은 외부 충돌 감지로 인한 일시 멈춤이 아닌 경우를 ‘정상’으로 정의합니다)<br> (Low State)</p><h4 id="_2-36-h-hand-controller-f1-pressed" tabindex="-1">2.36 H=Hand Controller F1 pressed <a class="header-anchor" href="#_2-36-h-hand-controller-f1-pressed" aria-label="Permalink to &quot;2.36 H=Hand Controller F1 pressed&quot;">​</a></h4><p>핸드 컨트롤러의 F1 버튼이 눌린 상태임을 나타냅니다.</p><h4 id="_2-37-h-hand-controller-f2-pressed" tabindex="-1">2.37 H=Hand Controller F2 pressed <a class="header-anchor" href="#_2-37-h-hand-controller-f2-pressed" aria-label="Permalink to &quot;2.37 H=Hand Controller F2 pressed&quot;">​</a></h4><p>핸드 컨트롤러의 F2 버튼이 눌린 상태임을 나타냅니다.</p><h4 id="_2-38-h-hand-controller-f3-pressed" tabindex="-1">2.38 H=Hand Controller F3 pressed <a class="header-anchor" href="#_2-38-h-hand-controller-f3-pressed" aria-label="Permalink to &quot;2.38 H=Hand Controller F3 pressed&quot;">​</a></h4><p>핸드 컨트롤러의 F3 버튼이 눌린 상태임을 나타냅니다.</p><h4 id="_2-39-h-hand-controller-f4-pressed" tabindex="-1">2.39 H=Hand Controller F4 pressed <a class="header-anchor" href="#_2-39-h-hand-controller-f4-pressed" aria-label="Permalink to &quot;2.39 H=Hand Controller F4 pressed&quot;">​</a></h4><p>핸드 컨트롤러의 F4 버튼이 눌린 상태임을 나타냅니다.</p><h4 id="_2-40-l-tcp-is-in-inbox-0" tabindex="-1">2.40 L=TCP is in Inbox 0 <a class="header-anchor" href="#_2-40-l-tcp-is-in-inbox-0" aria-label="Permalink to &quot;2.40 L=TCP is in Inbox 0&quot;">​</a></h4><p>인-박스 0번 영역에 TCP가 진입 하였음을 나타냅니다.<br> (Low State)</p><h4 id="_2-41-l-tcp-is-in-inbox-1" tabindex="-1">2.41 L=TCP is in Inbox 1 <a class="header-anchor" href="#_2-41-l-tcp-is-in-inbox-1" aria-label="Permalink to &quot;2.41 L=TCP is in Inbox 1&quot;">​</a></h4><p>인-박스 1번 영역에 TCP가 진입 하였음을 나타냅니다.<br> (Low State)</p><h4 id="_2-42-sync-with-dout-0-15" tabindex="-1">2.42 Sync with Dout 0~15 <a class="header-anchor" href="#_2-42-sync-with-dout-0-15" aria-label="Permalink to &quot;2.42 Sync with Dout 0~15&quot;">​</a></h4><p>Dout 0 ~ 15 신호와 동기화하여 신호를 나타냅니다.</p><h4 id="_2-43-h-is-sos-state" tabindex="-1">2.43 H=Is SOS State <a class="header-anchor" href="#_2-43-h-is-sos-state" aria-label="Permalink to &quot;2.43 H=Is SOS State&quot;">​</a></h4><p>SOS 상태를 나타냅니다.<br> (High state)</p><h4 id="_2-44-l-is-sos-state" tabindex="-1">2.44 L=Is SOS State <a class="header-anchor" href="#_2-44-l-is-sos-state" aria-label="Permalink to &quot;2.44 L=Is SOS State&quot;">​</a></h4><p>SOS 상태를 나타냅니다.<br> (Low state)</p>',185),n=[i];function l(h,s,d,p,u,b){return o(),e("div",null,n)}const f=a(t,[["render",l]]);export{m as __pageData,f as default};
