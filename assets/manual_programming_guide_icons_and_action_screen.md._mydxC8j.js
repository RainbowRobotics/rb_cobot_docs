import{_ as a,c as t,o as e,U as b,tc as o,td as r,te as i,tf as d,tg as n,th as s,ti as c,tj as v,tk as h,tl as l,tm as m,tn as u,to as p,tp as g,tq as f,tr as _,ts as y,tt as T,tu as w,tv as I,tw as P,tx as k,ty as x,tz as M,tA as C,tB as S,tC as j,tD as q,tE as A,tF as L,tG as D,tH as J,tI as B,tJ as U,tK as V,tL as E,tM as R,tN as W,tO as Y,tP as z,tQ as $,tR as F,tS as H,tT as O,tU as N,tV as G,tW as Z,tX as K,tY as Q,tZ as X,t_ as aa,t$ as ta,t7 as ea,u0 as ba,t1 as oa,sZ as ra,sY as ia,t4 as da,ta as na,u1 as sa,u2 as ca,u3 as va,u4 as ha,u5 as la,u6 as ma,u7 as ua,u8 as pa,u9 as ga,sS as fa,ua as _a}from"./chunks/framework._bMY95IQ.js";const qa=JSON.parse('{"title":"Icons and Action Screen","description":"","frontmatter":{"layout":"doc","outline":"deep"},"headers":[],"relativePath":"manual/programming_guide/icons_and_action_screen.md","filePath":"manual/programming_guide/icons_and_action_screen.md"}'),ya={name:"manual/programming_guide/icons_and_action_screen.md"},Ta=b('<h1 id="icons-and-action-screen" tabindex="-1" data-v-b8449aeb>Icons and Action Screen <a class="header-anchor" href="#icons-and-action-screen" aria-label="Permalink to &quot;Icons and Action Screen&quot;" data-v-b8449aeb>​</a></h1><h3 id="make" tabindex="-1" data-v-b8449aeb>Make <a class="header-anchor" href="#make" aria-label="Permalink to &quot;Make&quot;" data-v-b8449aeb>​</a></h3><p data-v-b8449aeb>Description of components in Make screen display</p><div class="center-align" data-v-b8449aeb><img src="'+o+'" data-v-b8449aeb><table data-v-b8449aeb><tr data-v-b8449aeb><th data-v-b8449aeb>Num</th><th data-v-b8449aeb>Description</th></tr><tr data-v-b8449aeb><th data-v-b8449aeb>①</th><td data-v-b8449aeb>Show the program list in tree form.</td></tr><tr data-v-b8449aeb><th data-v-b8449aeb>②</th><td data-v-b8449aeb>Shows the angle of each joint of the robot arm and the Cartesian coordinate position of the TCP.</td></tr><tr data-v-b8449aeb><th data-v-b8449aeb>③</th><td data-v-b8449aeb>TCP Jog: can change the Cartesian coordinate position. (base/tool/user defined coordinate system Selectable)<br data-v-b8449aeb> Joint: Jog: can change the angle of each joint.</td></tr><tr data-v-b8449aeb><th data-v-b8449aeb>④</th><td data-v-b8449aeb>Button to switch to Simulation or Real mode.<br data-v-b8449aeb> ※Real mode must be selected to drive the real robot arm.</td></tr><tr data-v-b8449aeb><th data-v-b8449aeb>⑤</th><td data-v-b8449aeb>Can import saved projects and create new projects.</td></tr><tr data-v-b8449aeb><th data-v-b8449aeb>⑥</th><td data-v-b8449aeb>Starts or stops the program and exists Motion Speed Adjustment Bar.</td></tr><tr data-v-b8449aeb><th data-v-b8449aeb>⑦</th><td data-v-b8449aeb>Various editing tools are located, such as Copy/Paste/Annotations.</td></tr><tr data-v-b8449aeb><th data-v-b8449aeb>⑧</th><td data-v-b8449aeb>Various program functions (command/action) are deployed.<br data-v-b8449aeb> Click the arrow on the right to include more functions.</td></tr><tr data-v-b8449aeb><th data-v-b8449aeb>⑨</th><td data-v-b8449aeb>Determines Jog Method – either Smooth Mode or Tick Mode.</td></tr></table></div><div class="tip custom-block" data-v-b8449aeb><p class="custom-block-title" data-v-b8449aeb>TIP</p><ul data-v-b8449aeb><li data-v-b8449aeb>Teaching: programming RB’s motion by means of moving the robot by hand</li><li data-v-b8449aeb>TCP (Tool Center Point): The point defined for the tool center point within the robot’s base coordinate system. It may also be the origin of the end-effector.</li></ul></div><div class="center-align" data-v-b8449aeb><figure data-v-b8449aeb><img src="'+r+'" alt="missing" data-v-b8449aeb><br data-v-b8449aeb><figcaption style="text-align:center;" data-v-b8449aeb>[ Basic View Mode ]</figcaption></figure><br data-v-b8449aeb><figure data-v-b8449aeb><img src="'+i+'" alt="missing" data-v-b8449aeb><br data-v-b8449aeb><figcaption style="text-align:center;" data-v-b8449aeb>[ Icon Extended View Mode ]</figcaption></figure><br data-v-b8449aeb><figure data-v-b8449aeb><img src="'+d+'" alt="missing" data-v-b8449aeb><br data-v-b8449aeb><figcaption style="text-align:center;" data-v-b8449aeb>[ Program-only Mode ]</figcaption></figure></div><br data-v-b8449aeb><h4 id="_1-teaching-icon-function-icon-make-screen" tabindex="-1" data-v-b8449aeb>1. Teaching Icon (Function Icon, Make screen) <a class="header-anchor" href="#_1-teaching-icon-function-icon-make-screen" aria-label="Permalink to &quot;1. Teaching Icon (Function Icon, Make screen)&quot;" data-v-b8449aeb>​</a></h4><div class="center-align" data-v-b8449aeb><table data-v-b8449aeb><tr data-v-b8449aeb><th data-v-b8449aeb>Icon</th><th data-v-b8449aeb>Description</th></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+n+'" data-v-b8449aeb></th><td data-v-b8449aeb> You can set the movement methods for the robot arm for teaching.<br data-v-b8449aeb> There are two types of movements: Move J,<br data-v-b8449aeb> which moves each joint to the specified target joint angles,<br data-v-b8449aeb> and Move L, which moves the TCP linearly to the specified target TCP values.<br data-v-b8449aeb> Additionally, there are four other movements that can be applied based on<br data-v-b8449aeb> these two basic movements: Move JB, Move PB, Move JL,<br data-v-b8449aeb> Move ITPL, and Move Pro, making a total of seven built-in movements. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+s+'" data-v-b8449aeb></th><td data-v-b8449aeb> This feature allows you to input the target values as sub-items of the movements.<br data-v-b8449aeb> For Move J and Move JB, the target values are the joint angle values.<br data-v-b8449aeb> For Move L, Move PB, Move JL, Move Pro, and Move ITPL, the target values are<br data-v-b8449aeb> the orthogonal coordinates of the TCP (x, y, z, rx, ry, rz). </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+c+'" data-v-b8449aeb></th><td data-v-b8449aeb> In addition to the Move, there is a feature specifically for circular motion.<br data-v-b8449aeb> It includes a mode for drawing an arc by specifying a starting point<br data-v-b8449aeb> and two additional points, forming an arc that passes through all three points.<br data-v-b8449aeb> There is also a mode that allows you to draw a circle by setting a center point<br data-v-b8449aeb> and a rotation axis. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+v+'" data-v-b8449aeb></th><td data-v-b8449aeb> This is a function that can be used by storing certain posture/position information<br data-v-b8449aeb> as a variable and then referring to (calling) another motion function.<br data-v-b8449aeb> However, this function itself does not move to that position. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+h+'" data-v-b8449aeb></th><td data-v-b8449aeb> This is the pin joint feature used to store and assign specific joint angle values as variables.<br data-v-b8449aeb> It does not move to the specified location.<br data-v-b8449aeb> Instead, the joint angle values are saved as variables and can be referenced (called)<br data-v-b8449aeb> in other motion functions for use. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+l+'" data-v-b8449aeb></th><td data-v-b8449aeb> This function moves the robot to either the starting position of the program or<br data-v-b8449aeb> the zero position of the robot&#39;s joints.<br data-v-b8449aeb> The movement method can be chosen between Move J and Move L. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+m+'" data-v-b8449aeb></th><td data-v-b8449aeb> This function allows the robot to wait for a specified condition or amount of time.<br data-v-b8449aeb> There are 5 modes available:<br data-v-b8449aeb> waiting for a specified time, waiting while a condition is true,<br data-v-b8449aeb> ending the wait when a condition becomes true,<br data-v-b8449aeb> waiting while an input condition is true, and<br data-v-b8449aeb> ending the wait when an input condition becomes true. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+u+'" data-v-b8449aeb></th><td data-v-b8449aeb> This feature helps organize program commands into modules by grouping them under sub-items.<br data-v-b8449aeb> Each folder can be named differently, making it easier to manage the program. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+p+'" data-v-b8449aeb></th><td data-v-b8449aeb> This icon allows a user to add a comment or memo to the program. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+g+'" data-v-b8449aeb></th><td data-v-b8449aeb> This function allows for program termination and the display of an alarm pop-up message.<br data-v-b8449aeb> There are four options: terminate the program, terminate only the sub-program,<br data-v-b8449aeb> terminate only the folder&#39;s sub-programs, and display an alarm pop-up message. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+f+'" data-v-b8449aeb></th><td data-v-b8449aeb> This is the Debug function for internal value debugging.<br data-v-b8449aeb> There are two options: Debug Pop-up and User Log.<br data-v-b8449aeb> The Debug Pop-up allows you to check specific variable values or<br data-v-b8449aeb> internal parameters by requesting them in a pop-up format.<br data-v-b8449aeb> The User Log lets you leave a string or string variable in the log system.<br data-v-b8449aeb> However, logging too frequently may affect the system. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+_+'" data-v-b8449aeb></th><td data-v-b8449aeb> The user input function pauses during program execution to allow users to change<br data-v-b8449aeb> the value of a variable/arrangement/point/character/global/ROM by entering it.<br data-v-b8449aeb> You can change the value, ignore it, and skip it, depending on your situation. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+y+'" data-v-b8449aeb></th><td data-v-b8449aeb> This function is for controlling external axis in addition to the robot.<br data-v-b8449aeb> Up to 6 can be added. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+T+'" data-v-b8449aeb></th><td data-v-b8449aeb> This icon is used to create a conditional statement.<br data-v-b8449aeb> A user can generate separate motion program branches depending on conditions using If, Else if, and Else. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+w+'" data-v-b8449aeb></th><td data-v-b8449aeb> This icon is used to create another type of conditional statement. For the Switch statement, a user defines each case. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+I+'" data-v-b8449aeb></th><td data-v-b8449aeb> This feature includes the Pre Program, which executes the contents only once at the beginning, and the Post Program,<br data-v-b8449aeb> which defines functions to be performed after the program ends.<br data-v-b8449aeb> In cases where the program runs continuously, such as in Play mode, the Pre Program content is executed only once.<br data-v-b8449aeb> For one-time commands like variable declaration or communication setup, you can manage them under the Pre Program.<br data-v-b8449aeb> The functions declared under the Post Program are executed sequentially after the program ends.<br data-v-b8449aeb> Motion-related commands cannot be used in the Post Program. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+P+'" data-v-b8449aeb></th><td data-v-b8449aeb> This is the Set function. It allows you to configure various setting parameters<br data-v-b8449aeb> that are typically set in the Setup menu directly within the program.<br data-v-b8449aeb> You can change specific setting parameters during program execution. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+k+'" data-v-b8449aeb></th><td data-v-b8449aeb> The TCP setting function allows you to temporarily change the TCP value<br data-v-b8449aeb> during program execution by loading a pre-saved TCP value.<br data-v-b8449aeb> TCP values can be saved in advance in the Tool List on the Setup page. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+x+'" data-v-b8449aeb></th><td data-v-b8449aeb> This manual operation feature allows you to pause the program and<br data-v-b8449aeb> perform direct teaching during its execution. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+M+'" data-v-b8449aeb></th><td data-v-b8449aeb> It is a function to operate the robot joint and the external axis at the same time. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+C+'" data-v-b8449aeb></th><td data-v-b8449aeb> This is a loop function. It repeats the sub-program based on a specified condition or number of times.<br data-v-b8449aeb> There are four modes:<br data-v-b8449aeb> repeating a set number of times, repeating while a condition is true,<br data-v-b8449aeb> the Do While function (executes at least once and continues while the condition is true),<br data-v-b8449aeb> and ending the loop when the condition becomes true. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+S+'" data-v-b8449aeb></th><td data-v-b8449aeb> This function forcefully breaks out of a loop. It is used under the repeat function,<br data-v-b8449aeb> and even if a specific condition is declared for the loop,<br data-v-b8449aeb> using the break function allows you to exit the loop early.<br data-v-b8449aeb> Additionally, the continue function moves the program flow to the top of the loop,<br data-v-b8449aeb> the program logic jump function allows you to jump to a logic point marked with Here,<br data-v-b8449aeb> and there is also a function to jump to a folder or the logic jump destination. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+j+'" data-v-b8449aeb></th><td data-v-b8449aeb> This is the thread function, which includes two options:<br data-v-b8449aeb> adding a general/non-stop thread and calling an event thread.<br data-v-b8449aeb> There are five thread properties: general thread, non-stop thread, non-stop thread 2,<br data-v-b8449aeb> event general thread, and event non-stop thread.<br data-v-b8449aeb> The sub-items of the thread function run in parallel with the main program.<br data-v-b8449aeb> However, motion-related commands cannot be placed under the thread function. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+q+'" data-v-b8449aeb></th><td data-v-b8449aeb> The G-code function is available when a G-code file is placed in the specified folder.<br data-v-b8449aeb> The robot will execute the path defined by the G-code. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+A+'" data-v-b8449aeb></th><td data-v-b8449aeb> This is a function to replay a recorded motion using the motion recording feature.<br data-v-b8449aeb> The motion recorded via direct teaching can be replayed using either the J or L type with this feature. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+L+'" data-v-b8449aeb></th><td data-v-b8449aeb> This function adjusts the TCP position based on feedback from the welding current via analog input signals.<br data-v-b8449aeb> The user must adjust the current/voltage signal according to the analog input range (0~10V) provided by Rainbow. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+D+'" data-v-b8449aeb></th><td data-v-b8449aeb> This function automatically generates predefined motions.<br data-v-b8449aeb> Multiple predefined motions are available, and you can modify the parameters to create the desired motion. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+J+'" data-v-b8449aeb></th><td data-v-b8449aeb> This command controls the digital output of the control box. There are seven functions:<br data-v-b8449aeb> individual output, bit combination output, signal toggle output, full signal output,<br data-v-b8449aeb> unit pulse output, pulse width modulation (PWM), and condition-based output.<br data-v-b8449aeb> The selected signal is output through the chosen port among the 16 ports available.<br data-v-b8449aeb> Each port can be set to High, Low, or Bypass signals. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+B+'" data-v-b8449aeb></th><td data-v-b8449aeb> This command controls the analog output of the control box.<br data-v-b8449aeb> The selected voltage is output through the chosen port among the four analog ports available.<br data-v-b8449aeb> Each port can output a voltage range of 0~10V.<br data-v-b8449aeb> There are two functions: individual analog output and speed-based analog output. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+U+'" data-v-b8449aeb></th><td data-v-b8449aeb> The tool flange has two digital outputs. You can assign signals to these two digital outputs.<br data-v-b8449aeb> Additionally, the voltage level (0V, 12V, or 24V) for the output from the tool flange can be adjusted. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+V+'" data-v-b8449aeb></th><td data-v-b8449aeb> This is the gripper function. Functions for third-party grippers are pre-installed.<br data-v-b8449aeb> By selecting the gripper you wish to use and the function provided by that gripper,<br data-v-b8449aeb> the system helps you easily operate the gripper automatically. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+E+'" data-v-b8449aeb></th><td data-v-b8449aeb> This function is available when an I/O expansion module is added.<br data-v-b8449aeb> You can configure the digital/analog outputs of the I/O expansion module,<br data-v-b8449aeb> which works similarly to the existing digital and analog output functions. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+R+'" data-v-b8449aeb></th><td data-v-b8449aeb> This is a dedicated macro function for arc welding.<br data-v-b8449aeb> It groups functions that can be implemented through common D.out or Wait functions<br data-v-b8449aeb> into a macro format for quick use.<br data-v-b8449aeb> Settings for the arc welder are performed in Setup &gt; Device. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+W+'" data-v-b8449aeb></th><td data-v-b8449aeb> This function is for using digital welders.<br data-v-b8449aeb> After selecting the brand of digital welder to be used,<br data-v-b8449aeb> you can choose the mode and options to easily operate the digital welder. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+Y+'" data-v-b8449aeb></th><td data-v-b8449aeb> This is a script function that allows the user to write custom scripts.<br data-v-b8449aeb> It can be used for specific calculations, variable substitution,<br data-v-b8449aeb> and assignment beyond the basic functions. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+z+'" data-v-b8449aeb></th><td data-v-b8449aeb> This is the Assign function for declaring variables, with five types available.<br data-v-b8449aeb> The types include variable for storing single numbers,<br data-v-b8449aeb> array for storing arrays of numbers,<br data-v-b8449aeb> point for storing positional information (x, y, z, rx, ry, rz),<br data-v-b8449aeb> joint for storing joint angle information, and string for storing text. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+$+'" data-v-b8449aeb></th><td data-v-b8449aeb> This function declares variables (single variables, arrays, point variables, etc.)<br data-v-b8449aeb> for real-time monitoring during program execution.<br data-v-b8449aeb> Variables declared in the monitoring function can be observed in real-time<br data-v-b8449aeb> during program execution by clicking the monitor icon on the right side of the Make/Play page. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+F+'" data-v-b8449aeb></th><td data-v-b8449aeb> This function enables RS485/232 output via the tool flange/control box.<br data-v-b8449aeb> You can output in ASCII mode or hex mode.<br data-v-b8449aeb> The communication protocol is set in the Setup &gt; Socket/Serial menu. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+H+'" data-v-b8449aeb></th><td data-v-b8449aeb> This is a socket communication function.<br data-v-b8449aeb> It allows you to open a socket, connect to a specific server, send request messages,<br data-v-b8449aeb> and receive specific data from the server.<br data-v-b8449aeb> Up to five different servers can be connected simultaneously. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+O+'" data-v-b8449aeb></th><td data-v-b8449aeb> This is a Modbus client function.<br data-v-b8449aeb> It allows requesting data from a specific IP/address and retrieving the returned data.<br data-v-b8449aeb> The request interval and format can be specified.<br data-v-b8449aeb> A separate protocol is provided for the Modbus server included with this product. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+N+'" data-v-b8449aeb></th><td data-v-b8449aeb> This function integrates features for using external products like HMI and PLC easily.<br data-v-b8449aeb> You can select the desired product and its specific features for use. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+G+'" data-v-b8449aeb></th><td data-v-b8449aeb> This function allows you to insert a pre-created program file (teaching file) into the current project.<br data-v-b8449aeb> There are three options: sub-program call, copy command content, and switch program.<br data-v-b8449aeb> The sub-program call allows viewing the sub-project without modification.<br data-v-b8449aeb> If modification is necessary, the sub-project must be opened separately.<br data-v-b8449aeb> The copy command content option lets you insert another program file into the current document in an editable form.<br data-v-b8449aeb> Unlike sub-program call, which simply calls the program,<br data-v-b8449aeb> copy command content copies the program in a modifiable format.<br data-v-b8449aeb> The switch program option is used when you want to replace the main program with another project. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+Z+'" data-v-b8449aeb></th><td data-v-b8449aeb> This function defines repetitive actions.<br data-v-b8449aeb> It defines the space where the repeated actions will be performed and the actions at each location.<br data-v-b8449aeb> The same actions will be performed at all defined points.<br data-v-b8449aeb> This function is useful for implementing palletizing. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+K+'" data-v-b8449aeb></th><td data-v-b8449aeb> This is a conveyor tracking function.<br data-v-b8449aeb> Once the conveyor speed and direction are set, the sub-actions (L, PB, ITPL, Pro, Circle)<br data-v-b8449aeb> of the conveyor function will be added to the conveyor flow. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+Q+'" data-v-b8449aeb></th><td data-v-b8449aeb> This is a force control function.<br data-v-b8449aeb> You can select the direction and coordinate system for the desired force.<br data-v-b8449aeb> Sub-actions under force control will have this force control feature applied automatically. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+X+'" data-v-b8449aeb></th><td data-v-b8449aeb> This is a dedicated function for weaving movements.<br data-v-b8449aeb> Movements like L-series and Circle under weaving are combined with the set weaving options.<br data-v-b8449aeb> The available weaving patterns are Trapezoidal, SineWave, Triangle, C-Wave, and Circle. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+aa+'" data-v-b8449aeb></th><td data-v-b8449aeb> This is a dedicated function for weaving movements.<br data-v-b8449aeb> Unlike the existing weaving functions, the reference for weaving is through the TCP coordinate system.<br data-v-b8449aeb> Movements like L-series and Circle under weaving are combined with the set weaving options.<br data-v-b8449aeb> The available weaving patterns are Trapezoidal, SineWave, Triangle, C-Wave, and Circle. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+ta+'" data-v-b8449aeb></th><td data-v-b8449aeb> This function is used for welding applications.<br data-v-b8449aeb> It detects the movement of the base material and reflects the movement and direction to proceed with welding. </td></tr></table></div><h4 id="_2-editing-icon-left-side-in-make-screen" tabindex="-1" data-v-b8449aeb>2. Editing Icon (Left side in Make screen) <a class="header-anchor" href="#_2-editing-icon-left-side-in-make-screen" aria-label="Permalink to &quot;2. Editing Icon (Left side in Make screen)&quot;" data-v-b8449aeb>​</a></h4><div class="center-align" data-v-b8449aeb><table data-v-b8449aeb><tr data-v-b8449aeb><th data-v-b8449aeb>Icon</th><th data-v-b8449aeb>Description</th></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+ea+'" data-v-b8449aeb></th><td data-v-b8449aeb> You can raise or lower commands one space at a time. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+ba+'" data-v-b8449aeb></th><td data-v-b8449aeb> Revert the operation to a step before, after, up to 50 times. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+oa+'" data-v-b8449aeb></th><td data-v-b8449aeb> It can copy the selected command and you can the copied command to a different location. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+ra+'" data-v-b8449aeb></th><td data-v-b8449aeb> It can paste the copied or cut command into the selected location. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+ia+'" data-v-b8449aeb></th><td data-v-b8449aeb> It can cut the selected command. This command can be pasted to a different location. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+da+'" data-v-b8449aeb></th><td data-v-b8449aeb> It can delete the selected command. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+na+'" data-v-b8449aeb></th><td data-v-b8449aeb> This is Annotation function. It prevents the selected command from running.<br data-v-b8449aeb> Annotated commands exist in the program but not executed.<br data-v-b8449aeb> If you press the disable button on the annotated command, it is activated. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+sa+'" data-v-b8449aeb></th><td data-v-b8449aeb> It can mark the highlight (marking) in the desired program line.<br data-v-b8449aeb> Therefore, you can underline important program lines.<br data-v-b8449aeb> There are two colors, blue and pink. </td></tr></table></div><h4 id="_3-jog-and-other-utilities-right-side-of-make-screen" tabindex="-1" data-v-b8449aeb>3. Jog and other utilities (Right side of Make screen) <a class="header-anchor" href="#_3-jog-and-other-utilities-right-side-of-make-screen" aria-label="Permalink to &quot;3. Jog and other utilities (Right side of Make screen)&quot;" data-v-b8449aeb>​</a></h4><div class="center-align" data-v-b8449aeb><table data-v-b8449aeb><tr data-v-b8449aeb><th data-v-b8449aeb>Icon</th><th data-v-b8449aeb>Description</th></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+ca+'" data-v-b8449aeb></th><td data-v-b8449aeb> It can move TCP’s position relative to a global coordinate system fixed to the base. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+va+'" data-v-b8449aeb></th><td data-v-b8449aeb> It can move the position of TCP based on the local coordinate system<br data-v-b8449aeb> (tool coordinate system) fixed to TCP. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+ha+'" data-v-b8449aeb></th><td data-v-b8449aeb> It can move the position of TCP based on the user-defined coordinate system<br data-v-b8449aeb> (User Coordinate). </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+la+'" data-v-b8449aeb></th><td data-v-b8449aeb> It can allow to move each joint of the robot arm separately. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+ma+'" data-v-b8449aeb></th><td data-v-b8449aeb> This is a collection of settings such as User coordinate system settings,<br data-v-b8449aeb> automatic TCP find, and other easy-to-use settings with a Jog.<br data-v-b8449aeb> These settings can also be set in the Setup menu by default. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+ua+'" data-v-b8449aeb></th><td data-v-b8449aeb> This is a collection of special features which can view status and set-up values<br data-v-b8449aeb> such as I/O status information of the system,<br data-v-b8449aeb> user-coordinate Setting information and current/temperature information of the robot. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+pa+'" data-v-b8449aeb></th><td data-v-b8449aeb> It is a window for real-time observation of the values selected variables through<br data-v-b8449aeb> the Monitor function.<br data-v-b8449aeb> In addition to the selected variables, system variables that need to be checked<br data-v-b8449aeb> frequently are also displayed. </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+ga+'" data-v-b8449aeb></th><td data-v-b8449aeb> This function allows the user to select the UI mode.<br data-v-b8449aeb> Users can select UI mode according to their level and environment.<br data-v-b8449aeb> There are four mode options: Expert Mode, Beginner Mode,<br data-v-b8449aeb> Welding Mode (Analog), and Welding Mode (Digital). </td></tr></table></div><h4 id="_4-system-function-button" tabindex="-1" data-v-b8449aeb>4. System function button <a class="header-anchor" href="#_4-system-function-button" aria-label="Permalink to &quot;4. System function button&quot;" data-v-b8449aeb>​</a></h4><div class="center-align" data-v-b8449aeb><table data-v-b8449aeb><tr data-v-b8449aeb><th data-v-b8449aeb>Icon</th><th data-v-b8449aeb>Description</th></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+fa+'" data-v-b8449aeb></th><td data-v-b8449aeb> This icon is used to move to home screen &amp; another page.<br data-v-b8449aeb> (It is located in the top left.). </td></tr><tr data-v-b8449aeb><th data-v-b8449aeb><img src="'+_a+'" data-v-b8449aeb></th><td data-v-b8449aeb> This icon is used to power off the UI.<br data-v-b8449aeb> When the tablet PC is connected to the robot,<br data-v-b8449aeb> the robot will also be turned off.<br data-v-b8449aeb> Screen Lock function is included in here. (It is located in the bottom right.). </td></tr></table></div><div class="tip custom-block" data-v-b8449aeb><p class="custom-block-title" data-v-b8449aeb>TIP</p><ul data-v-b8449aeb><li data-v-b8449aeb>A detailed description of each function is described later.</li></ul></div>',16),wa=[Ta];function Ia(Pa,ka,xa,Ma,Ca,Sa){return e(),t("div",null,wa)}const Aa=a(ya,[["render",Ia],["__scopeId","data-v-b8449aeb"]]);export{qa as __pageData,Aa as default};
