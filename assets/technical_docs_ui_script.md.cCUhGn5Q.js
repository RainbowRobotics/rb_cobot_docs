import{_ as a,c,o as t,U as e,Co as n}from"./chunks/framework.fHC5UfPI.js";const g=JSON.parse('{"title":"RB UI Script 3.7","description":"","frontmatter":{"layout":"doc","outline":"deep"},"headers":[],"relativePath":"technical_docs/ui_script.md","filePath":"technical_docs/ui_script.md"}'),s={name:"technical_docs/ui_script.md"},i=e(`<h1 id="rb-ui-script-3-7" tabindex="-1" data-v-ac8caa8c>RB UI Script 3.7 <a class="header-anchor" href="#rb-ui-script-3-7" aria-label="Permalink to &quot;RB UI Script 3.7&quot;" data-v-ac8caa8c>​</a></h1><h3 id="_1-variable-types-and-declaration" tabindex="-1" data-v-ac8caa8c>1. VARIABLE TYPES AND DECLARATION <a class="header-anchor" href="#_1-variable-types-and-declaration" aria-label="Permalink to &quot;1. VARIABLE TYPES AND DECLARATION&quot;" data-v-ac8caa8c>​</a></h3><p data-v-ac8caa8c>The UI Script of Rainbow Robotics supports the following data types.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><strong data-v-ac8caa8c>var</strong> : Stores a single number.</li><li data-v-ac8caa8c><strong data-v-ac8caa8c>arr</strong> : Stores the multiple number array. (up to 20 lengths)</li><li data-v-ac8caa8c><strong data-v-ac8caa8c>str</strong> : Stores string element.</li><li data-v-ac8caa8c><strong data-v-ac8caa8c>point, pnt</strong> : Stores posture (x, y, z, Rx, Ry, Rz) information.</li><li data-v-ac8caa8c><strong data-v-ac8caa8c>joint, jnt</strong> : Stores joint angles (J0, J1, J2, J3, J4, J5).</li><li data-v-ac8caa8c><strong data-v-ac8caa8c>vec</strong> : A vector that manages numbers.<br data-v-ac8caa8c> (Please refer to <strong data-v-ac8caa8c>Chapter 10</strong> separately for number / string vectors.)</li></ul><p data-v-ac8caa8c>An example of a variable declaration is shown below.</p><h4 id="_1-1-var" tabindex="-1" data-v-ac8caa8c>1.1 var <a class="header-anchor" href="#_1-1-var" aria-label="Permalink to &quot;1.1 var&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_val          # Assign variable without initial value (initial value is 0)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_val = 1      # Assign variable with initial value</span></span></code></pre></div><h4 id="_1-2-arr" tabindex="-1" data-v-ac8caa8c>1.2 arr <a class="header-anchor" href="#_1-2-arr" aria-label="Permalink to &quot;1.2 arr&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>arr my_arr              # Assign array without initial value (initial value is {0, 0, … , 0})</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>arr my_arr = {1, 2, 3}  # Assign array with initial value</span></span></code></pre></div><h4 id="_1-3-str" tabindex="-1" data-v-ac8caa8c>1.3 str <a class="header-anchor" href="#_1-3-str" aria-label="Permalink to &quot;1.3 str&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>str my_str              # Assign string without initial value (initial value is “”)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>str my_str = “Hello”    # Assign string with initial value</span></span></code></pre></div><h4 id="_1-4-point-pnt" tabindex="-1" data-v-ac8caa8c>1.4 point, pnt <a class="header-anchor" href="#_1-4-point-pnt" aria-label="Permalink to &quot;1.4 point, pnt&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point          # Assign point without initial value (initial value is {0, 0, 0, 0, 0, 0})</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point = {100, 200, 300, 90, 0, 90}   # Assign point with initial value</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>pnt my_point = {50, 100, 100, 90, 0, 0}       # Assign point with initial value</span></span></code></pre></div><h4 id="_1-5-joint-jnt" tabindex="-1" data-v-ac8caa8c>1.5 joint, jnt <a class="header-anchor" href="#_1-5-joint-jnt" aria-label="Permalink to &quot;1.5 joint, jnt&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>joint my_joint          # Assign joint without initial value (initial value is {0, 0, 0, 0, 0, 0})</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>joint my_joint = {0, 0, 0, 90, 0, 0}    # Assign joint with initial value</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>jnt my_joint = {30,0,0,90,0,0}          # Assign joint with initial value</span></span></code></pre></div><h4 id="_1-6-abbreviations" tabindex="-1" data-v-ac8caa8c>1.6 Abbreviations <a class="header-anchor" href="#_1-6-abbreviations" aria-label="Permalink to &quot;1.6 Abbreviations&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Abbreviations used in this document are as follows.</p><div class="center-align" data-v-ac8caa8c><table data-v-ac8caa8c><tr data-v-ac8caa8c><th data-v-ac8caa8c>Abbreviation</th><th data-v-ac8caa8c></th></tr><tr data-v-ac8caa8c><th data-v-ac8caa8c>v</th><td data-v-ac8caa8c>variable type (var)</td></tr><tr data-v-ac8caa8c><th data-v-ac8caa8c>a</th><td data-v-ac8caa8c>Array type (arr)</td></tr><tr data-v-ac8caa8c><th data-v-ac8caa8c>s</th><td data-v-ac8caa8c>String type (str)</td></tr><tr data-v-ac8caa8c><th data-v-ac8caa8c>P</th><td data-v-ac8caa8c>Point type (pnt)</td></tr><tr data-v-ac8caa8c><th data-v-ac8caa8c>J</th><td data-v-ac8caa8c>Joint type (jnt)</td></tr></table></div><h4 id="_1-7-point-type-and-joint-type" tabindex="-1" data-v-ac8caa8c>1.7 Point type and Joint type <a class="header-anchor" href="#_1-7-point-type-and-joint-type" aria-label="Permalink to &quot;1.7 Point type and Joint type&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Point type and Joint type variables can be used as temporary variables without names.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>Temporary Point type : pnt[x, y, z, Rx, Ry, Rz]</li><li data-v-ac8caa8c>Temporary Joint type : jnt[J0, J1, J2, J3, J4, J5]</li></ul><p data-v-ac8caa8c>These temporary variables can be used immediately without a separate name declaration, and can be utilized as follows.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><strong data-v-ac8caa8c>Method 1</strong> : This is an example of declaring a separate variable and using it in a function.</li><li data-v-ac8caa8c><strong data-v-ac8caa8c>Method 2</strong> : This is an example of using the temporary variable as a function call argument without declaring a variable separately.</li></ul><p data-v-ac8caa8c>Method 1 :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>jnt my_angle = {0,0,90,0,90,0}  # Assign joint type with name ‘my_angle’.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_j(my_angle, 60, 80)        # Use ‘my_angle’ as an input argument of function ‘move_j’.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>pnt my_point = {100, 200, 300, 90, 0, 0}  # Assign point type with name ‘my_point’.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_l(my_point, 20, 5)                   # Use ‘my_point’ as an input argument of function ‘move_l’</span></span></code></pre></div><p data-v-ac8caa8c>Method 2 :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_j(jnt[0,0,90,0,90,0], 60, 80)       # temporary joint type is used as an input argument of function ‘move_j’.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_l(pnt[100,200,300,90,0,0], 60, 80)  # temporary point type is used as an input argument of function ‘move_l’.</span></span></code></pre></div><p data-v-ac8caa8c>The above examples are examples using move_j(J, v, v) and move_l(P, v, v) functions.<br data-v-ac8caa8c> For more information about these functions, see Chapter 7. Motion Functions.</p><h4 id="_1-8-ui-script-examples" tabindex="-1" data-v-ac8caa8c>1.8 UI Script examples <a class="header-anchor" href="#_1-8-ui-script-examples" aria-label="Permalink to &quot;1.8 UI Script examples&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Rainbow UI Script can be used as follows</p><p data-v-ac8caa8c>Example 1. Simple math operation</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var a = 1                # Assign variable, name is ‘a’ and init-value 1</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var b = 2                # Assign variable, name is ‘b’ and init-value 2</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var c                    # Assign variable, name is ‘c’</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>c = a *b + 5 + sqrt(4)   # ‘c’ stores the result value of 9</span></span></code></pre></div><p data-v-ac8caa8c>Example 2. Basic movement</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>joint target_angle = {0, 0, 90, 0, 90, 0}   # Assign joint type, name is ‘target_angle’</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_j(target_angle, 60, 80)                # move arm with ‘move_j’, speed/acceleration = 60/80</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>target_angle[0] = target_angle[0] + 45      # Add 45 degrees to the axis-0 value from the previous value.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_j(target_angle, 60, 80)                # move arm with ‘move_j’, speed/acceleration = 60/80</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>target_angle[0] = target_angle[0] + 45      # Add 45 degrees to the axis-0 value from the previous value.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_j(target_angle, 60, 80)                # move arm with ‘move_j’, speed/acceleration = 60/80</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_j(jnt[0, 0, 0, 0, 0, 0], 60, 80)       # move arm with ‘move_j’ to zero-home posture</span></span></code></pre></div><p data-v-ac8caa8c>Example 3. String function</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>str my_text = “123.78”                  # Assign string with name ‘my_text’</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var result_1 = to_num_int(my_text)      # 123 is stored in variable ‘result_1’</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var result_2 = to_num(my_text)          # 123.78 is stored in variable ‘result_2’</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var result_3 = round( to_num(my_text) ) # 124 is stored in variable ‘result_3’</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>str my_text2 = “abc”                    # Assign string with name ‘my_text2’</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>str my_text3 = my_text + my_text2       # “123.78abc” is stored in string ‘my_text3’</span></span></code></pre></div><h4 id="_1-9-operators" tabindex="-1" data-v-ac8caa8c>1.9 Operators <a class="header-anchor" href="#_1-9-operators" aria-label="Permalink to &quot;1.9 Operators&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>The following comparison operators and logical operators can be used.</p><h5 id="_1-9-1-comparison-operators" tabindex="-1" data-v-ac8caa8c>1.9.1 Comparison operators <a class="header-anchor" href="#_1-9-1-comparison-operators" aria-label="Permalink to &quot;1.9.1 Comparison operators&quot;" data-v-ac8caa8c>​</a></h5><ol data-v-ac8caa8c><li data-v-ac8caa8c>A &gt;= B <ul data-v-ac8caa8c><li data-v-ac8caa8c>1 (True) if the left side is greater than or equal to the right side, otherwise 0 (False)</li></ul></li><li data-v-ac8caa8c>A &lt;= B <ul data-v-ac8caa8c><li data-v-ac8caa8c>1 (True) if the right side is greater than or equal to the left side, otherwise 0 (False)</li></ul></li><li data-v-ac8caa8c>A == B <ul data-v-ac8caa8c><li data-v-ac8caa8c>1 (True) if the left and right sides are equal, otherwise 0 (False)</li></ul></li><li data-v-ac8caa8c>A != B -1 (True) if the left and right sides are not-equal, otherwise 0 (False)</li></ol><h5 id="_1-9-2-logical-operators" tabindex="-1" data-v-ac8caa8c>1.9.2 Logical operators <a class="header-anchor" href="#_1-9-2-logical-operators" aria-label="Permalink to &quot;1.9.2 Logical operators&quot;" data-v-ac8caa8c>​</a></h5><p data-v-ac8caa8c>A &amp;&amp; B<br data-v-ac8caa8c> A and B<br data-v-ac8caa8c> A AND B<br data-v-ac8caa8c> A And B</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>1 (True) only if both the left and right sides are True, otherwise 0 (False)</li></ul><p data-v-ac8caa8c>A || B<br data-v-ac8caa8c> A or B<br data-v-ac8caa8c> A OR B<br data-v-ac8caa8c> A Or B</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>1 (True) if either of the left and right sides is True, 0 (False) if both values are False</li></ul><h5 id="_1-9-3" tabindex="-1" data-v-ac8caa8c>1.9.3 <a class="header-anchor" href="#_1-9-3" aria-label="Permalink to &quot;1.9.3&quot;" data-v-ac8caa8c>​</a></h5><p data-v-ac8caa8c>TRUE and FALSE used in comparison/logical operation are matched with the following values.</p><p data-v-ac8caa8c>True = TRUE = true = 1<br data-v-ac8caa8c> False = FALSE = false = 0</p><p data-v-ac8caa8c>Therefore, the following two examples become the <strong data-v-ac8caa8c>same expression</strong>.</p><p data-v-ac8caa8c>Example 1.</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>if (SD_SOCK_IS_OPEN_0 == True){</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>    // something to do</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>}</span></span></code></pre></div><p data-v-ac8caa8c>Example 2.</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>if (SD_SOCK_IS_OPEN_0 == 1){</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>    // something to do</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>}</span></span></code></pre></div><h4 id="_1-10-units" tabindex="-1" data-v-ac8caa8c>1.10 Units <a class="header-anchor" href="#_1-10-units" aria-label="Permalink to &quot;1.10 Units&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>The Script grammar of Rainbow Robotics uses the following units.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>Angle : Degree</li><li data-v-ac8caa8c>Position : mm (0.001m)</li></ul><p data-v-ac8caa8c>The following rotation notation is used in the script grammar and notation of Rainbow Robotics.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>Z-Y’-X’’ Euler angle (Degree)</li></ul><p data-v-ac8caa8c><img src="`+n+`" alt="missing" data-v-ac8caa8c></p><h3 id="_2-math-functions" tabindex="-1" data-v-ac8caa8c>2. MATH FUNCTIONS <a class="header-anchor" href="#_2-math-functions" aria-label="Permalink to &quot;2. MATH FUNCTIONS&quot;" data-v-ac8caa8c>​</a></h3><br data-v-ac8caa8c><h4 id="_2-1-v-cos-v" tabindex="-1" data-v-ac8caa8c>2.1 v = cos(v) <a class="header-anchor" href="#_2-1-v-cos-v" aria-label="Permalink to &quot;2.1 v = cos(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Trigonometric function Cosine operation function.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: variable type or number (Unit: radian)<br data-v-ac8caa8c></p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v : return single number</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = cos(45*D2R)     # my_result = 0.7071</span></span></code></pre></div><h4 id="_2-2-v-cosd-v" tabindex="-1" data-v-ac8caa8c>2.2 v = cosd(v) <a class="header-anchor" href="#_2-2-v-cosd-v" aria-label="Permalink to &quot;2.2 v = cosd(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Trigonometric function Cosine operation function.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: variable type or number <strong data-v-ac8caa8c>(Unit: degree)</strong></p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v : return single number</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = cosd(45)    # my_result= 0.7071</span></span></code></pre></div><h4 id="_2-3-v-sin-v" tabindex="-1" data-v-ac8caa8c>2.3 v = sin(v) <a class="header-anchor" href="#_2-3-v-sin-v" aria-label="Permalink to &quot;2.3 v = sin(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Trigonometric function Sine operation function.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: variable type or number <strong data-v-ac8caa8c>(Unit: radian)</strong></p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v : return single number</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = sin(30*D2R)   # my_result= 0.5</span></span></code></pre></div><h4 id="_2-3-v-sind-v" tabindex="-1" data-v-ac8caa8c>2.3 v = sind(v) <a class="header-anchor" href="#_2-3-v-sind-v" aria-label="Permalink to &quot;2.3 v = sind(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Trigonometric function Sine operation function.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: variable type or number <strong data-v-ac8caa8c>(Unit: degree)</strong></p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v : return single number</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = sind(30)    # my_result= 0.5</span></span></code></pre></div><h4 id="_2-4-v-tan-v" tabindex="-1" data-v-ac8caa8c>2.4 v = tan(v) <a class="header-anchor" href="#_2-4-v-tan-v" aria-label="Permalink to &quot;2.4 v = tan(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Trigonometric function Tangent operation function.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: variable type or number <strong data-v-ac8caa8c>(Unit: radian)</strong></p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v : return single number</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = tan(45*D2R)   # my_result=1</span></span></code></pre></div><h4 id="_2-5-v-tand-v" tabindex="-1" data-v-ac8caa8c>2.5 v = tand(v) <a class="header-anchor" href="#_2-5-v-tand-v" aria-label="Permalink to &quot;2.5 v = tand(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Trigonometric function Tangent operation function.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: variable type or number <strong data-v-ac8caa8c>(Unit: degree)</strong></p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v : return single number</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = tand(45)    # my_result=1</span></span></code></pre></div><h4 id="_2-6-v-acos-v" tabindex="-1" data-v-ac8caa8c>2.6 v = acos(v) <a class="header-anchor" href="#_2-6-v-acos-v" aria-label="Permalink to &quot;2.6 v = acos(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Trigonometric function Inverse-Cosine operation function.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: variable type or number</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v : return single number <strong data-v-ac8caa8c>(Unit: radian)</strong></p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = acos(-1)    # my_result= PI (3.141592)</span></span></code></pre></div><h4 id="_2-7-v-acosd-v" tabindex="-1" data-v-ac8caa8c>2.7 v = acosd(v) <a class="header-anchor" href="#_2-7-v-acosd-v" aria-label="Permalink to &quot;2.7 v = acosd(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Trigonometric function Inverse-Cosine operation function.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: variable type or number</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v : return single number <strong data-v-ac8caa8c>(Unit: degree)</strong></p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = acosd(-1)    # my_result=180</span></span></code></pre></div><h4 id="_2-8-v-asin-v" tabindex="-1" data-v-ac8caa8c>2.8 v = asin(v) <a class="header-anchor" href="#_2-8-v-asin-v" aria-label="Permalink to &quot;2.8 v = asin(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Trigonometric function Inverse-Sine operation function.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: variable type or number</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v : return single number <strong data-v-ac8caa8c>(Unit: radian)</strong></p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = asin(1)    # my_result= 1.5708</span></span></code></pre></div><h4 id="_2-9-v-asind-v" tabindex="-1" data-v-ac8caa8c>2.9 v = asind(v) <a class="header-anchor" href="#_2-9-v-asind-v" aria-label="Permalink to &quot;2.9 v = asind(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Trigonometric function Inverse-Sine operation function.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: variable type or number</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v : return single number <strong data-v-ac8caa8c>(Unit: degree)</strong></p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = asind(1)    # my_result= 90</span></span></code></pre></div><h4 id="_2-10-v-atan-v" tabindex="-1" data-v-ac8caa8c>2.10 v = atan(v) <a class="header-anchor" href="#_2-10-v-atan-v" aria-label="Permalink to &quot;2.10 v = atan(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Trigonometric function Inverse-Tangent operation function.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: variable type or number</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v : return single number <strong data-v-ac8caa8c>(Unit: radian)</strong></p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = atan(1)    # my_result= 0.7854</span></span></code></pre></div><h4 id="_2-11-v-atand-v" tabindex="-1" data-v-ac8caa8c>2.11 v = atand(v) <a class="header-anchor" href="#_2-11-v-atand-v" aria-label="Permalink to &quot;2.11 v = atand(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Trigonometric function Inverse-Tangent operation function.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: variable type or number</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v : return single number <strong data-v-ac8caa8c>(Unit: degree)</strong></p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = atand(1)    # my_result= 45</span></span></code></pre></div><h4 id="_2-12-v-atan2-v-v" tabindex="-1" data-v-ac8caa8c>2.12 v = atan2(v, v) <a class="header-anchor" href="#_2-12-v-atan2-v-v" aria-label="Permalink to &quot;2.12 v = atan2(v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Inverse trigonometric function that calculates the quadrant arc tangent.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Two variable types or constant numbers<br data-v-ac8caa8c> v: y direction variable type or number<br data-v-ac8caa8c> v: x direction variable type or number</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v : return single number <strong data-v-ac8caa8c>(Unit: radian)</strong></p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = atan2(1, 1)    # my_result= 0.7854</span></span></code></pre></div><h4 id="_2-13-v-atan2d-v-v" tabindex="-1" data-v-ac8caa8c>2.13 v = atan2d(v, v) <a class="header-anchor" href="#_2-13-v-atan2d-v-v" aria-label="Permalink to &quot;2.13 v = atan2d(v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Inverse trigonometric function that calculates the quadrant arc tangent.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Two variable types or constant numbers<br data-v-ac8caa8c> v: y direction variable type or number<br data-v-ac8caa8c> v: x direction variable type or number</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v : return single number <strong data-v-ac8caa8c>(Unit: degree)</strong></p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = atan2d(1, 1)    # my_result= 45</span></span></code></pre></div><h4 id="_2-14-pi" tabindex="-1" data-v-ac8caa8c>2.14 PI <a class="header-anchor" href="#_2-14-pi" aria-label="Permalink to &quot;2.14 PI&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>It is a constant representing the circumference (π).</p><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_val = PI    # my_val = 3.142</span></span></code></pre></div><h4 id="_2-15-r2d" tabindex="-1" data-v-ac8caa8c>2.15 R2D <a class="header-anchor" href="#_2-15-r2d" aria-label="Permalink to &quot;2.15 R2D&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Operation constant (180/PI) to convert from radian to degree.</p><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_val= PI*R2D    # my_val=180</span></span></code></pre></div><h4 id="_2-16-d2r" tabindex="-1" data-v-ac8caa8c>2.16 D2R <a class="header-anchor" href="#_2-16-d2r" aria-label="Permalink to &quot;2.16 D2R&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Operation constant (PI/180) for converting degree to radian.</p><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_val= 180*D2R    # my_val=3.142</span></span></code></pre></div><h4 id="_2-17-v-abs-v" tabindex="-1" data-v-ac8caa8c>2.17 v = abs(v) <a class="header-anchor" href="#_2-17-v-abs-v" aria-label="Permalink to &quot;2.17 v = abs(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Calculate absolute value of input argument</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: variable type or number</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v : return single number</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = abs(-5.2)    # my_result= 5.2</span></span></code></pre></div><h4 id="_2-18-v-sqrt-v" tabindex="-1" data-v-ac8caa8c>2.18 v = sqrt(v) <a class="header-anchor" href="#_2-18-v-sqrt-v" aria-label="Permalink to &quot;2.18 v = sqrt(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Square root operation function.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: variable type or number</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v : return single number</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = sqrt(4)    # my_result= 2</span></span></code></pre></div><h4 id="_2-19-v-cell-v" tabindex="-1" data-v-ac8caa8c>2.19 v = cell(v) <a class="header-anchor" href="#_2-19-v-cell-v" aria-label="Permalink to &quot;2.19 v = cell(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Rounding-up operation function.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: variable type or number</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v : return single number</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = cell(4.2)    # my_result= 5</span></span></code></pre></div><h4 id="_2-20-v-floor-v" tabindex="-1" data-v-ac8caa8c>2.20 v = floor(v) <a class="header-anchor" href="#_2-20-v-floor-v" aria-label="Permalink to &quot;2.20 v = floor(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Rounding-down operation function.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: variable type or number</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v : return single number</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = floor(4.8)    # my_result= 4</span></span></code></pre></div><h4 id="_2-21-v-round-v" tabindex="-1" data-v-ac8caa8c>2.21 v = round(v) <a class="header-anchor" href="#_2-21-v-round-v" aria-label="Permalink to &quot;2.21 v = round(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Rounding operation function.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: variable type or number</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v : return single number</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = round(4.2)    # my_result= 4</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = round (4.8)   # my_result= 5</span></span></code></pre></div><h4 id="_2-22-v-log-v" tabindex="-1" data-v-ac8caa8c>2.22 v = log(v) <a class="header-anchor" href="#_2-22-v-log-v" aria-label="Permalink to &quot;2.22 v = log(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Natural logarithm (ln) operation function.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: variable type or number</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v : return single number</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = log(4)  # my_result= 1.3862</span></span></code></pre></div><h4 id="_2-23-v-log10-v" tabindex="-1" data-v-ac8caa8c>2.23 v = log10(v) <a class="header-anchor" href="#_2-23-v-log10-v" aria-label="Permalink to &quot;2.23 v = log10(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Logarithm (log10) operation function.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: variable type or number</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v : return single number</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = log10(3)    # my_result= 0.4771</span></span></code></pre></div><h4 id="_2-24-v-pow-v-v" tabindex="-1" data-v-ac8caa8c>2.24 v = pow(v, v) <a class="header-anchor" href="#_2-24-v-pow-v-v" aria-label="Permalink to &quot;2.24 v = pow(v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Power operation function.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Two variable types or constant numbers<br data-v-ac8caa8c> v: variable or constant that is a base of a power<br data-v-ac8caa8c> v: variable or constant that is an exponent of a power</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v : return single number</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = pow(2,3)    # my_result= 8</span></span></code></pre></div><h4 id="_2-25-v-rand" tabindex="-1" data-v-ac8caa8c>2.25 v = rand() <a class="header-anchor" href="#_2-25-v-rand" aria-label="Permalink to &quot;2.25 v = rand()&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Random number generator function with a uniform distribution between 0 and 1.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> None.</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v : return single number</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = rand()    # my_result= 0.1315</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = rand()    # my_result= 0.7869</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = rand()    # my_result= 0.4277</span></span></code></pre></div><h3 id="_3-string-functions" tabindex="-1" data-v-ac8caa8c>3. STRING FUNCTIONS <a class="header-anchor" href="#_3-string-functions" aria-label="Permalink to &quot;3. STRING FUNCTIONS&quot;" data-v-ac8caa8c>​</a></h3><br data-v-ac8caa8c><h4 id="_3-1-v-str-empty-s" tabindex="-1" data-v-ac8caa8c>3.1 v = str_empty(s) <a class="header-anchor" href="#_3-1-v-str-empty-s" aria-label="Permalink to &quot;3.1 v = str_empty(s)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>This function returns the presence or absence of data in a string.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single string type variable or constant string.<br data-v-ac8caa8c> s: string type variable or constant string</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v : return single number 0 or 1 <strong data-v-ac8caa8c>(if string is empty 1, if it is not empty 0)</strong></p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>string my_str1 = “rainbow”</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>string my_str2</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result1 = str_empty(my_str1)    # my_result1= 0</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result2 = str_empty(my_str2)    # my_result2= 1</span></span></code></pre></div><h4 id="_3-2-v-str-find-s-s" tabindex="-1" data-v-ac8caa8c>3.2 v = str_find(s, s) <a class="header-anchor" href="#_3-2-v-str-find-s-s" aria-label="Permalink to &quot;3.2 v = str_find(s, s)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>A function that returns the index of a string&#39;s position within another string.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Two string type variables or constant strings.<br data-v-ac8caa8c> s: reference string<br data-v-ac8caa8c> s: string to find (target)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v: Returns a single number corresponding to the index.<br data-v-ac8caa8c> : If it does not exist, it returns -1.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>string my_str1 = “rainbow_robotics”</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>string my_str2 = “robotics”</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = str_find(my_str1, my_str2)  # my_result= 8</span></span></code></pre></div><h4 id="_3-3-v-str-len-s" tabindex="-1" data-v-ac8caa8c>3.3 v = str_len(s) <a class="header-anchor" href="#_3-3-v-str-len-s" aria-label="Permalink to &quot;3.3 v = str_len(s)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>A function that returns the length of a string.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single string type variable or constant string.<br data-v-ac8caa8c> s: string type variable or constant string</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v: return single number (length of the string)</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>string my_str = “rainbow_robotics”</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = str_len(my_str)    # my_result= 16</span></span></code></pre></div><h4 id="_3-4-s-str-sub-s-v-v" tabindex="-1" data-v-ac8caa8c>3.4 s = str_sub(s, v, v) <a class="header-anchor" href="#_3-4-s-str-sub-s-v-v" aria-label="Permalink to &quot;3.4 s = str_sub(s, v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>A function that truncates a string and returns part of it.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single string type variable or constant string, and two variable types.<br data-v-ac8caa8c> s: reference string<br data-v-ac8caa8c> v: starting index for truncation (variable type or number)<br data-v-ac8caa8c> v: length for truncation (variable type or number)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> s: return truncated string</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>string my_str = “rainbow_robotics”</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>string my_result = str_sub(my_str, 3, 7)    # my_result= “nbow_ro”</span></span></code></pre></div><h4 id="_3-5-s-str-cat-s-s" tabindex="-1" data-v-ac8caa8c>3.5 s = str_cat(s, s) <a class="header-anchor" href="#_3-5-s-str-cat-s-s" aria-label="Permalink to &quot;3.5 s = str_cat(s, s)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>A function that concatenates strings together.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Two string type variables or constant strings.<br data-v-ac8caa8c> s: First string<br data-v-ac8caa8c> s: Second string</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> s: return added string</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>string my_str1 = “hi”</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>string my_str2 = “rainbow”</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>string my_res = str_cat(my_str1, my_str2)     # my_res= “hirainbow”</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>string my_res2 = my_str1 + my_str2            # ’+’ operator returns same result</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>string my_res3 = “My name” + “ is “ + “RB!”   # my_res3= “My name is RB!”</span></span></code></pre></div><h4 id="_3-6-v-str-cmp-s-s" tabindex="-1" data-v-ac8caa8c>3.6 v = str_cmp(s, s) <a class="header-anchor" href="#_3-6-v-str-cmp-s-s" aria-label="Permalink to &quot;3.6 v = str_cmp(s, s)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>A function that compares strings with each other.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Two string type variables or constant strings.<br data-v-ac8caa8c> s: single string for reference<br data-v-ac8caa8c> s: single string for comparing target</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v: Returns 0 if the strings are equal, or a single non-zero number if they are different.<br data-v-ac8caa8c> If the strings are not equal, compares the first unequal character and returns a single number with a value greater than zero if the base string is greater than the comparison string and less than zero if the string is less than.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>string my_str1 = “hello”</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>string my_str2 = “hello”</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>string my_str3 = “hgello”</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>string my_str4 = “Hello”</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result1 = str_cmp(my_str1, my_str2)  # my_result1= 0</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result2 = str_cmp(my_str2, my_str3)  # my_result2= -2  … compare e(101) and g(103)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result3 = str_cmp(my_str3, my_str2)  # my_result3= 2   … compare g(103) and e(101)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result4 = str_cmp(my_str1, my_str4)  # my_result4= 32  … compare h(104) and (72)</span></span></code></pre></div><h4 id="_3-7-v-to-num-s" tabindex="-1" data-v-ac8caa8c>3.7 v = to_num(s) <a class="header-anchor" href="#_3-7-v-to-num-s" aria-label="Permalink to &quot;3.7 v = to_num(s)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Convert character (string) numbers to real-number</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single string type variable or constant string.<br data-v-ac8caa8c> s: string type variable or constant string</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v: return single number</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>str my_string = “123.45”</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = to_num(my_string)   # my_result= 123.45</span></span></code></pre></div><h4 id="_3-8-s-to-str-v-s-to-str-p-s-to-str-j" tabindex="-1" data-v-ac8caa8c>3.8 s = to_str (v), s = to_str (P), s = to_str (J) <a class="header-anchor" href="#_3-8-s-to-str-v-s-to-str-p-s-to-str-j" aria-label="Permalink to &quot;3.8 s = to_str (v), s = to_str (P), s = to_str (J)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Convert variable/point/joint types to string type expression</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or point type or joint type<br data-v-ac8caa8c> v/P/J: variable type or number or point type or joint type</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> s: return string</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_value = 123.45</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>str my_result = to_str(my_value)        # my_result= “123.45”</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point = {100,200,300,90,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>str my_result = to_str(my_point)        # my_result= “{100,200,300,90,0,0}”</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>joint my_joint = {90,0,0,90,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>str my_result = to_str(my_joint)        # my_result= “{90,0,0,90,0,0}”</span></span></code></pre></div><h4 id="_3-9-s-to-str-int-v" tabindex="-1" data-v-ac8caa8c>3.9 s = to_str_int(v) <a class="header-anchor" href="#_3-9-s-to-str-int-v" aria-label="Permalink to &quot;3.9 s = to_str_int(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Converts a single number to a string of integers.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single string type variable or constant string.<br data-v-ac8caa8c> s: string type variable or constant string</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> s: return string</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_value = 123.45</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>str my_result = to_str_int(my_value)    # my_result= “123”</span></span></code></pre></div><h3 id="_4-bit-functions" tabindex="-1" data-v-ac8caa8c>4. BIT FUNCTIONS <a class="header-anchor" href="#_4-bit-functions" aria-label="Permalink to &quot;4. BIT FUNCTIONS&quot;" data-v-ac8caa8c>​</a></h3><br data-v-ac8caa8c><h4 id="_4-1-v-get-bit-v-v" tabindex="-1" data-v-ac8caa8c>4.1 v = get_bit(v, v) <a class="header-anchor" href="#_4-1-v-get-bit-v-v" aria-label="Permalink to &quot;4.1 v = get_bit(v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>A function that obtains the bit of a specific bit position from a variable or constant.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Two variable types or constant numbers<br data-v-ac8caa8c> v: Target variable or number for the bit aquisition.<br data-v-ac8caa8c> v: Target bit index (position). Bit index is starting from 0.</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v: Bit value (0 or 1)</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>                                # 1234 = 0b10011010010</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_bit = get_bit(1234, 3)   # my_bit= 0</span></span></code></pre></div><h4 id="_4-2-set-bit-v-v" tabindex="-1" data-v-ac8caa8c>4.2 set_bit(v, v) <a class="header-anchor" href="#_4-2-set-bit-v-v" aria-label="Permalink to &quot;4.2 set_bit(v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>This is a function that changes the bit at a specific bit position in variable to 1.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Two variable types or constant numbers<br data-v-ac8caa8c> v: Target variable or number for the bit set<br data-v-ac8caa8c> v: Target bit index (position). Bit index is starting from 0.</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_var = 1234    # 1234 = 0b10011010010</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>set_bit(my_var, 3)   # my_var= 1242</span></span></code></pre></div><h4 id="_4-3-clear-bit-v-v" tabindex="-1" data-v-ac8caa8c>4.3 clear_bit(v, v) <a class="header-anchor" href="#_4-3-clear-bit-v-v" aria-label="Permalink to &quot;4.3 clear_bit(v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>This is a function that changes the bit at a specific bit position in variable to 0.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Two variable types or constant numbers<br data-v-ac8caa8c> v: Target variable or number for the bit clear<br data-v-ac8caa8c> v: Target bit index (position). Bit index is starting from 0.</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_var = 1234       # 1234 = 0b10011010010</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>clear_bit(my_var, 1)    # my_var= 1232</span></span></code></pre></div><h4 id="_4-4" tabindex="-1" data-v-ac8caa8c>4.4 &lt;&lt;, &gt;&gt;, &amp;, | <a class="header-anchor" href="#_4-4" aria-label="Permalink to &quot;4.4 &lt;&lt;, &gt;&gt;, &amp;, |&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Bit shift operators, Bit and / or operators<br data-v-ac8caa8c> Can use when bit-shifting or bit and/or operation.</p><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>Var my_num = 12             # my_num = 0b1100</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>Var my_num2 = my_num &lt;&lt; 2   # my_num2 = 48 (0b110000)</span></span></code></pre></div><h3 id="_5-system-functions" tabindex="-1" data-v-ac8caa8c>5. SYSTEM FUNCTIONS <a class="header-anchor" href="#_5-system-functions" aria-label="Permalink to &quot;5. SYSTEM FUNCTIONS&quot;" data-v-ac8caa8c>​</a></h3><br data-v-ac8caa8c><h4 id="_5-1-halt" tabindex="-1" data-v-ac8caa8c>5.1 halt <a class="header-anchor" href="#_5-1-halt" aria-label="Permalink to &quot;5.1 halt&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Stop any program flow or action/movement.</p><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>halt</span></span></code></pre></div><h4 id="_5-2-v-pattern-get-count-v" tabindex="-1" data-v-ac8caa8c>5.2 v = pattern_get_count(v) <a class="header-anchor" href="#_5-2-v-pattern-get-count-v" aria-label="Permalink to &quot;5.2 v = pattern_get_count(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>A function to obtain the current index of the grid that is being performed by the pattern function.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: Pattern number (Confirmation of assigned number is required.)<br data-v-ac8caa8c> : The pattern unique number is set in the pattern action.</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v: Returns the current index of the grid.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var current_count = pattern_get_count(6691)   # Get the current grid index of pattern number 6691.</span></span></code></pre></div><h4 id="_5-3-pattern-set-count-v-v" tabindex="-1" data-v-ac8caa8c>5.3 pattern_set_count(v, v) <a class="header-anchor" href="#_5-3-pattern-set-count-v-v" aria-label="Permalink to &quot;5.3 pattern_set_count(v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>A function that forcibly sets the index of the grid that does the work in the pattern function.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Two variable types or constant numbers<br data-v-ac8caa8c> v: Pattern number (Confirmation of assigned number is required.)<br data-v-ac8caa8c> : The pattern unique number is set in the pattern action.<br data-v-ac8caa8c> v: Desired grid index<br data-v-ac8caa8c> : If the pattern is a 2D flat pattern, and there are grid points of 3x5 = 15, the configurable indices are 0 to 14.</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>pattern_set_count(6691, 3)  # Set the grid index of pattern number 6691 to 3.</span></span></code></pre></div><h4 id="_5-4-p-calc-fk-tcp-v-v-v-v-v-v-p-calc-fk-tcp-j" tabindex="-1" data-v-ac8caa8c>5.4 P = calc_fk_tcp(v, v, v, v, v, v), P = calc_fk_tcp(J) <a class="header-anchor" href="#_5-4-p-calc-fk-tcp-v-v-v-v-v-v-p-calc-fk-tcp-j" aria-label="Permalink to &quot;5.4 P = calc_fk_tcp(v, v, v, v, v, v), P = calc_fk_tcp(J)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Calculate TCP posture w.r.t. global (base) coordinate from six joint angles.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input type 1:<br data-v-ac8caa8c> Six variable types or constant numbers.<br data-v-ac8caa8c> v, v, v, v, v, v: six joint angles (Unit: Degree)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Input type 2:<br data-v-ac8caa8c> J: Single joint type variable which contains six joint-angles.</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> P: Point type variable which contains TCP posture w.r.t. global (base) coordinate</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>joint my_joint = {0,0,0,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_result = calc_fk_tcp(my_joint)     # my_result= {0, -207.62, 1100.59, 0, 0, 0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>                                            # Depending on the TCP setting or robot model, the result may be different.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_result = calc_fk_tcp(0,0,0,0,0,0)  # Same result will be return to ‘my_result’</span></span></code></pre></div><h4 id="_5-5-p-calc-fk-tfc-v-v-v-v-v-v-p-calc-fk-tfc-j" tabindex="-1" data-v-ac8caa8c>5.5 P = calc_fk_tfc(v, v, v, v, v, v), P = calc_fk_tfc(J) <a class="header-anchor" href="#_5-5-p-calc-fk-tfc-v-v-v-v-v-v-p-calc-fk-tfc-j" aria-label="Permalink to &quot;5.5 P = calc_fk_tfc(v, v, v, v, v, v), P = calc_fk_tfc(J)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Calculate TFC (Tool Flange Center) posture w.r.t. global (base) coordinate from six joint angles.<br data-v-ac8caa8c><strong data-v-ac8caa8c>※ The tool flange is where the gripper/tool is mounted on the robot.</strong></p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input type 1:<br data-v-ac8caa8c> Six variable types or constant numbers.<br data-v-ac8caa8c> v, v, v, v, v, v: six joint angles (Unit: Degree)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Input type 2:<br data-v-ac8caa8c> J: Single joint type variable which contains six joint-angles.</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> P: Point type variable which contains TFC posture w.r.t. global (base) coordinate</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>joint my_joint = {0,0,0,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_result = calc_fk_tfc(my_joint)     # my_result= {0, -207.62,1100.59,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_result = calc_fk_tfc(0,0,0,0,0,0)  # Same result will be return to ‘my_result’</span></span></code></pre></div><h4 id="_5-6-v-point-dist-p-p" tabindex="-1" data-v-ac8caa8c>5.6 v = point_dist(P, P) <a class="header-anchor" href="#_5-6-v-point-dist-p-p" aria-label="Permalink to &quot;5.6 v = point_dist(P, P)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Calculates the distance between two points.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Two Point type variables.<br data-v-ac8caa8c> P: Target point 1<br data-v-ac8caa8c> P: Target point 2</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v: return single number (distance).</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_ptr1 = {100, 200, 300, 0, 0, 0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_ptr2 = {100, 200, 200, 0, 0, 0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_result = point_dist(my_ptr1, my_ptr2)   # my_result= 100</span></span></code></pre></div><h4 id="_5-7-p-point-add-p-p" tabindex="-1" data-v-ac8caa8c>5.7 P = point_add(P, P) <a class="header-anchor" href="#_5-7-p-point-add-p-p" aria-label="Permalink to &quot;5.7 P = point_add(P, P)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Calculates the addition of two points.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Two Point type variables.<br data-v-ac8caa8c> P: Target point 1<br data-v-ac8caa8c> P: Target point 2</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v: Returns point, which is the result of adding two points.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_ptr1 = {100, 0, 300, 150, 0, 30}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_ptr2 = {100, 200, 300, 90, 0, 90}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_result = point_add(my_ptr1, my_ptr2)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># my_result= {200, 200, 600, -90, -30, -60}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># x,y,z Distance values are treated as simple arithmetic operations.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Rx,Ry,Rz Rotation values are treated as rotation matrix operations.</span></span></code></pre></div><h4 id="_5-8-p-point-sub-p-p" tabindex="-1" data-v-ac8caa8c>5.8 P = point_sub(P, P) <a class="header-anchor" href="#_5-8-p-point-sub-p-p" aria-label="Permalink to &quot;5.8 P = point_sub(P, P)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Calculates the subtraction of two points.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Two Point type variables.<br data-v-ac8caa8c> P: Target point 1<br data-v-ac8caa8c> P: Target point 2</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v: Returns point, which is the result of subtraction of two points.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_ptr1 = {100, 0, 300, 150, 0, 30}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_ptr2 = {100, 200, 300, 90, 0, 90}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_result = point_sub(my_ptr1, my_ptr2)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># my_result= {0, -200, 0, 0, 60, -60}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># x,y,z Distance values are treated as simple arithmetic operations.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Rx,Ry,Rz Rotation values are treated as rotation matrix operations.</span></span></code></pre></div><h4 id="_5-9-p-point-mid-p-p" tabindex="-1" data-v-ac8caa8c>5.9 P = point_mid(P, P) <a class="header-anchor" href="#_5-9-p-point-mid-p-p" aria-label="Permalink to &quot;5.9 P = point_mid(P, P)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Calculates the midpoint between two points.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Two Point type variables.<br data-v-ac8caa8c> P: Target point 1<br data-v-ac8caa8c> P: Target point 2</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> P: Returns the point that is the midpoint between two points.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_ptr1 = {100, 0, 300, 150, 0, 30}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_ptr2 = {100, 200, 300, 90, 0, 90}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_result = point_mid(my_ptr1, my_ptr2)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># my_result= {100, 100, 300, 120, -8.21, 60}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># x,y,z Distance values are treated as simple arithmetic operations.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Rx,Ry,Rz Rotation values are treated as rotation matrix operations.</span></span></code></pre></div><h4 id="_5-10-p-point-interpolate-p-p-v" tabindex="-1" data-v-ac8caa8c>5.10 P = point_interpolate(P, P, v) <a class="header-anchor" href="#_5-10-p-point-interpolate-p-p-v" aria-label="Permalink to &quot;5.10 P = point_interpolate(P, P, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Computes the interpolation point between two points.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Two Point type variables and single variable/number are required<br data-v-ac8caa8c> P: Target point 1<br data-v-ac8caa8c> P: Target point 2<br data-v-ac8caa8c> v: Weight factor for interpolation (0 ~ 1)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> P: Returns a point that is the result of interpolation between two points.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_ptr1 = {100, 0, 300, 150, 0, 30}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_ptr2 = {100, 200, 300, 90, 0, 90}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_result = point_interpolate(my_ptr1, my_ptr2, 0.1)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># my_result= {100, 20, 300, 144.43, -2.86, 35.37}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># x,y,z Distance values are treated as simple arithmetic operations.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Rx,Ry,Rz Rotation values are treated as rotation matrix operations.</span></span></code></pre></div><h4 id="_5-11-p-point-trans-g2u-p-v" tabindex="-1" data-v-ac8caa8c>5.11 P = point_trans_g2u(P, v) <a class="header-anchor" href="#_5-11-p-point-trans-g2u-p-v" aria-label="Permalink to &quot;5.11 P = point_trans_g2u(P, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Converts the attitude value stored in the Point variable from the global (base) coordinate system to the user coordinate system.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single Point type variable and single number.<br data-v-ac8caa8c> P: Target point<br data-v-ac8caa8c> v: User coordinate number <strong data-v-ac8caa8c>(User coordinate: 0, 1, 2)</strong></p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> P: Returns the converted point coordinate value.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_global_p</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_local_p = point_trans_g2u(my_global_p, 0)</span></span></code></pre></div><h4 id="_5-12-p-point-trans-u2g-p-v" tabindex="-1" data-v-ac8caa8c>5.12 P = point_trans_u2g(P, v) <a class="header-anchor" href="#_5-12-p-point-trans-u2g-p-v" aria-label="Permalink to &quot;5.12 P = point_trans_u2g(P, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Converts the attitude value stored in the Point variable from the user coordinate system to the global (base) coordinate system.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single Point type variable and single number.<br data-v-ac8caa8c> P: Target point<br data-v-ac8caa8c> v: User coordinate number <strong data-v-ac8caa8c>(User coordinate: 0, 1, 2)</strong></p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> P: Returns the converted point coordinate value.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_local_p</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_global_p = point_trans_u2g(my_local_p, 0)</span></span></code></pre></div><h4 id="_5-13-p-get-tcp-info" tabindex="-1" data-v-ac8caa8c>5.13 P = get_tcp_info() <a class="header-anchor" href="#_5-13-p-get-tcp-info" aria-label="Permalink to &quot;5.13 P = get_tcp_info()&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>This function returns the TCP information of the current robot.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> None.</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> P: Returns the TCP of the current robot based on the global coordinate system. <strong data-v-ac8caa8c>(Unit: mm &amp; degree)</strong></p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_result = get_tcp_info()   # TCP posture information will be stored in ‘my_result’</span></span></code></pre></div><h4 id="_5-14-p-get-tfc-info" tabindex="-1" data-v-ac8caa8c>5.14 P = get_tfc_info() <a class="header-anchor" href="#_5-14-p-get-tfc-info" aria-label="Permalink to &quot;5.14 P = get_tfc_info()&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>This function returns the TFC (Tool flange center) information of the current robot.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> None.</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> P: Returns the TFC of the current robot based on the global coordinate system. <strong data-v-ac8caa8c>(Unit: mm &amp; degree)</strong></p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_result = get_tfc_info()   # TFC posture information will be stored in ‘my_result’</span></span></code></pre></div><h4 id="_5-15-j-joint-add-j-j" tabindex="-1" data-v-ac8caa8c>5.15 J = joint_add(J, J) <a class="header-anchor" href="#_5-15-j-joint-add-j-j" aria-label="Permalink to &quot;5.15 J = joint_add(J, J)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Calculates the addition of the angles of two Joints.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Two Joint type variables<br data-v-ac8caa8c> J: Target joint 1<br data-v-ac8caa8c> J: Target joint 2</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> J: Returns the joint, which is the result of the addition operation of two joints.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>joint my_joint1 = {45, 15, 0, 0, 0, 90}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>joint my_joint2 = {0, 45, 45, 15, 0, 0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>joint my_result = joint_add(my_joint1, my_joint2)   # my_result= {45,60,45,15,0,90}</span></span></code></pre></div><h4 id="_5-16-j-joint-sub-j-j" tabindex="-1" data-v-ac8caa8c>5.16 J = joint_sub(J, J) <a class="header-anchor" href="#_5-16-j-joint-sub-j-j" aria-label="Permalink to &quot;5.16 J = joint_sub(J, J)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>This function calculates the subtraction of two joint angles.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Two Joint type variables<br data-v-ac8caa8c> J: Target joint 1<br data-v-ac8caa8c> J: Target joint 2</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> J: Returns the joint, which is the result of the subtraction operation of two joints.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>joint my_joint1 = {45, 15, 0, 0, 0, 90}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>joint my_joint2 = {0, 45, 45, 15, 0, 0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>joint my_result = joint_sub(my_joint1, my_joint2)   # my_result= {45,-30,-45,-15,0,90}</span></span></code></pre></div><h4 id="_5-17-j-joint-mid-j-j" tabindex="-1" data-v-ac8caa8c>5.17 J = joint_mid(J, J) <a class="header-anchor" href="#_5-17-j-joint-mid-j-j" aria-label="Permalink to &quot;5.17 J = joint_mid(J, J)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Computes the intermediate joint between two joint angles.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Two Joint type variables.<br data-v-ac8caa8c> J: Target joint 1<br data-v-ac8caa8c> J: Target joint 2</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> J: Returns the joint that is the result of the intermediate joint operation of two joints.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>joint my_joint1 = {45, 15, 0, 15, 0, 90}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>joint my_joint2 = {45, 15, 0, 15, 0, 0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>joint my_result = joint_mid(my_joint1, my_joint2)   # my_result= {45, 15, 0, 15, 0, 45}</span></span></code></pre></div><h4 id="_5-18-j-joint-interpolate-j-j-v" tabindex="-1" data-v-ac8caa8c>5.18 J = joint_interpolate(J, J, v) <a class="header-anchor" href="#_5-18-j-joint-interpolate-j-j-v" aria-label="Permalink to &quot;5.18 J = joint_interpolate(J, J, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Computes the interpolation joint between two joint angles.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Two Joint type variables and single variable/number are required<br data-v-ac8caa8c> J: Target joint 1<br data-v-ac8caa8c> J: Target joint 2<br data-v-ac8caa8c> v: Weight factor for interpolation (0 ~ 1)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> J: Returns a joint that is the result of interpolation between two joints.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>joint my_joint1 = {45, 15, 0, 15, 0, 90}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>joint my_joint2 = {45, 15, 0, 15, 0, 0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>joint my_result = joint_interpolate(my_joint1, my_joint2, 0.1)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># my_result= {45, 15, 0, 15, 0, 81}</span></span></code></pre></div><h4 id="_5-19-j-get-joint-info" tabindex="-1" data-v-ac8caa8c>5.19 J = get_joint_info() <a class="header-anchor" href="#_5-19-j-get-joint-info" aria-label="Permalink to &quot;5.19 J = get_joint_info()&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Returns the current joint angle information.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> None.</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> J: It returns the joint information of the current robot based on the joint coordinate system. <strong data-v-ac8caa8c>(Unit: degree)</strong></p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>joint my_result = get_joint_info()  # current robot’s joint angles will be return to ‘my_result’</span></span></code></pre></div><h4 id="_5-20-set-payload-info-v-v-v-v" tabindex="-1" data-v-ac8caa8c>5.20 set_payload_info(v, v, v, v) <a class="header-anchor" href="#_5-20-set-payload-info-v-v-v-v" aria-label="Permalink to &quot;5.20 set_payload_info(v, v, v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Set the tool payload w.r.t. the manufacturer’s default tool coordinate system.</p><div class="warning custom-block" data-v-ac8caa8c><p class="custom-block-title" data-v-ac8caa8c>CAUTION</p><ol data-v-ac8caa8c><li data-v-ac8caa8c> The value set in this function returns to the default value after the program ends. </li><li data-v-ac8caa8c> If this function is not called in program-flow, the value set in the Setup page is used. </li><li data-v-ac8caa8c> During program flow, the value set in this function is maintained until this function is called again. </li></ol></div><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Four variable types or constant numbers.<br data-v-ac8caa8c> v: payload weight <strong data-v-ac8caa8c>(Unit: kg)</strong><br data-v-ac8caa8c> v: payload Center of mass x-axis value <strong data-v-ac8caa8c>(Unit: mm)</strong><br data-v-ac8caa8c> v: payload Center of mass y-axis value <strong data-v-ac8caa8c>(Unit: mm</strong>)<br data-v-ac8caa8c> v: payload Center of mass z-axis value <strong data-v-ac8caa8c>(Unit: mm)</strong></p><ul data-v-ac8caa8c><li data-v-ac8caa8c>Three values entered are based on the manufacturer&#39;s default tool coordinate system.</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>set_payload_info(3, 0, -50, 0)  # Set payload as 3kg, and center-of-mass as (0mm,-50mm, 0mm).</span></span></code></pre></div><h4 id="_5-21-set-tcp-info-v-v-v-v-v-v" tabindex="-1" data-v-ac8caa8c>5.21 set_tcp_info(v, v, v, v, v, v) <a class="header-anchor" href="#_5-21-set-tcp-info-v-v-v-v-v-v" aria-label="Permalink to &quot;5.21 set_tcp_info(v, v, v, v, v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Set the TCP position and orientation w.r.t. the manufacturer’s default tool coordinate system.</p><div class="warning custom-block" data-v-ac8caa8c><p class="custom-block-title" data-v-ac8caa8c>CAUTION</p><ol data-v-ac8caa8c><li data-v-ac8caa8c> The value set in this function returns to the default value after the program ends. </li><li data-v-ac8caa8c> If this function is not called in program-flow, the value set in the Setup page is used. </li><li data-v-ac8caa8c> During program flow, the value set in this function is maintained until this function is called again. </li></ol></div><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Six variable types or constant numbers.<br data-v-ac8caa8c> v: TCP’s x-value <strong data-v-ac8caa8c>(Unit: mm)</strong><br data-v-ac8caa8c> v: TCP’s y-value <strong data-v-ac8caa8c>(Unit: mm)</strong><br data-v-ac8caa8c> v: TCP’s z-value <strong data-v-ac8caa8c>(Unit: mm)</strong><br data-v-ac8caa8c> v: TCP’s Rx-value <strong data-v-ac8caa8c>(Unit: degree)</strong><br data-v-ac8caa8c> v: TCP’s Ry-value <strong data-v-ac8caa8c>(Unit: degree)</strong><br data-v-ac8caa8c> v: TCP’s Rz-value <strong data-v-ac8caa8c>(Unit: degree)</strong></p><ul data-v-ac8caa8c><li data-v-ac8caa8c>Six values entered are based on the manufacturer&#39;s default tool coordinate system.</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>set_tcp_info(0, -100, 0, 0, 0, 0)  # Set TCP position as (0mm,-100mm, 0mm).</span></span></code></pre></div><h4 id="_5-22-set-collision-onoff-v" tabindex="-1" data-v-ac8caa8c>5.22 set_collision_onoff(v) <a class="header-anchor" href="#_5-22-set-collision-onoff-v" aria-label="Permalink to &quot;5.22 set_collision_onoff(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>This function turns on/off the collision detection function.</p><div class="warning custom-block" data-v-ac8caa8c><p class="custom-block-title" data-v-ac8caa8c>CAUTION</p><ol data-v-ac8caa8c><li data-v-ac8caa8c> The value set in this function returns to the default value after the program ends. </li><li data-v-ac8caa8c> If this function is not called in program-flow, the value set in the Setup page is used. </li><li data-v-ac8caa8c> During program flow, the value set in this function is maintained until this function is called again. </li></ol></div><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: 0 is off , 1 is on.</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>set_collision_onoff(1)  # Turn on the collision detection function.</span></span></code></pre></div><h4 id="_5-23-set-collision-th-v" tabindex="-1" data-v-ac8caa8c>5.23 set_collision_th(v) <a class="header-anchor" href="#_5-23-set-collision-th-v" aria-label="Permalink to &quot;5.23 set_collision_th(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Sets the collision sensitivity (threshold).</p><div class="warning custom-block" data-v-ac8caa8c><p class="custom-block-title" data-v-ac8caa8c>CAUTION</p><ol data-v-ac8caa8c><li data-v-ac8caa8c> The value set in this function returns to the default value after the program ends. </li><li data-v-ac8caa8c> If this function is not called in program-flow, the value set in the Setup page is used. </li><li data-v-ac8caa8c> During program flow, the value set in this function is maintained until this function is called again. </li></ol></div><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: Value between 0 ~ 1. The lower the value, the more sensitive to collision. (0 ~ 1)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>set_collision_th(0.1)   # Set the collision threshold as 10%.</span></span></code></pre></div><h4 id="_5-24-set-collision-mode-v" tabindex="-1" data-v-ac8caa8c>5.24 set_collision_mode(v) <a class="header-anchor" href="#_5-24-set-collision-mode-v" aria-label="Permalink to &quot;5.24 set_collision_mode(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Set the stop-mode after the collision detection.</p><div class="warning custom-block" data-v-ac8caa8c><p class="custom-block-title" data-v-ac8caa8c>CAUTION</p><ol data-v-ac8caa8c><li data-v-ac8caa8c> The value set in this function returns to the default value after the program ends. </li><li data-v-ac8caa8c> If this function is not called in program-flow, the value set in the Setup page is used. </li><li data-v-ac8caa8c> During program flow, the value set in this function is maintained until this function is called again. </li></ol></div><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: Stop mode.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = General Stop</li><li data-v-ac8caa8c>1 = Evasion Stop</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>set_collision_mode(1)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># After detecting a collision, the robot moves a little in the direction to avoid external force and then stops the movement.</span></span></code></pre></div><h4 id="_5-25-set-collision-after-v" tabindex="-1" data-v-ac8caa8c>5.25 set_collision_after(v) <a class="header-anchor" href="#_5-25-set-collision-after-v" aria-label="Permalink to &quot;5.25 set_collision_after(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Set the program flow direction after the collision detection.</p><div class="warning custom-block" data-v-ac8caa8c><p class="custom-block-title" data-v-ac8caa8c>CAUTION</p><ol data-v-ac8caa8c><li data-v-ac8caa8c> The value set in this function returns to the default value after the program ends. </li><li data-v-ac8caa8c> During program flow, the value set in this function is maintained until this function is called again. </li></ol></div><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: Stop mode</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = Pause the Program flow <strong data-v-ac8caa8c>(default)</strong></li><li data-v-ac8caa8c>1 = Halt/Stop the Program flow</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>set_collision_after(1)  # After detecting an external collision, the program flow stops (ends).</span></span></code></pre></div><h4 id="_5-26-set-speed-multiply-v" tabindex="-1" data-v-ac8caa8c>5.26 set_speed_multiply(v) <a class="header-anchor" href="#_5-26-set-speed-multiply-v" aria-label="Permalink to &quot;5.26 set_speed_multiply(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Sets the overall speed (velocity) multiplier.</p><div class="warning custom-block" data-v-ac8caa8c><p class="custom-block-title" data-v-ac8caa8c>CAUTION</p><ol data-v-ac8caa8c><li data-v-ac8caa8c> The value set in this function returns to the default value after the program ends. </li><li data-v-ac8caa8c> During program flow, the value set in this function is maintained until this function is called again. </li></ol></div><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: Multiply value <strong data-v-ac8caa8c>(0 ~ 2) (default: 1)</strong></p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var speed_override = 1.5</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>set_speed_multiply(speed_override)  # Desired-speed = 1.5 x original-speed</span></span></code></pre></div><h4 id="_5-27-set-acc-multiply-v" tabindex="-1" data-v-ac8caa8c>5.27 set_acc_multiply(v) <a class="header-anchor" href="#_5-27-set-acc-multiply-v" aria-label="Permalink to &quot;5.27 set_acc_multiply(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Sets the overall acceleration multiplier.</p><div class="warning custom-block" data-v-ac8caa8c><p class="custom-block-title" data-v-ac8caa8c>CAUTION</p><ol data-v-ac8caa8c><li data-v-ac8caa8c> The value set in this function returns to the default value after the program ends. </li><li data-v-ac8caa8c> During program flow, the value set in this function is maintained until this function is called again. </li></ol></div><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: Multiply value <strong data-v-ac8caa8c>(0 ~ 2) (default: 1)</strong></p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var acc_override = 0.5</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>set_acc_multiply(acc_override)  # Desired-acceleration = 0.5 x original-acceleration</span></span></code></pre></div><h4 id="_5-28-set-speed-acc-j-v-v" tabindex="-1" data-v-ac8caa8c>5.28 set_speed_acc_j(v, v) <a class="header-anchor" href="#_5-28-set-speed-acc-j-v-v" aria-label="Permalink to &quot;5.28 set_speed_acc_j(v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Sets fixed joint velocity/acceleration for J-series motions (MoveJ, MoveJB, MoveJL).</p><div class="warning custom-block" data-v-ac8caa8c><p class="custom-block-title" data-v-ac8caa8c>CAUTION</p><ol data-v-ac8caa8c><li data-v-ac8caa8c> The value set in this function returns to the default value after the program ends. </li><li data-v-ac8caa8c> During program flow, the value set in this function is maintained until this function is called again. </li></ol></div><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Two variable types or constant numbers<br data-v-ac8caa8c> v: Speed/ Velocity (Unit: 𝒅𝒆𝒈/𝒔)<br data-v-ac8caa8c> Does not lock the speed for negative input.<br data-v-ac8caa8c> v: Acceleration (Unit: 𝒅𝒆𝒈/𝒔𝟐)<br data-v-ac8caa8c> Does not lock the acceleration for negative input.</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>set_speed_acc_j(10, 3)  # Ignoring the speed/acceleration set for each point of Move,</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>                        # set speed as 10 𝑑𝑒𝑔/𝑠, and acceleration as 3 𝑑𝑒𝑔/𝑠2.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>set_speed_acc_j(-1, 5)  # Ignoring the acceleration set for each point of Move,</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>                        # set acceleration as 5𝑑𝑒𝑔/𝑠2.</span></span></code></pre></div><h4 id="_5-29-set-speed-acc-l-v-v" tabindex="-1" data-v-ac8caa8c>5.29 set_speed_acc_l(v, v) <a class="header-anchor" href="#_5-29-set-speed-acc-l-v-v" aria-label="Permalink to &quot;5.29 set_speed_acc_l(v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Sets fixed linear velocity/acceleration for L-series motions (MoveL, MovePB, MoveLB, MoveITPL).</p><div class="warning custom-block" data-v-ac8caa8c><p class="custom-block-title" data-v-ac8caa8c>CAUTION</p><ol data-v-ac8caa8c><li data-v-ac8caa8c> The value set in this function returns to the default value after the program ends. </li><li data-v-ac8caa8c> During program flow, the value set in this function is maintained until this function is called again. </li></ol></div><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Two variable types or constant numbers<br data-v-ac8caa8c> v: Speed/ Velocity (Unit: 𝒎𝒎/𝒔)<br data-v-ac8caa8c> Does not lock the speed for negative input.<br data-v-ac8caa8c> v: Acceleration (Unit: 𝒎𝒎/𝒔𝟐)<br data-v-ac8caa8c> Does not lock the acceleration for negative input.</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>set_speed_acc_l(15, 5)  # Ignoring the speed/acceleration set for each point of Move,</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>                        # set speed as 15 𝑚𝑚/𝑠, and acceleration as 5 𝑚𝑚/𝑠2.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>set_speed_acc_l(5, -1)  # Ignoring the speed set for each point of Move,</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>                        # set speed as 5𝑚𝑚/𝑠.</span></span></code></pre></div><h4 id="_5-30-set-speed-bar-v" tabindex="-1" data-v-ac8caa8c>5.30 set_speed_bar(v) <a class="header-anchor" href="#_5-30-set-speed-bar-v" aria-label="Permalink to &quot;5.30 set_speed_bar(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Set the overall speed control bar. (bottom speed control bar in UI).</p><div class="warning custom-block" data-v-ac8caa8c><p class="custom-block-title" data-v-ac8caa8c>CAUTION</p><ul data-v-ac8caa8c><li data-v-ac8caa8c> When running a program on the UI Make page, this function does not work if the safety slide bar option is turned on. </li></ul></div><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: Desired speed control bar position <strong data-v-ac8caa8c>(0 ~ 1)</strong></p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>set_speed_bar(0.5)  # Set the speed control bar to 50%.</span></span></code></pre></div><h4 id="_5-31-set-box-dout-v-v" tabindex="-1" data-v-ac8caa8c>5.31 set_box_dout(v, v) <a class="header-anchor" href="#_5-31-set-box-dout-v-v" aria-label="Permalink to &quot;5.31 set_box_dout(v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Set the digital output of the control box.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Two variable types or constant numbers.<br data-v-ac8caa8c> v: Port number for the digital-output <strong data-v-ac8caa8c>(0 ~ 15)</strong><br data-v-ac8caa8c> v: Output mode selection <strong data-v-ac8caa8c>(-1 = Bypass, 0 = Low, 1 = High)</strong></p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>set_box_dout(0, 0)     # Low output from port 0</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>set_box_dout(0, -1)    # Keep low on port 0</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>set_box_dout(0, 1)     # High output from port 0</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>set_box_dout(0, -1)    # Keep high on port 0</span></span></code></pre></div><h4 id="_5-32-set-box-aout-v-v" tabindex="-1" data-v-ac8caa8c>5.32 set_box_aout(v, v) <a class="header-anchor" href="#_5-32-set-box-aout-v-v" aria-label="Permalink to &quot;5.32 set_box_aout(v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Set the analog output of the control box.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Two variable types or constant numbers<br data-v-ac8caa8c> v: Port number for the analog output <strong data-v-ac8caa8c>(0 ~ 3)</strong><br data-v-ac8caa8c> v: Desired output voltage <strong data-v-ac8caa8c>(0 ~ 10V)</strong></p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>set_box_aout(3, 7)  # set 7V for the analog output port 3.</span></span></code></pre></div><h4 id="_5-33-set-box-dout-toggle-v" tabindex="-1" data-v-ac8caa8c>5.33 set_box_dout_toggle(v) <a class="header-anchor" href="#_5-33-set-box-dout-toggle-v" aria-label="Permalink to &quot;5.33 set_box_dout_toggle(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Toggles the current digital output of the control box.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Single variable type or constant number<br data-v-ac8caa8c> v: Port number for the digital-output <strong data-v-ac8caa8c>(0 ~ 15)</strong></p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>set_box_dout (1, 1)         # High output from port 1</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>set_box_dout_toggle (1)     # Toggle the output port 1 ( Low signal will be out)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>repeat (1 times){           # Port 3 blinks every second</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>    set_box_dout_toggle(3)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>    wait (1 sec)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>}</span></span></code></pre></div><h4 id="_5-34-set-serial-tool-v-v-v" tabindex="-1" data-v-ac8caa8c>5.34 set_serial_tool(v, v, v) <a class="header-anchor" href="#_5-34-set-serial-tool-v-v-v" aria-label="Permalink to &quot;5.34 set_serial_tool(v, v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Set the serial communication (RS232/485) provided by the Tool Flange of the robot arm.</p><div class="warning custom-block" data-v-ac8caa8c><p class="custom-block-title" data-v-ac8caa8c>CAUTION</p><ol data-v-ac8caa8c><li data-v-ac8caa8c> The value set in this function returns to the default value after the program ends. </li><li data-v-ac8caa8c> If this function is not called in program-flow, the value set in the Setup page is used. </li><li data-v-ac8caa8c> During program flow, the value set in this function is maintained until this function is called again. </li></ol></div><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Three variable types or constant numbers.<br data-v-ac8caa8c> v: Communication speed(Baud rate)<br data-v-ac8caa8c> v: Stop bit, (0 or 1, <strong data-v-ac8caa8c>Default 1</strong>)<br data-v-ac8caa8c> v: Parity bit, (0 : none, 1 : odd, 2 : even, <strong data-v-ac8caa8c>Default 0</strong>)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>set_serial_tool(115200, 1, 0)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Set tool-flange serial comm. : baud rate = 115200 / stop bit = 1 / parity = none</span></span></code></pre></div><h4 id="_5-35-set-serial-box-v-v-v" tabindex="-1" data-v-ac8caa8c>5.35 set_serial_box(v, v, v) <a class="header-anchor" href="#_5-35-set-serial-box-v-v-v" aria-label="Permalink to &quot;5.35 set_serial_box(v, v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Set the serial communication (RS232/485) provided by the control box.</p><div class="warning custom-block" data-v-ac8caa8c><p class="custom-block-title" data-v-ac8caa8c>CAUTION</p><ol data-v-ac8caa8c><li data-v-ac8caa8c> The value set in this function returns to the default value after the program ends. </li><li data-v-ac8caa8c> If this function is not called in program-flow, the value set in the Setup page is used. </li><li data-v-ac8caa8c> During program flow, the value set in this function is maintained until this function is called again. </li></ol></div><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> Three variable types or constant numbers.<br data-v-ac8caa8c> v: Communication speed(Baud rate)<br data-v-ac8caa8c> v: Stop bit, (0 or 1, <strong data-v-ac8caa8c>Default 1</strong>)<br data-v-ac8caa8c> v: Parity bit, (0 : none, 1 : odd, 2 : even, <strong data-v-ac8caa8c>Default 0</strong>)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>set_serial_box(9600, 1, 0)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Set control-box serial comm. : baud rate = 9600 / stop bit = 1 / parity = none</span></span></code></pre></div><h4 id="_5-36-arm-powerdown" tabindex="-1" data-v-ac8caa8c>5.36 arm_powerdown() <a class="header-anchor" href="#_5-36-arm-powerdown" aria-label="Permalink to &quot;5.36 arm_powerdown()&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Turn off the power supply for the robot arm.</p><div class="warning custom-block" data-v-ac8caa8c><p class="custom-block-title" data-v-ac8caa8c>CAUTION</p><ul data-v-ac8caa8c><li data-v-ac8caa8c> The robot arm powers down. Be careful with use. The control box does not turn off. </li></ul></div><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> None.</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>arm_powerdown()</span></span></code></pre></div><h4 id="_5-37-freedrive-teach-on" tabindex="-1" data-v-ac8caa8c>5.37 freedrive_teach_on() <a class="header-anchor" href="#_5-37-freedrive-teach-on" aria-label="Permalink to &quot;5.37 freedrive_teach_on()&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Turn on direct teaching mode (Free drive mode).</p><div class="warning custom-block" data-v-ac8caa8c><p class="custom-block-title" data-v-ac8caa8c>CAUTION</p><ul data-v-ac8caa8c><li data-v-ac8caa8c> When this function is executed, the control mode of the robot arm is changed. Use with caution. </li></ul></div><h4 id="_5-38-freedrive-teach-off" tabindex="-1" data-v-ac8caa8c>5.38 freedrive_teach_off() <a class="header-anchor" href="#_5-38-freedrive-teach-off" aria-label="Permalink to &quot;5.38 freedrive_teach_off()&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Turn off direct teaching mode (Free drive mode).</p><div class="warning custom-block" data-v-ac8caa8c><p class="custom-block-title" data-v-ac8caa8c>CAUTION</p><ul data-v-ac8caa8c><li data-v-ac8caa8c> When this function is executed, the control mode of the robot arm is changed. Use with caution. </li></ul></div><h3 id="_6-system-variables" tabindex="-1" data-v-ac8caa8c>6. SYSTEM VARIABLES <a class="header-anchor" href="#_6-system-variables" aria-label="Permalink to &quot;6. SYSTEM VARIABLES&quot;" data-v-ac8caa8c>​</a></h3><br data-v-ac8caa8c><h4 id="_6-1-sd-time" tabindex="-1" data-v-ac8caa8c>6.1 SD_TIME <a class="header-anchor" href="#_6-1-sd-time" aria-label="Permalink to &quot;6.1 SD_TIME&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>SD_TIME<br data-v-ac8caa8c> SD_TIMER_0, SD_TIMER_1, …, SD_TIMER_9<br data-v-ac8caa8c></p><p data-v-ac8caa8c>A variable representing time.<br data-v-ac8caa8c> It can be changed to the desired value in the Set function.<br data-v-ac8caa8c> Used as a timer function.</p><p data-v-ac8caa8c>Time automatically increments with the flow of program time. <strong data-v-ac8caa8c>(Unit: Second)</strong></p><h4 id="_6-2-sd-j-ref" tabindex="-1" data-v-ac8caa8c>6.2 SD_J#_REF <a class="header-anchor" href="#_6-2-sd-j-ref" aria-label="Permalink to &quot;6.2 SD_J#\\_REF&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>SD_J0_REF<br data-v-ac8caa8c> SD_J1_REF<br data-v-ac8caa8c> SD_J2_REF<br data-v-ac8caa8c> SD_J3_REF<br data-v-ac8caa8c> SD_J4_REF<br data-v-ac8caa8c> SD_J5_REF<br data-v-ac8caa8c></p><p data-v-ac8caa8c>Joint reference angles. <strong data-v-ac8caa8c>(Unit: degree)</strong></p><h4 id="_6-3-sd-j-ang" tabindex="-1" data-v-ac8caa8c>6.3 SD_J#_ANG <a class="header-anchor" href="#_6-3-sd-j-ang" aria-label="Permalink to &quot;6.3 SD_J#\\_ANG&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>SD_J0_ANG<br data-v-ac8caa8c> SD_J1_ANG<br data-v-ac8caa8c> SD_J2_ANG<br data-v-ac8caa8c> SD_J3_ANG<br data-v-ac8caa8c> SD_J4_ANG<br data-v-ac8caa8c> SD_J5_ANG<br data-v-ac8caa8c></p><p data-v-ac8caa8c>Joint encoder angles. <strong data-v-ac8caa8c>(Unit: degree)</strong></p><h4 id="_6-4-sd-j-cur" tabindex="-1" data-v-ac8caa8c>6.4 SD_J#_CUR <a class="header-anchor" href="#_6-4-sd-j-cur" aria-label="Permalink to &quot;6.4 SD_J#\\_CUR&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>SD_J0_CUR<br data-v-ac8caa8c> SD_J1_CUR<br data-v-ac8caa8c> SD_J2_CUR<br data-v-ac8caa8c> SD_J3_CUR<br data-v-ac8caa8c> SD_J4_CUR<br data-v-ac8caa8c> SD_J5_CUR<br data-v-ac8caa8c></p><p data-v-ac8caa8c>Joint phase current. <strong data-v-ac8caa8c>(Unit: A)</strong></p><h4 id="_6-5-sd-begin-j" tabindex="-1" data-v-ac8caa8c>6.5 SD_BEGIN_J# <a class="header-anchor" href="#_6-5-sd-begin-j" aria-label="Permalink to &quot;6.5 SD_BEGIN_J#&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>SD_BEGIN_J0<br data-v-ac8caa8c> SD_BEGIN_J1<br data-v-ac8caa8c> SD_BEGIN_J2<br data-v-ac8caa8c> SD_BEGIN_J3<br data-v-ac8caa8c> SD_BEGIN_J4<br data-v-ac8caa8c> SD_BEGIN_J5<br data-v-ac8caa8c></p><p data-v-ac8caa8c>Variable representing the joint angles set in Begin. <strong data-v-ac8caa8c>(Unit: degree)</strong></p><h4 id="_6-6-sd-temperature-mc" tabindex="-1" data-v-ac8caa8c>6.6 SD_TEMPERATURE_MC# <a class="header-anchor" href="#_6-6-sd-temperature-mc" aria-label="Permalink to &quot;6.6 SD_TEMPERATURE_MC#&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>SD_TEMPERATURE_MC0<br data-v-ac8caa8c> SD_TEMPERATURE_MC1<br data-v-ac8caa8c> SD_TEMPERATURE_MC2<br data-v-ac8caa8c> SD_TEMPERATURE_MC3<br data-v-ac8caa8c> SD_TEMPERATURE_MC4<br data-v-ac8caa8c> SD_TEMPERATURE_MC5<br data-v-ac8caa8c></p><p data-v-ac8caa8c>Joint motor controller temperature. <strong data-v-ac8caa8c>(Unit: celsius)</strong></p><h4 id="_6-6-sd-tcp-x" tabindex="-1" data-v-ac8caa8c>6.6 SD_TCP_X <a class="header-anchor" href="#_6-6-sd-tcp-x" aria-label="Permalink to &quot;6.6 SD_TCP_X&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>SD_TCP_X<br data-v-ac8caa8c> SD_TCP_Y<br data-v-ac8caa8c> SD_TCP_Z<br data-v-ac8caa8c> SD_TCP_RX<br data-v-ac8caa8c> SD_TCP_RY<br data-v-ac8caa8c> SD_TCP_RZ<br data-v-ac8caa8c></p><p data-v-ac8caa8c>TCP values (position and orientation) with respect to the base (global) coordinate.</p><h4 id="_6-7-sd-default-speed" tabindex="-1" data-v-ac8caa8c>6.7 SD_DEFAULT_SPEED <a class="header-anchor" href="#_6-7-sd-default-speed" aria-label="Permalink to &quot;6.7 SD_DEFAULT_SPEED&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Representing the default speed bar. The UI speed control bar value is displayed between 0 and 1.</p><h4 id="_6-8-sd-robot-state" tabindex="-1" data-v-ac8caa8c>6.8 SD_ROBOT_STATE <a class="header-anchor" href="#_6-8-sd-robot-state" aria-label="Permalink to &quot;6.8 SD_ROBOT_STATE&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Indicates whether the robot motion command is being executed.<br data-v-ac8caa8c></p><ul data-v-ac8caa8c><li data-v-ac8caa8c>1 = Idle</li><li data-v-ac8caa8c>3 = Moving</li></ul><h4 id="_6-9-sd-power-state" tabindex="-1" data-v-ac8caa8c>6.9 SD_POWER_STATE <a class="header-anchor" href="#_6-9-sd-power-state" aria-label="Permalink to &quot;6.9 SD_POWER_STATE&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Power information of the control box.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>SD_POWER_STATE &gt;&gt; 0 &amp; 0x01 : 48V SMPS State</li><li data-v-ac8caa8c>SD_POWER_STATE &gt;&gt; 1 &amp; 0x01 : Power switching information</li><li data-v-ac8caa8c>SD_POWER_STATE &gt;&gt; 2 &amp; 0x01 : 24V SMPS State</li><li data-v-ac8caa8c>SD_POWER_STATE &gt;&gt; 3 &amp; 0x01 : 48V switching information</li><li data-v-ac8caa8c>SD_POWER_STATE &gt;&gt; 4 &amp; 0x01 : User (PC) power selection information</li><li data-v-ac8caa8c>SD_POWER_STATE &gt;&gt; 5 &amp; 0x01 : Estop switch state</li></ul><h4 id="_6-10-sd-collision-detect-state" tabindex="-1" data-v-ac8caa8c>6.10 SD_COLLISION_DETECT_STATE <a class="header-anchor" href="#_6-10-sd-collision-detect-state" aria-label="Permalink to &quot;6.10 SD_COLLISION_DETECT_STATE&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Whether the external collision detection function is on/off</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = Collision detection mode off</li><li data-v-ac8caa8c>1 = Collision detection mode on</li></ul><h4 id="_6-11-sd-is-free-drive-mode" tabindex="-1" data-v-ac8caa8c>6.11 SD_IS_FREE_DRIVE_MODE <a class="header-anchor" href="#_6-11-sd-is-free-drive-mode" aria-label="Permalink to &quot;6.11 SD_IS_FREE_DRIVE_MODE&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Whether to use direct teaching</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = Free-drive (Direct teaching) off</li><li data-v-ac8caa8c>1 = Free-drive (Direct teaching) on</li></ul><h4 id="_6-12-sd-pg-mode" tabindex="-1" data-v-ac8caa8c>6.12 SD_PG_MODE <a class="header-anchor" href="#_6-12-sd-pg-mode" aria-label="Permalink to &quot;6.12 SD_PG_MODE&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Indicates the robot&#39;s operation mode.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = Real mode</li><li data-v-ac8caa8c>1 = Simulation mode</li></ul><h4 id="_6-13-sd-init-state-info" tabindex="-1" data-v-ac8caa8c>6.13 SD_INIT_STATE_INFO <a class="header-anchor" href="#_6-13-sd-init-state-info" aria-label="Permalink to &quot;6.13 SD_INIT_STATE_INFO&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>This is a system variable representing the activation phase information of the robot.</p><h4 id="_6-14-sd-init-err" tabindex="-1" data-v-ac8caa8c>6.14 SD_INIT_ERR <a class="header-anchor" href="#_6-14-sd-init-err" aria-label="Permalink to &quot;6.14 SD_INIT_ERR&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>This is a system variable that indicates the robot activation error information.</p><h4 id="_6-15-sd-tfb-analog-in" tabindex="-1" data-v-ac8caa8c>6.15 SD_TFB_ANALOG_IN_# <a class="header-anchor" href="#_6-15-sd-tfb-analog-in" aria-label="Permalink to &quot;6.15 SD_TFB_ANALOG_IN\\_\\#&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>SD_TFB_ANALOG_IN_0<br data-v-ac8caa8c> SD_TFB_ANALOG_IN_1</p><p data-v-ac8caa8c>Variable with analog value (0~10V) of two analog input ports of tool flange board (TFB).</p><h4 id="_6-16-sd-tfb-digital-in" tabindex="-1" data-v-ac8caa8c>6.16 SD_TFB_DIGITAL_IN_# <a class="header-anchor" href="#_6-16-sd-tfb-digital-in" aria-label="Permalink to &quot;6.16 SD_TFB_DIGITAL_IN\\_\\#&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>SD_TFB_DIGITAL_IN_0<br data-v-ac8caa8c> SD_TFB_DIGITAL_IN_1</p><p data-v-ac8caa8c>A variable with a digital value (0 or 1) of the two digital input ports on the tool flange board (TFB).</p><h4 id="_6-17-sd-tfb-digital-out" tabindex="-1" data-v-ac8caa8c>6.17 SD_TFB_DIGITAL_OUT_# <a class="header-anchor" href="#_6-17-sd-tfb-digital-out" aria-label="Permalink to &quot;6.17 SD_TFB_DIGITAL_OUT\\_\\#&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>SD_TFB_DIGITAL_OUT_0<br data-v-ac8caa8c> SD_TFB_DIGITAL_OUT_1</p><p data-v-ac8caa8c>A variable with an output value (0 or 1) of the two digital output ports of the tool flange board (TFB).</p><h4 id="_6-18-sd-tfb-voltage-out" tabindex="-1" data-v-ac8caa8c>6.18 SD_TFB_VOLTAGE_OUT <a class="header-anchor" href="#_6-18-sd-tfb-voltage-out" aria-label="Permalink to &quot;6.18 SD_TFB_VOLTAGE_OUT&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>It is a variable indicating the voltage output information (0 or 12 or 24V) of the tool flange board (TFB).</p><h4 id="_6-19-sd-op-stat-collision-occur" tabindex="-1" data-v-ac8caa8c>6.19 SD_OP_STAT_COLLISION_OCCUR <a class="header-anchor" href="#_6-19-sd-op-stat-collision-occur" aria-label="Permalink to &quot;6.19 SD_OP_STAT_COLLISION_OCCUR&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>A variable indicating whether an external collision detected.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = Idle</li><li data-v-ac8caa8c>1 = External collision detected</li></ul><h4 id="_6-20-sd-op-stat-sos-flag" tabindex="-1" data-v-ac8caa8c>6.20 SD_OP_STAT_SOS_FLAG <a class="header-anchor" href="#_6-20-sd-op-stat-sos-flag" aria-label="Permalink to &quot;6.20 SD_OP_STAT_SOS_FLAG&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>A variable indicating if a control box power problem / robot joint controller / other problem has occurred.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = Idle</li></ul><h4 id="_6-21-sd-op-stat-self-collision" tabindex="-1" data-v-ac8caa8c>6.21 SD_OP_STAT_SELF_COLLISION <a class="header-anchor" href="#_6-21-sd-op-stat-self-collision" aria-label="Permalink to &quot;6.21 SD_OP_STAT_SELF_COLLISION&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>A variable indicating just before self-collision during robot motion.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = Idle</li><li data-v-ac8caa8c>1 = Entering self-collision range</li></ul><h4 id="_6-22-sd-op-stat-estop-occur" tabindex="-1" data-v-ac8caa8c>6.22 SD_OP_STAT_ESTOP_OCCUR <a class="header-anchor" href="#_6-22-sd-op-stat-estop-occur" aria-label="Permalink to &quot;6.22 SD_OP_STAT_ESTOP_OCCUR&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>This is a variable indicating whether the program/robot is in the paused state.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = Idle</li><li data-v-ac8caa8c>1 = Pause state</li></ul><h4 id="_6-23-sd-op-stat-ems-flag" tabindex="-1" data-v-ac8caa8c>6.23 SD_OP_STAT_EMS_FLAG <a class="header-anchor" href="#_6-23-sd-op-stat-ems-flag" aria-label="Permalink to &quot;6.23 SD_OP_STAT_EMS_FLAG&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>This variable tells the user whether or not a singularity (= there is no solution for the robot control algorithm) is present.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = Idle</li></ul><h4 id="_6-24-sd-digital-in-config" tabindex="-1" data-v-ac8caa8c>6.24 SD_DIGITAL_IN_CONFIG_# <a class="header-anchor" href="#_6-24-sd-digital-in-config" aria-label="Permalink to &quot;6.24 SD_DIGITAL_IN_CONFIG\\_\\#&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>SD_DIGITAL_IN_CONFIG_0<br data-v-ac8caa8c> SD_DIGITAL_IN_CONFIG_1</p><p data-v-ac8caa8c>Shows the information of the two protective stop terminals. (Din 16/17)</p><h4 id="_6-25-sd-inbox-trap-flag" tabindex="-1" data-v-ac8caa8c>6.25 SD_INBOX_TRAP_FLAG_# <a class="header-anchor" href="#_6-25-sd-inbox-trap-flag" aria-label="Permalink to &quot;6.25 SD_INBOX_TRAP_FLAG\\_\\#&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>SD_INBOX_TRAP_FLAG_0<br data-v-ac8caa8c> SD_INBOX_TRAP_FLAG_1</p><p data-v-ac8caa8c>This is a variable that checks whether a specific part of the robot has entered a specific area (Inbox).</p><h4 id="_6-26-sd-inbox-check-mode" tabindex="-1" data-v-ac8caa8c>6.26 SD_INBOX_CHECK_MODE_# <a class="header-anchor" href="#_6-26-sd-inbox-check-mode" aria-label="Permalink to &quot;6.26 SD_INBOX_CHECK_MODE\\_\\#&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>SD_INBOX_CHECK_MODE_0<br data-v-ac8caa8c> SD_INBOX_CHECK_MODE_1</p><p data-v-ac8caa8c>Inbox Check mode.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0: No checking</li><li data-v-ac8caa8c>1: Check Tool Flange Center (check whether the TFC is in the Inbox area)</li><li data-v-ac8caa8c>2: Check Tool Center Point (check whether the TCP is in the Inbox area)</li><li data-v-ac8caa8c>3: Check Tool Box (Check whether the virtual box set at the end of the robot arm has entered in Inbox area.)</li><li data-v-ac8caa8c>4: Check All (1,2,3)</li></ul><h4 id="_6-27-sd-sock-is-open" tabindex="-1" data-v-ac8caa8c>6.27 SD_SOCK_IS_OPEN_# <a class="header-anchor" href="#_6-27-sd-sock-is-open" aria-label="Permalink to &quot;6.27 SD_SOCK_IS_OPEN\\_\\#&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>SD_SOCK_IS_OPEN_0<br data-v-ac8caa8c> SD_SOCK_IS_OPEN_1<br data-v-ac8caa8c> SD_SOCK_IS_OPEN_2<br data-v-ac8caa8c> SD_SOCK_IS_OPEN_3<br data-v-ac8caa8c> SD_SOCK_IS_OPEN_4<br data-v-ac8caa8c></p><p data-v-ac8caa8c>This is a variable indicating whether the socket of the corresponding number was normally opened and whether it was normally connected to the server.<br data-v-ac8caa8c> 1 (true) if creation and connection were performed normally. <strong data-v-ac8caa8c>(# : 0 ~ 4)</strong></p><h4 id="_6-28-sd-sock-last-read" tabindex="-1" data-v-ac8caa8c>6.28 SD_SOCK_LAST_READ_# <a class="header-anchor" href="#_6-28-sd-sock-last-read" aria-label="Permalink to &quot;6.28 SD_SOCK_LAST_READ\\_\\#&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>SD_SOCK_LAST_READ_0<br data-v-ac8caa8c> SD_SOCK_LAST_READ_1<br data-v-ac8caa8c> SD_SOCK_LAST_READ_2<br data-v-ac8caa8c> SD_SOCK_LAST_READ_3<br data-v-ac8caa8c> SD_SOCK_LAST_READ_4<br data-v-ac8caa8c></p><p data-v-ac8caa8c>A variable indicating whether the read function was performed normally with the socket of the corresponding number.<br data-v-ac8caa8c> 1 (true) if the read was performed normally. <strong data-v-ac8caa8c>(# : 0 ~ 4)</strong></p><h4 id="_6-29-sd-hand-toktok" tabindex="-1" data-v-ac8caa8c>6.29 SD_HAND_TOKTOK <a class="header-anchor" href="#_6-29-sd-hand-toktok" aria-label="Permalink to &quot;6.29 SD_HAND_TOKTOK&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>This is a variable indicating whether or not an act of tapping (tok tok) from outside the robot has occurred.</p><h4 id="_6-30-sd-finish-at-event" tabindex="-1" data-v-ac8caa8c>6.30 SD_FINISH_AT_EVENT <a class="header-anchor" href="#_6-30-sd-finish-at-event" aria-label="Permalink to &quot;6.30 SD_FINISH_AT_EVENT&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Stores whether the motion has ended in a way that the robot&#39;s FinishAt (motion escape) condition.<br data-v-ac8caa8c></p><p data-v-ac8caa8c>If the motion is finished by reaching the motion target point, this variable is 0.<br data-v-ac8caa8c> If the FinishAt condition is satisfied and the operation is finished, this variable becomes 1.</p><h4 id="_6-31-sd-tcp-vel-ref" tabindex="-1" data-v-ac8caa8c>6.31 SD_TCP_VEL_REF <a class="header-anchor" href="#_6-31-sd-tcp-vel-ref" aria-label="Permalink to &quot;6.31 SD_TCP_VEL_REF&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>TCP reference velocity.</p><h4 id="_6-32-sd-motion-time" tabindex="-1" data-v-ac8caa8c>6.32 SD_MOTION_TIME <a class="header-anchor" href="#_6-32-sd-motion-time" aria-label="Permalink to &quot;6.32 SD_MOTION_TIME&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>It is a variable that stores the time of unit movement. When the next movement is executed, it starts from 0 again.</p><h4 id="_6-33-sd-arm-power" tabindex="-1" data-v-ac8caa8c>6.33 SD_ARM_POWER <a class="header-anchor" href="#_6-33-sd-arm-power" aria-label="Permalink to &quot;6.33 SD_ARM_POWER&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>A variable representing the power the robot is using.</p><h4 id="_6-34-sd-is-tpu-connect" tabindex="-1" data-v-ac8caa8c>6.34 SD_IS_TPU_CONNECT <a class="header-anchor" href="#_6-34-sd-is-tpu-connect" aria-label="Permalink to &quot;6.34 SD_IS_TPU_CONNECT&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>This is a variable that indicates whether the TPU (Teaching Pendant Unit, Tablet PC) is connected.</p><h4 id="_6-35-sd-is-run-in-make" tabindex="-1" data-v-ac8caa8c>6.35 SD_IS_RUN_IN_MAKE <a class="header-anchor" href="#_6-35-sd-is-run-in-make" aria-label="Permalink to &quot;6.35 SD_IS_RUN_IN_MAKE&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>1 is saved if the current program operation is executed in the Make page.</p><h4 id="_6-36-sd-is-run-in-play" tabindex="-1" data-v-ac8caa8c>6.36 SD_IS_RUN_IN_PLAY <a class="header-anchor" href="#_6-36-sd-is-run-in-play" aria-label="Permalink to &quot;6.36 SD_IS_RUN_IN_PLAY&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>1 is saved if the current program operation is executed in the Play page.</p><h4 id="_6-37-sd-is-intended-stop" tabindex="-1" data-v-ac8caa8c>6.37 SD_IS_INTENDED_STOP <a class="header-anchor" href="#_6-37-sd-is-intended-stop" aria-label="Permalink to &quot;6.37 SD_IS_INTENDED_STOP&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Indicates whether the program termination is an intentional termination or an emergency termination.</p><h4 id="_6-38-sd-move-index" tabindex="-1" data-v-ac8caa8c>6.38 SD_MOVE_INDEX <a class="header-anchor" href="#_6-38-sd-move-index" aria-label="Permalink to &quot;6.38 SD_MOVE_INDEX&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>In a continuous motion such as MovePB / ITPL, it tells which point the robot is passing through.</p><h3 id="_7-movement-functions" tabindex="-1" data-v-ac8caa8c>7. MOVEMENT FUNCTIONS <a class="header-anchor" href="#_7-movement-functions" aria-label="Permalink to &quot;7. MOVEMENT FUNCTIONS&quot;" data-v-ac8caa8c>​</a></h3><br data-v-ac8caa8c><h4 id="_7-1-move-finish-wait" tabindex="-1" data-v-ac8caa8c>7.1 move_finish_wait() <a class="header-anchor" href="#_7-1-move-finish-wait" aria-label="Permalink to &quot;7.1 move_finish_wait()&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>A function that waits for the currently executing movement to complete.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> None.</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Wait for the movement to complete until my_destination.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_destination = {100,200,300,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_l(my_destination, 20, 5, 0)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_finish_wait()</span></span></code></pre></div><h4 id="_7-2-move-l-p-v-v-v-1" tabindex="-1" data-v-ac8caa8c>7.2 move_l(P, v, v, v=1) <a class="header-anchor" href="#_7-2-move-l-p-v-v-v-1" aria-label="Permalink to &quot;7.2 move_l(P, v, v, v=1)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>A function that makes TCP to move in a straight line to the target point.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> P: Target TCP posture<br data-v-ac8caa8c> v: Speed (𝒎𝒎/𝒔)<br data-v-ac8caa8c> v: Acceleration (𝒎𝒎/𝒔𝟐)<br data-v-ac8caa8c> v: Wait flag (default: 1)</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = No Wait (Non-Block).</li><li data-v-ac8caa8c>1 = Wait for the movement to complete (Block).</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point1 = {100,200,300,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point2= {100,150,100,0,90,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_l(my_point1, 20, 5)    # MoveL method to move to my_point1.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_l(my_point2, 20, 5)    # MoveL method to move to my_point2.</span></span></code></pre></div><h4 id="_7-3-move-l-rel-p-v-v-v-v-1" tabindex="-1" data-v-ac8caa8c>7.3 move_l_rel(P, v, v, v, v=1) <a class="header-anchor" href="#_7-3-move-l-rel-p-v-v-v-v-1" aria-label="Permalink to &quot;7.3 move_l_rel(P, v, v, v, v=1)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>A function that makes TCP to move in a straight line to the target point.<br data-v-ac8caa8c> Enter the target point as a value relative to the current TCP value.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> P: Relative position &amp; orientation value.<br data-v-ac8caa8c> v: Speed (𝒎𝒎/𝒔)<br data-v-ac8caa8c> v: Acceleration (𝒎𝒎/𝒔𝟐)<br data-v-ac8caa8c> v: reference frame for the relative P value.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>0: Base (Global) coordinate.</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>1: Tool (Local) coordinate.</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>2: User coordinate 0</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>3: User coordinate 1</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>4: User coordinate 2</p><p data-v-ac8caa8c>v: Wait flag (default: 1)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>0 = No Wait (Non-Block).</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>1 = Wait for the movement to complete (Block).</p></li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># move TCP (0,100,-200) w.r.t. Base coordinate (speed/acceleration = 300 / 400)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_l_rel(pnt[0,100,-200,0,0,0], 300, 400, 0)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># move TCP 50 mm w.r.t. x axis of User coordinate 2 (speed/acceleration = 100 / 300)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_l_rel(pnt[50,0,0,0,0,0], 100, 300, 4)</span></span></code></pre></div><h4 id="_7-4-move-j-j-v-v-v-1" tabindex="-1" data-v-ac8caa8c>7.4 move_j(J, v, v, v=1) <a class="header-anchor" href="#_7-4-move-j-j-v-v-v-1" aria-label="Permalink to &quot;7.4 move_j(J, v, v, v=1)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Move the robot arm to the target joint angle.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> J: Target joint angles<br data-v-ac8caa8c> v: Speed (Unit: 𝒅𝒆𝒈/𝒔)<br data-v-ac8caa8c> v: Acceleration (Unit: 𝒅𝒆𝒈/𝒔𝟐)<br data-v-ac8caa8c> v: Wait flag (default: 1)</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = No Wait (Non-Block).</li><li data-v-ac8caa8c>1 = Wait for the movement to complete (Block).</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_j (jnt[0,0,90,0,90,0], 60, 80)   # move joint angles to (0,0,90,0,90,0) degree with speed/acceleration = 60/80.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>jnt my_joint_angle = {0,0,90,0,90,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_j (my_joint_angle, 60, 80)       # move joint angles to (0,0,90,0,90,0) degree with speed/acceleration = 60/80.</span></span></code></pre></div><h4 id="_7-5-move-jl-p-v-v-v-1" tabindex="-1" data-v-ac8caa8c>7.5 move_jl(P, v, v, v=1) <a class="header-anchor" href="#_7-5-move-jl-p-v-v-v-1" aria-label="Permalink to &quot;7.5 move_jl(P, v, v, v=1)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>(move joint with linear input)<br data-v-ac8caa8c> This function moves to the target point using the move_j method rather than a straight line.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> P: Target TCP posture<br data-v-ac8caa8c> v: Speed (Unit: 𝒅𝒆𝒈/𝒔)<br data-v-ac8caa8c> v: Acceleration (Unit: 𝒅𝒆𝒈/𝒔𝟐)<br data-v-ac8caa8c> v: Wait flag (default: 1)</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = No Wait (Non-Block).</li><li data-v-ac8caa8c>1 = Wait for the movement to complete (Block).</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point1 = {100,200,300,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point2 = {100,150,100,0,90,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_jl(my_point1, 20, 5)   # Move TCP to ‘my_point1’ via MoveJ method.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_jl(my_point2, 20, 5)   # Move TCP to ‘my_point2’ via MoveJ method.</span></span></code></pre></div><h4 id="_7-6-move-pb-clear" tabindex="-1" data-v-ac8caa8c>7.6 move_pb_clear() <a class="header-anchor" href="#_7-6-move-pb-clear" aria-label="Permalink to &quot;7.6 move_pb_clear()&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Initialize (Clear) the point list to be used in MovePB.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> None.</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_pb_clear()   # Initialize (Clear) the point list to be used in MovePB.</span></span></code></pre></div><h4 id="_7-7-move-pb-add-p-v-v-v" tabindex="-1" data-v-ac8caa8c>7.7 move_pb_add(P, v, v, v) <a class="header-anchor" href="#_7-7-move-pb-add-p-v-v-v" aria-label="Permalink to &quot;7.7 move_pb_add(P, v, v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>This function adds the points used in MovePB to the list.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> P: Target TCP posture<br data-v-ac8caa8c> v: Speed (Unit: 𝒎𝒎/𝒔)<br data-v-ac8caa8c> v: Blending option</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = Blend based on Ratio.</li><li data-v-ac8caa8c>1 = Blend based on Distance.</li></ul><p data-v-ac8caa8c>v: Blending value (0 ~ 1 / distance (mm))</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point1 = {100,200,0,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point2 = {150,0,50,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># add ‘my_point1’ to the MovePB list with speed=50mm + 50% blending option</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_pb_add(my_point1, 50, 0, 0.5)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># add ‘my_point2’ to the MovePB list with speed=100mm + 50mm blending option</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_pb_add(my_point2, 100, 1, 50)</span></span></code></pre></div><h4 id="_7-8-move-pb-run-v-v-v-1" tabindex="-1" data-v-ac8caa8c>7.8 move_pb_run(v, v, v=1) <a class="header-anchor" href="#_7-8-move-pb-run-v-v-v-1" aria-label="Permalink to &quot;7.8 move_pb_run(v, v, v=1)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>This function executes MovePB using the points added in move_pb_add.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Acceleration (Unit: 𝒎𝒎/𝒔𝟐 )<br data-v-ac8caa8c> v: Orientation option</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = Intended (Follows the rotation value taught by the user)</li><li data-v-ac8caa8c>1 = Constant (Keep the rotation value of the starting position)</li></ul><p data-v-ac8caa8c>v: Wait flag <strong data-v-ac8caa8c>(default: 1)</strong></p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = No Wait (Non-Block).</li><li data-v-ac8caa8c>1 = Wait for the movement to complete (Block).</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point1 = {100,200,0,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point2 = {150,0,50,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_pb_clear()                     # Clear the MovePB list.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_pb_add(my_point1, 50, 0, 0.5)  # add the desired point to the list (my_point1)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_pb_add(my_point2, 100, 1, 50)  # add the desired point to the list (my_point2)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_pb_run(200, 1)                 # Move to my_point2 using the previously set blending options.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>                                    # At this time, the rotation value maintains the same value as the starting position.</span></span></code></pre></div><h4 id="_7-9-move-itpl-clear" tabindex="-1" data-v-ac8caa8c>7.9 move_itpl_clear() <a class="header-anchor" href="#_7-9-move-itpl-clear" aria-label="Permalink to &quot;7.9 move_itpl_clear()&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Initialize (Clear) the point list to be used in MoveITPL.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> None.</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_itpl_clear()   # Initialize (Clear) the point list to be used in MoveITPL.</span></span></code></pre></div><h4 id="_7-10-move-itpl-add-p-v" tabindex="-1" data-v-ac8caa8c>7.10 move_itpl_add(P, v) <a class="header-anchor" href="#_7-10-move-itpl-add-p-v" aria-label="Permalink to &quot;7.10 move_itpl_add(P, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>This function adds the points used in MoveITPL to the list.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> P: Target TCP posture.<br data-v-ac8caa8c> v: Speed (Unit: 𝒎𝒎/𝒔)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point1 = {100,200,0,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point2 = {150,0,50,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># add ‘my_point1’ to the MoveITPL list with speed=50mm</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_itpl_add(my_point1, 50)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># add ‘my_point2’ to the MoveITPL list with speed=100mm</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_itpl_add(my_point2, 100)</span></span></code></pre></div><h4 id="_7-11-move-itpl-run-v-v-v-1" tabindex="-1" data-v-ac8caa8c>7.11 move_itpl_run(v, v, v=1) <a class="header-anchor" href="#_7-11-move-itpl-run-v-v-v-1" aria-label="Permalink to &quot;7.11 move_itpl_run(v, v, v=1)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>This function executes MoveITPL using the points added in move_itpl_add.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Acceleration<br data-v-ac8caa8c> v: Orientation/motion option</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = Intended (Follows the rotation value taught by the user)</li><li data-v-ac8caa8c>1 = Constant (Keep the rotation value of the starting position)</li><li data-v-ac8caa8c>2 = Reserved (N/A)</li><li data-v-ac8caa8c>3 = Smooth (Similar to Intended, but with a smooth rate of rotation change)</li><li data-v-ac8caa8c>4 = Reserved (N/A)</li><li data-v-ac8caa8c>5 = CA-Intended (CA mode Intended)</li><li data-v-ac8caa8c>6 = CA-Constant (CA mode Constant)</li><li data-v-ac8caa8c>7 = Reserved (N/A)</li><li data-v-ac8caa8c>8 = CA-Smooth (CA mode Smooth)<br data-v-ac8caa8c> CA: Combined Arc mode</li></ul><p data-v-ac8caa8c>v: Wait flag <strong data-v-ac8caa8c>(default: 1)</strong></p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = No Wait (Non-Block).</li><li data-v-ac8caa8c>1 = Wait for the movement to complete (Block).</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point1 = {100,200,0,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point2 = {150,0,50,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_itpl_clear()               # Clear the MoveITPL list</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_itpl_add(my_point1, 50)    # add ‘my_point1’ to the MoveITPL list with speed = 50mm/s</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_itpl_add(my_point2, 100)   # add ‘my_point2’ to the MoveITPL list with speed = 100mm/s</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_itpl_run(200, 1)           # Move to ‘my_point2’ with move_itpl type movement.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>                                # In this case, the rotation value taught by the user is used.</span></span></code></pre></div><h4 id="_7-12-move-lc-clear" tabindex="-1" data-v-ac8caa8c>7.12 move_lc_clear() <a class="header-anchor" href="#_7-12-move-lc-clear" aria-label="Permalink to &quot;7.12 move_lc_clear()&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Initialize (Clear) the point list to be used in MoveLC.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> None.</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_lc_clear()   # Initialize (Clear) the point list to be used in MoveLC.</span></span></code></pre></div><h4 id="_7-13-move-lc-add-p-v-v" tabindex="-1" data-v-ac8caa8c>7.13 move_lc_add(P, v, v) <a class="header-anchor" href="#_7-13-move-lc-add-p-v-v" aria-label="Permalink to &quot;7.13 move_lc_add(P, v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>This function adds the points used in MoveLC to the list.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> P: Target TCP posture.<br data-v-ac8caa8c> v: Speed (Unit: 𝒎𝒎/𝒔)<br data-v-ac8caa8c> v: Property (0 or 1)</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = Pass through linear motion</li><li data-v-ac8caa8c>1 = Pass through circular motion</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point1 = {100,200,0,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point2 = {150,0,50,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_lc_add(my_point1, 50, 1)   # add ‘my_point1’ to the MoveLC list with velocity 50mm/s.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_lc_add(my_point2, 100, 0)  # add ‘my_point2’ to the MoveLC list with velocity 100mm/s.</span></span></code></pre></div><h4 id="_7-14-move-lc-run-v-v-v-1" tabindex="-1" data-v-ac8caa8c>7.14 move_lc_run(v, v, v=1) <a class="header-anchor" href="#_7-14-move-lc-run-v-v-v-1" aria-label="Permalink to &quot;7.14 move_lc_run(v, v, v=1)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>This function executes MoveLC using the points added in move_lc_add.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Acceleration<br data-v-ac8caa8c> v: Orientation options</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = Intended (Follows the rotation value taught by the user)</li><li data-v-ac8caa8c>1 = Constant (Keep the rotation value of the starting position)</li><li data-v-ac8caa8c>2 = Reserved (N/A)</li><li data-v-ac8caa8c>3 = Smooth (Similar to Intended, but with a smooth rate of rotation change)</li><li data-v-ac8caa8c>4 = Reserved (N/A)</li></ul><p data-v-ac8caa8c>v: Wait flag <strong data-v-ac8caa8c>(default: 1)</strong></p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = No Wait (Non-Block).</li><li data-v-ac8caa8c>1 = Wait for the movement to complete (Block).</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point1 = {100,200,0,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point2 = {150,0,50,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_lc_clear()  # clear the MoveLC list</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_lc_add(my_point1, 50, 1)   # add ‘my_point1’ to the list</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_lc_add(my_point2, 100, 0)  # add ‘my_point2’ to the list</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_lc_run(200, 1)   # Use the linear &amp; circular motion to move up to my_point2.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>                      # In this case, the rotation value taught by the user is used for the rotation value.</span></span></code></pre></div><h4 id="_7-15-move-lb-clear" tabindex="-1" data-v-ac8caa8c>7.15 move_lb_clear() <a class="header-anchor" href="#_7-15-move-lb-clear" aria-label="Permalink to &quot;7.15 move_lb_clear()&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Initialize (Clear) the point list to be used in MoveLB.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> None.</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_lb_clear()   # Initialize (Clear) the point list to be used in MoveLB.</span></span></code></pre></div><h4 id="_7-16-move-lb-add-p-v" tabindex="-1" data-v-ac8caa8c>7.16 move_lb_add(P, v) <a class="header-anchor" href="#_7-16-move-lb-add-p-v" aria-label="Permalink to &quot;7.16 move_lb_add(P, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>This function adds the points used in MoveLB to the list.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> P: Target TCP posture.<br data-v-ac8caa8c> v: Blend distance (Unit (mm))<br data-v-ac8caa8c><strong data-v-ac8caa8c>※ Unlike MovePB, it does not support ratio blending.</strong></p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point1 = {100,200,0,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point2 = {150,0,50,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_lb_add(my_point1, 20)  # add ‘my_point1’ to the MoveLB list + blending distance = 20mm</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_lb_add(my_point2, 20)  # add ‘my_point2’ to the MoveLB list + blending distance = 20mm</span></span></code></pre></div><h4 id="_7-17-move-lb-run-v-v-v-v-1" tabindex="-1" data-v-ac8caa8c>7.17 move_lb_run(v, v, v, v=1) <a class="header-anchor" href="#_7-17-move-lb-run-v-v-v-v-1" aria-label="Permalink to &quot;7.17 move_lb_run(v, v, v, v=1)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>This function executes MoveLB using the points added in move_lb_add.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Speed (Unit: 𝒎𝒎/𝒔)<br data-v-ac8caa8c> v: Acceleration (Unit: 𝒎𝒎/𝒔𝟐)<br data-v-ac8caa8c> v: Orientation options</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = Intended (Follows the rotation value taught by the user)</li><li data-v-ac8caa8c>1 = Constant (Keep the rotation value of the starting position)</li></ul><p data-v-ac8caa8c>v: Wait flag <strong data-v-ac8caa8c>(default: 1)</strong></p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = No Wait (Non-Block).</li><li data-v-ac8caa8c>1 = Wait for the movement to complete (Block).</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point1 = {100,200,0,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point2 = {150,0,50,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_lb_clear()  # clear MoveLB list.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_lb_add(my_point1, 20)   # add ‘my_point1’ to the MoveLB list.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_lb_add(my_point2, 20)   # add ‘my_point2’ to the MoveLB list.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_lb_run(50, 20, 1)  # Move to ‘my_point2’ using the previously set distance 20mm blending option.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>                        # At this time, the rotation value maintains the same value as the starting position.</span></span></code></pre></div><h4 id="_7-18-move-c-points-p-p-v-v-v-v-1" tabindex="-1" data-v-ac8caa8c>7.18 move_c_points(P, P, v, v, v, v=1) <a class="header-anchor" href="#_7-18-move-c-points-p-p-v-v-v-v-1" aria-label="Permalink to &quot;7.18 move_c_points(P, P, v, v, v, v=1)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>This function performs a movement that draws an arc through via &amp; target points.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> P: via Point TCP posture<br data-v-ac8caa8c> P: target Point TCP posture<br data-v-ac8caa8c> v: Speed (Unit: 𝒎𝒎/𝒔)<br data-v-ac8caa8c> v: Acceleration (Unit: 𝒎𝒎/𝒔𝟐)<br data-v-ac8caa8c> v: Orientation options</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = Intended (Follows the rotation value taught by the user)</li><li data-v-ac8caa8c>1 = Constant (Keep the rotation value of the starting position)</li><li data-v-ac8caa8c>2 = Radial (Rotate the TCP according to the rotation of the circle)</li><li data-v-ac8caa8c>3 = Smooth (Similar to Intended, but with a smooth rate of rotation change)</li></ul><p data-v-ac8caa8c>v: Wait flag <strong data-v-ac8caa8c>(default: 1)</strong></p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = No Wait (Non-Block).</li><li data-v-ac8caa8c>1 = Wait for the movement to complete (Block).</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point1 = {100,100,300,0,90,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point2 = {200,200,200,0,90,45}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_c_points(my_point, my_point2, 50, 10, 2)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Using ‘my_point1’ as a via-waypoint, it moves in an arc to ‘my_point2’.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Based on the center point of the rotation, the orientation of the TCP is changed together.</span></span></code></pre></div><h4 id="_7-19-move-c-axis-p-v-v-v-v-v-v-v-v-1" tabindex="-1" data-v-ac8caa8c>7.19 move_c_axis(P, v, v, v, v, v, v, v, v=1) <a class="header-anchor" href="#_7-19-move-c-axis-p-v-v-v-v-v-v-v-v-1" aria-label="Permalink to &quot;7.19 move_c_axis(P, v, v, v, v, v, v, v, v=1)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>This function performs an arc movement using the rotation center and rotation axis information.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> P: Center of the rotation <strong data-v-ac8caa8c>(Unit: mm)</strong><br data-v-ac8caa8c> v: rotation axis’s x axis vector<br data-v-ac8caa8c> v: rotation axis’s y axis vector<br data-v-ac8caa8c> v: rotation axis’s z axis vector<br data-v-ac8caa8c> v: rotation angle <strong data-v-ac8caa8c>(Unit: deg)</strong><br data-v-ac8caa8c> v: Speed <strong data-v-ac8caa8c>(Unit: 𝒎𝒎/𝒔)</strong><br data-v-ac8caa8c> v: Acceleration <strong data-v-ac8caa8c>(Unit: 𝒎𝒎/𝒔𝟐)</strong><br data-v-ac8caa8c> v: Rotation options</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = Intended <strong data-v-ac8caa8c>(rotate the same way as the Constant below.)</strong></li><li data-v-ac8caa8c>1 = Constant (Keep the rotation value of the starting position)</li><li data-v-ac8caa8c>2 = Radial (Rotate the TCP according to the rotation of the circle)</li></ul><p data-v-ac8caa8c>v: Wait flag <strong data-v-ac8caa8c>(default: 1)</strong></p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = No Wait (Non-Block).</li><li data-v-ac8caa8c>1 = Wait for the movement to complete (Block).</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>point my_point = {200,200,200,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_c_axis(my_point, 1, 0, 0, 180, 50, 10, 2)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Rotate 180 degrees around the x-axis. Center of rotation is ‘my_point’.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Based on the center point of the rotation, the orientation of the TCP is changed together.</span></span></code></pre></div><h4 id="_7-20-move-jb-clear" tabindex="-1" data-v-ac8caa8c>7.20 move_jb_clear() <a class="header-anchor" href="#_7-20-move-jb-clear" aria-label="Permalink to &quot;7.20 move_jb_clear()&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Initialize (Clear) the point list to be used in MoveJB.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> None.</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_jb_clear()   # Initialize (Clear) the point list to be used in MoveJB.</span></span></code></pre></div><h4 id="_7-21-move-jb-add-j" tabindex="-1" data-v-ac8caa8c>7.21 move_jb_add(J) <a class="header-anchor" href="#_7-21-move-jb-add-j" aria-label="Permalink to &quot;7.21 move_jb_add(J)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>This function adds the joint-angles used in MoveJB to the list.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> J: Target joint angles</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>jnt my_joint1 = {0, 0,0,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>jnt my_joint2 = {90,30,15,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_jb_add(my_joint1)  # add ‘my_joint1’ to the MoveJB list.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_jb_add(my_joint2)  # add ‘my_joint2’ to the MoveJB list.</span></span></code></pre></div><h4 id="_7-22-move-jb-run-v-v-v-1" tabindex="-1" data-v-ac8caa8c>7.22 move_jb_run(v, v, v=1) <a class="header-anchor" href="#_7-22-move-jb-run-v-v-v-1" aria-label="Permalink to &quot;7.22 move_jb_run(v, v, v=1)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>This function executes MoveJB using the points added in move_jb_add.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Speed (𝒅𝒆𝒈/𝒔)<br data-v-ac8caa8c> v: Acceleration (𝒅𝒆𝒈/𝒔𝟐)<br data-v-ac8caa8c> v: Wait flag <strong data-v-ac8caa8c>(default: 1)</strong></p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = No Wait (Non-Block).</li><li data-v-ac8caa8c>1 = Wait for the movement to complete (Block).</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>jnt my_joint1 = {0, 0,0,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>jnt my_joint2 = {90,30,15,0,0,0}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_jb_clear()         # Clear the MoveJB list.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_jb_add(my_joint1)  # add ‘my_joint1’ to the MoveJB list.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_jb_add(my_joint2)  # add ‘my_joint2’ to the MoveJB list.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>move_jb_run(50, 20)     # Moves smoothly without stopping to the previously set joint angles.</span></span></code></pre></div><h3 id="_8-grippers-and-sensors" tabindex="-1" data-v-ac8caa8c>8. GRIPPERS AND SENSORS <a class="header-anchor" href="#_8-grippers-and-sensors" aria-label="Permalink to &quot;8. GRIPPERS AND SENSORS&quot;" data-v-ac8caa8c>​</a></h3><br data-v-ac8caa8c><h4 id="_8-1-gripper-rtq-hande-init-v" tabindex="-1" data-v-ac8caa8c>8.1 gripper_rtq_hande_init(v) <a class="header-anchor" href="#_8-1-gripper-rtq-hande-init-v" aria-label="Permalink to &quot;8.1 gripper_rtq_hande_init(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Robotiq - Hand-E gripper initialization.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box.</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_rtq_hande_init(1)  # When the gripper communication line is connected to the control box</span></span></code></pre></div><h4 id="_8-2-gripper-rtq-hande-reset-v" tabindex="-1" data-v-ac8caa8c>8.2 gripper_rtq_hande_reset(v) <a class="header-anchor" href="#_8-2-gripper-rtq-hande-reset-v" aria-label="Permalink to &quot;8.2 gripper_rtq_hande_reset(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Robotiq - Hand-E gripper reset.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box.</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_rtq_hande_reset(1)  # When the gripper communication line is connected to the control box</span></span></code></pre></div><h4 id="_8-3-gripper-rtq-hande-go-v-v-v-v" tabindex="-1" data-v-ac8caa8c>8.3 gripper_rtq_hande_go(v, v, v, v) <a class="header-anchor" href="#_8-3-gripper-rtq-hande-go-v-v-v-v" aria-label="Permalink to &quot;8.3 gripper_rtq_hande_go(v, v, v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Robotiq - Hand-E gripper movement.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box.</li></ul><p data-v-ac8caa8c>v: Target position % (Range: 0~100)<br data-v-ac8caa8c> v: Target Velocity % (Range: 0~100)<br data-v-ac8caa8c> v: Target Force % (Range: 0~100)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_rtq_hande_go(1, 100, 50, 100)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Move the gripper connected to the control box to position 100%. (with speed 50%, force 100%)</span></span></code></pre></div><h4 id="_8-4-gripper-rtq-2f85-init-v" tabindex="-1" data-v-ac8caa8c>8.4 gripper_rtq_2f85_init(v) <a class="header-anchor" href="#_8-4-gripper-rtq-2f85-init-v" aria-label="Permalink to &quot;8.4 gripper_rtq_2f85_init(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Robotiq – 2F85 gripper initialization.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box.</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_rtq_2f85_init(1)  # When the gripper communication line is connected to the control box</span></span></code></pre></div><h4 id="_8-5-gripper-rtq-2f85-reset-v" tabindex="-1" data-v-ac8caa8c>8.5 gripper_rtq_2f85_reset(v) <a class="header-anchor" href="#_8-5-gripper-rtq-2f85-reset-v" aria-label="Permalink to &quot;8.5 gripper_rtq_2f85_reset(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Robotiq – 2F85 gripper reset.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box.</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_rtq_2f85_reset(1)  # When the gripper communication line is connected to the control box</span></span></code></pre></div><h4 id="_8-6-gripper-rtq-2f85-go-v-v-v-v" tabindex="-1" data-v-ac8caa8c>8.6 gripper_rtq_2f85_go(v, v, v, v) <a class="header-anchor" href="#_8-6-gripper-rtq-2f85-go-v-v-v-v" aria-label="Permalink to &quot;8.6 gripper_rtq_2f85_go(v, v, v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Robotiq – 2F85 gripper movement.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box.</li></ul><p data-v-ac8caa8c>v: Target position % (Range: 0~100)<br data-v-ac8caa8c> v: Target Velocity % (Range: 0~100)<br data-v-ac8caa8c> v: Target Force % (Range: 0~100)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_rtq_2f85_go(1, 100, 50, 100)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Move the gripper connected to the control box to position 100%. (with speed 50%, force 100%)</span></span></code></pre></div><h4 id="_8-7-gripper-rtq-2f140-init-v" tabindex="-1" data-v-ac8caa8c>8.7 gripper_rtq_2f140_init(v) <a class="header-anchor" href="#_8-7-gripper-rtq-2f140-init-v" aria-label="Permalink to &quot;8.7 gripper_rtq_2f140_init(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Robotiq – 2F140 gripper initialization.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box.</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_rtq_2f140_init(1)   # When the gripper communication line is connected to the control box</span></span></code></pre></div><h4 id="_8-8-gripper-rtq-2f140-reset-v" tabindex="-1" data-v-ac8caa8c>8.8 gripper_rtq_2f140_reset(v) <a class="header-anchor" href="#_8-8-gripper-rtq-2f140-reset-v" aria-label="Permalink to &quot;8.8 gripper_rtq_2f140_reset(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Robotiq – 2F140 gripper reset.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box.</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_rtq_2f140_reset(1)   # When the gripper communication line is connected to the control box</span></span></code></pre></div><h4 id="_8-9-gripper-rtq-2f140-go-v-v-v-v" tabindex="-1" data-v-ac8caa8c>8.9 gripper_rtq_2f140_go(v, v, v, v) <a class="header-anchor" href="#_8-9-gripper-rtq-2f140-go-v-v-v-v" aria-label="Permalink to &quot;8.9 gripper_rtq_2f140_go(v, v, v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Robotiq – 2F140 gripper movement.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box.</li></ul><p data-v-ac8caa8c>v: Target position % (Range: 0~100)<br data-v-ac8caa8c> v: Target Velocity % (Range: 0~100)<br data-v-ac8caa8c> v: Target Force % (Range: 0~100)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_rtq_2f140_go(1, 100, 50, 100)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Move the gripper connected to the control box to position 100%. (with speed 50%, force 100%)</span></span></code></pre></div><h4 id="_8-10-gripper-rtq-epick-reset-v" tabindex="-1" data-v-ac8caa8c>8.10 gripper_rtq_epick_reset(v) <a class="header-anchor" href="#_8-10-gripper-rtq-epick-reset-v" aria-label="Permalink to &quot;8.10 gripper_rtq_epick_reset(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Robotiq – E-pick gripper reset.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box.</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_rtq_epick_reset(1)  # When the gripper communication line is connected to the control box</span></span></code></pre></div><h4 id="_8-11-gripper-rtq-epick-suction-v" tabindex="-1" data-v-ac8caa8c>8.11 gripper_rtq_epick_suction(v) <a class="header-anchor" href="#_8-11-gripper-rtq-epick-suction-v" aria-label="Permalink to &quot;8.11 gripper_rtq_epick_suction(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Robotiq – E-pick gripper suction.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box.</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_rtq_epick_suction(1)  # When the gripper communication line is connected to the control box</span></span></code></pre></div><h4 id="_8-12-gripper-rtq-epick-release-v" tabindex="-1" data-v-ac8caa8c>8.12 gripper_rtq_epick_release(v) <a class="header-anchor" href="#_8-12-gripper-rtq-epick-release-v" aria-label="Permalink to &quot;8.12 gripper_rtq_epick_release(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Robotiq – E-pick gripper release.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box.</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_rtq_epick_release(1)  # When the gripper communication line is connected to the control box</span></span></code></pre></div><h4 id="_8-13-gripper-rtq-epick-hold-v" tabindex="-1" data-v-ac8caa8c>8.13 gripper_rtq_epick_hold(v) <a class="header-anchor" href="#_8-13-gripper-rtq-epick-hold-v" aria-label="Permalink to &quot;8.13 gripper_rtq_epick_hold(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Robotiq – E-pick gripper hold.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box.</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_rtq_epick_hold(1)  # When the gripper communication line is connected to the control box</span></span></code></pre></div><h4 id="_8-14-gripper-rts-rhp12rn-init-v" tabindex="-1" data-v-ac8caa8c>8.14 gripper_rts_rhp12rn_init(v) <a class="header-anchor" href="#_8-14-gripper-rts-rhp12rn-init-v" aria-label="Permalink to &quot;8.14 gripper_rts_rhp12rn_init(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Robotis – RHP12RN gripper initialization.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box.</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_rts_rhp12rn_init(1)  # When the gripper communication line is connected to the control box</span></span></code></pre></div><h4 id="_8-15-gripper-rts-rhp12rn-go-v-v" tabindex="-1" data-v-ac8caa8c>8.15 gripper_rts_rhp12rn_go(v, v) <a class="header-anchor" href="#_8-15-gripper-rts-rhp12rn-go-v-v" aria-label="Permalink to &quot;8.15 gripper_rts_rhp12rn_go(v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Robotis – RHP12RN gripper movement.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box.</li></ul><p data-v-ac8caa8c>v: Target position % (Range: 0~100)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_rts_rhp12rn_go(1, 100)  # Move the gripper connected to the control box to 100% position.</span></span></code></pre></div><h4 id="_8-16-gripper-jrt-jegb485-init-v" tabindex="-1" data-v-ac8caa8c>8.16 gripper_jrt_jegb485_init(v) <a class="header-anchor" href="#_8-16-gripper-jrt-jegb485-init-v" aria-label="Permalink to &quot;8.16 gripper_jrt_jegb485_init(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>JRT – JEGB485 gripper initialization.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box.</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_jrt_jegb485_init(1)  # When the gripper communication line is connected to the control box</span></span></code></pre></div><h4 id="_8-17-gripper-jrt-jegb485-go-v-v" tabindex="-1" data-v-ac8caa8c>8.17 gripper_jrt_jegb485_go(v, v) <a class="header-anchor" href="#_8-17-gripper-jrt-jegb485-go-v-v" aria-label="Permalink to &quot;8.17 gripper_jrt_jegb485_go(v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>JRT – JEGB485 gripper movement.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box.</li></ul><p data-v-ac8caa8c>v: Target position % (Range: 0~100)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_jrt_jegb485_go(1, 100)  # Move the gripper connected to the control box to 100% position.</span></span></code></pre></div><h4 id="_8-18-gripper-jrt-jegb485-go-v-v-v-v" tabindex="-1" data-v-ac8caa8c>8.18 gripper_jrt_jegb485_go(v, v, v, v) <a class="header-anchor" href="#_8-18-gripper-jrt-jegb485-go-v-v-v-v" aria-label="Permalink to &quot;8.18 gripper_jrt_jegb485_go(v, v, v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>JRT – JEGB485 gripper movement with advanced setting.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box.</li></ul><p data-v-ac8caa8c>v: Target position % (Range: 0~100)<br data-v-ac8caa8c> v: Target Velocity % (Range: 0~100)<br data-v-ac8caa8c> v: Target acceleration % (Range: 0~100)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_jrt_jegb485_go(1, 100, 50, 50)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Move the gripper connected to the control box to 100% position. (with speed &amp; acceleration 50%)</span></span></code></pre></div><h4 id="_8-19-gripper-jrt-jegb485-set-v-v-v-v" tabindex="-1" data-v-ac8caa8c>8.19 gripper_jrt_jegb485_set(v, v, v, v) <a class="header-anchor" href="#_8-19-gripper-jrt-jegb485-set-v-v-v-v" aria-label="Permalink to &quot;8.19 gripper_jrt_jegb485_set(v, v, v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>JRT – JEGB485 gripper setting.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box.</li></ul><p data-v-ac8caa8c>v: Target Velocity % (Range: 0~100)<br data-v-ac8caa8c> v: Target acceleration % (Range: 0~100)<br data-v-ac8caa8c> v: Target Force % (Range: 0~100)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_jrt_jegb485_set(1, 50, 30, 20)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Set the motion properties speed/acceleration/force of the gripper connected to the control box to 50, 30, and 20%, respectively</span></span></code></pre></div><h4 id="_8-20-gripper-jrt-jegb4140-init-v" tabindex="-1" data-v-ac8caa8c>8.20 gripper_jrt_jegb4140_init(v) <a class="header-anchor" href="#_8-20-gripper-jrt-jegb4140-init-v" aria-label="Permalink to &quot;8.20 gripper_jrt_jegb4140_init(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>JRT – JEGB4140 gripper initialization.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box.</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_jrt_jegb4140_init(1)  # When the gripper communication line is connected to the control box</span></span></code></pre></div><h4 id="_8-21-gripper-jrt-jegb4140-go-v-v" tabindex="-1" data-v-ac8caa8c>8.21 gripper_jrt_jegb4140_go(v, v) <a class="header-anchor" href="#_8-21-gripper-jrt-jegb4140-go-v-v" aria-label="Permalink to &quot;8.21 gripper_jrt_jegb4140_go(v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>JRT – JEGB4140 gripper movement.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box.</li></ul><p data-v-ac8caa8c>v: Target position % (Range: 0~100)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_jrt_jegb4140_go(1, 100)  # Move the gripper connected to the control box to 100% position.</span></span></code></pre></div><h4 id="_8-22-gripper-jrt-jegb4140-go-v-v-v-v" tabindex="-1" data-v-ac8caa8c>8.22 gripper_jrt_jegb4140_go(v, v, v, v) <a class="header-anchor" href="#_8-22-gripper-jrt-jegb4140-go-v-v-v-v" aria-label="Permalink to &quot;8.22 gripper_jrt_jegb4140_go(v, v, v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>JRT – JEGB4140 gripper movement with advanced setting.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box.</li></ul><p data-v-ac8caa8c>v: Target position % (Range: 0~100)<br data-v-ac8caa8c> v: Target Velocity % (Range: 0~100)<br data-v-ac8caa8c> v: Target acceleration % (Range: 0~100)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_jrt_jegb4140_go(1, 100, 50, 50)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Move the gripper connected to the control box to 100% position. (with speed &amp; acceleration 50%)</span></span></code></pre></div><h4 id="_8-23-gripper-jrt-jegb4140-set-v-v-v-v" tabindex="-1" data-v-ac8caa8c>8.23 gripper_jrt_jegb4140_set(v, v, v, v) <a class="header-anchor" href="#_8-23-gripper-jrt-jegb4140-set-v-v-v-v" aria-label="Permalink to &quot;8.23 gripper_jrt_jegb4140_set(v, v, v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>JRT – JEGB4140 gripper setting.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box.</li></ul><p data-v-ac8caa8c>v: Target Velocity % (Range: 0~100)<br data-v-ac8caa8c> v: Target acceleration % (Range: 0~100)<br data-v-ac8caa8c> v: Target Force % (Range: 0~100)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_jrt_jegb4140_set(1, 50, 30, 20)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Set the motion properties speed/acceleration/force of the gripper connected to the control box to 50, 30, and 20%, respectively</span></span></code></pre></div><h4 id="_8-24-gripper-dh-ag95-init-v" tabindex="-1" data-v-ac8caa8c>8.24 gripper_dh_ag95_init(v) <a class="header-anchor" href="#_8-24-gripper-dh-ag95-init-v" aria-label="Permalink to &quot;8.24 gripper_dh_ag95_init(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>DH Robotics – AG95 gripper initialization.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box.</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_dh_ag95_init(1)  # When the gripper communication line is connected to the control box</span></span></code></pre></div><h4 id="_8-25-gripper-dh-ag95-gripforce-v-v" tabindex="-1" data-v-ac8caa8c>8.25 gripper_dh_ag95_gripforce(v, v) <a class="header-anchor" href="#_8-25-gripper-dh-ag95-gripforce-v-v" aria-label="Permalink to &quot;8.25 gripper_dh_ag95_gripforce(v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>DH Robotics – AG95 gripper grip-force setting.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box.</li></ul><p data-v-ac8caa8c>v: Gripping force % (20 ~ 100 %)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_dh_ag95_gripforce(1, 30)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Set the gripping force limit of the gripper connected to the control box to 30%.</span></span></code></pre></div><h4 id="_8-26-gripper-dh-ag95-openforce-v-v" tabindex="-1" data-v-ac8caa8c>8.26 gripper_dh_ag95_openforce(v, v) <a class="header-anchor" href="#_8-26-gripper-dh-ag95-openforce-v-v" aria-label="Permalink to &quot;8.26 gripper_dh_ag95_openforce(v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>DH Robotics – AG95 gripper open-force setting.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box. or USB</li></ul><p data-v-ac8caa8c>v: Opening force % (20 ~ 100 %)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_dh_ag95_openforce(1, 70)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Set the opening force limit of the gripper connected to the control box to 70%.</span></span></code></pre></div><h4 id="_8-27-gripper-dh-ag95-go-v-v" tabindex="-1" data-v-ac8caa8c>8.27 gripper_dh_ag95_go(v, v) <a class="header-anchor" href="#_8-27-gripper-dh-ag95-go-v-v" aria-label="Permalink to &quot;8.27 gripper_dh_ag95_go(v, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>DH Robotics – AG95 gripper movement.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Connection port for the Gripper/Sensor.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = RS485 of the Tool Flange board.</li><li data-v-ac8caa8c>1 = RS485 of the Control Box. or USB</li></ul><p data-v-ac8caa8c>v: Target position % (0 ~ 100 %)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_dh_ag95_go(1, 50)   # Move the gripper connected to the control box to the 50% position.</span></span></code></pre></div><h4 id="_8-28-gripper-setech-cmd-v" tabindex="-1" data-v-ac8caa8c>8.28 gripper_setech_cmd(v) <a class="header-anchor" href="#_8-28-gripper-setech-cmd-v" aria-label="Permalink to &quot;8.28 gripper_setech_cmd(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Setech –NutRunner</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Command number</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0 = Stop</li><li data-v-ac8caa8c>1 = Reset</li><li data-v-ac8caa8c>2 = Quick Start</li><li data-v-ac8caa8c>3 = First stage</li><li data-v-ac8caa8c>4 = Second stage</li><li data-v-ac8caa8c>5 = Reverse</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>gripper_setech_cmd(#)</span></span></code></pre></div><h3 id="_9-communication-functions" tabindex="-1" data-v-ac8caa8c>9. COMMUNICATION FUNCTIONS <a class="header-anchor" href="#_9-communication-functions" aria-label="Permalink to &quot;9. COMMUNICATION FUNCTIONS&quot;" data-v-ac8caa8c>​</a></h3><br data-v-ac8caa8c><h4 id="_9-1-mc-comm-set-bit-v-s-v-v-1" tabindex="-1" data-v-ac8caa8c>9.1 mc_comm_set_bit(v, S, v, v=1) <a class="header-anchor" href="#_9-1-mc-comm-set-bit-v-s-v-v-1" aria-label="Permalink to &quot;9.1 mc_comm_set_bit(v, S, v, v=1)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>It sends the desired bit data (1 bit) to the desired address value of the PLC equipment. (via MC Protocol provided by Mitsubishi)</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Index of Socket-Handler. (0 ~ 4)<br data-v-ac8caa8c> S: address of the PLC (string type)</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>address value is in the form of D...., X...., etc.<br data-v-ac8caa8c></li></ul><p data-v-ac8caa8c>v: Desired bit data (0 or 1)<br data-v-ac8caa8c> v: Handshake signal Timeout <strong data-v-ac8caa8c>(Unit: second) (default: 1)</strong></p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v: Whether or not a valid (Handshake) signal is received from the PLC</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0: Receive Fail</li><li data-v-ac8caa8c>1: Receive Success</li></ul></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>str target_address = “D2000”</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var target_write_value = 1</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var is_tx_success = mc_comm_set_bit(0, target_address, target_write_value)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Using socket 0, send value 1 to PLC address D2000.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Same meaning can be written as below.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var is_tx_success = mc_comm_set_bit(0, “D2000”, 1)</span></span></code></pre></div><h4 id="_9-2-mc-comm-set-word-v-s-v-v-1" tabindex="-1" data-v-ac8caa8c>9.2 mc_comm_set_word(v, S, v, v=1) <a class="header-anchor" href="#_9-2-mc-comm-set-word-v-s-v-v-1" aria-label="Permalink to &quot;9.2 mc_comm_set_word(v, S, v, v=1)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>It sends the desired word data (16 bits) to the desired address value of the PLC equipment. (via MC Protocol provided by Mitsubishi)</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Index of Socket-Handler. (0 ~ 4)<br data-v-ac8caa8c> S: address of the PLC (string type)</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>address value is in the form of D...., X...., etc.<br data-v-ac8caa8c></li></ul><p data-v-ac8caa8c>v: Desired word data<br data-v-ac8caa8c> v: Handshake signal Timeout <strong data-v-ac8caa8c>(Unit: second) (default: 1)</strong></p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v: Whether or not a valid (Handshake) signal is received from the PLC</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0: Receive Fail</li><li data-v-ac8caa8c>1: Receive Success</li></ul></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>str target_address = “D2000”</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var target_write_value = 150</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var is_tx_success = mc_comm_set_word(0, target_address, target_write_value)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Using socket 0, send value 150 to PLC address D2000.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Same meaning can be written as below.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var is_tx_success = mc_comm_set_word(0, “D2000”, 150)</span></span></code></pre></div><h4 id="_9-3-mc-comm-req-bit-v-s-v-1" tabindex="-1" data-v-ac8caa8c>9.3 mc_comm_req_bit(v, S, v=1) <a class="header-anchor" href="#_9-3-mc-comm-req-bit-v-s-v-1" aria-label="Permalink to &quot;9.3 mc_comm_req_bit(v, S, v=1)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>It reads the desired bit data (1 bit) from the desired address value of the PLC equipment. (via MC Protocol provided by Mitsubishi)</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Index of Socket-Handler. (0 ~ 4)<br data-v-ac8caa8c> S: address of the PLC (string type)</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>address value is in the form of D...., X...., etc.<br data-v-ac8caa8c></li></ul><p data-v-ac8caa8c>v: Handshake signal Timeout <strong data-v-ac8caa8c>(Unit: second) (default: 1)</strong></p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v: Bit data value received from PLC.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>-1: Receive Fail</li><li data-v-ac8caa8c>0 or 1: Received bit value</li></ul></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>str target_address = “D2000”</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var rx_data = mc_comm_req_bit(0, target_address)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Using socket 0, read bit value from the PLC address D2000.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Same meaning can be written as below.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var rx_data = mc_comm_req_bit(0, “D2000”)</span></span></code></pre></div><h4 id="_9-4-mc-comm-req-word-v-s-v-1" tabindex="-1" data-v-ac8caa8c>9.4 mc_comm_req_word(v, S, v=1) <a class="header-anchor" href="#_9-4-mc-comm-req-word-v-s-v-1" aria-label="Permalink to &quot;9.4 mc_comm_req_word(v, S, v=1)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>It reads the desired word data (16 bits) from the desired address value of the PLC equipment. (via MC Protocol provided by Mitsubishi)</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Index of Socket-Handler. (0~4)<br data-v-ac8caa8c> S: address of the PLC (string type)</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>address value is in the form of D...., X...., etc.<br data-v-ac8caa8c></li></ul><p data-v-ac8caa8c>v: Handshake signal Timeout <strong data-v-ac8caa8c>(Unit: second) (default: 1)</strong></p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v: Word data value received from PLC.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>-1: Receive Fail</li></ul></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>str target_address = “D2000”</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var rx_data = mc_comm_req_word(0, target_address)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Using socket 0, read word value from the PLC address D2000.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Same meaning can be written as below.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var rx_data = mc_comm_req_word(0, “D2000”)</span></span></code></pre></div><h4 id="_9-5-socket-connect-v-s-v" tabindex="-1" data-v-ac8caa8c>9.5 socket_connect(v, S, v) <a class="header-anchor" href="#_9-5-socket-connect-v-s-v" aria-label="Permalink to &quot;9.5 socket_connect(v, S, v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Opens a socket port for TCP/IP communication and connects to the server.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Index of Socket-Handler. (0 ~ 4)<br data-v-ac8caa8c> S: IP address of the target server (string type)</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>i.e. ”192.168.0.10”</li></ul></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>socket_connect(0, “192.168.0.10”, 5678)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Using socket 0, connect to port 5678 of the server address “192.168.0.10”</span></span></code></pre></div><h4 id="_9-6-socket-disconnect-v" tabindex="-1" data-v-ac8caa8c>9.6 socket_disconnect(v) <a class="header-anchor" href="#_9-6-socket-disconnect-v" aria-label="Permalink to &quot;9.6 socket_disconnect(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Closes the socket port for TCP/IP communication and disconnects.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Index of Socket-Handler. (0 ~ 4)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>socket_disconnect(0)    # Disconnect opened communication on socket 0 and exit.</span></span></code></pre></div><h4 id="_9-7-socket-send-str-v-s" tabindex="-1" data-v-ac8caa8c>9.7 socket_send_str(v, S) <a class="header-anchor" href="#_9-7-socket-send-str-v-s" aria-label="Permalink to &quot;9.7 socket_send_str(v, S)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Transmits a string to the server through TCP/IP communication.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Index of Socket-Handler. (0 ~ 4)<br data-v-ac8caa8c> S: Target string for the transmission.</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> None.</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>socket_send_str(0, “hello world”)   # Send “hello world” to the server where socket 0 is connected.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_var = 1234</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>socket_send_str(0, to_str(my_var))  # Transmit the variable value as a string to the server connected to socket 0</span></span></code></pre></div><h4 id="_9-8-socket-read-str-v" tabindex="-1" data-v-ac8caa8c>9.8 socket_read_str(v) <a class="header-anchor" href="#_9-8-socket-read-str-v" aria-label="Permalink to &quot;9.8 socket_read_str(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>Returns the string received from the server through TCP/IP communication.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Index of Socket-Handler. (0 ~ 4)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> S: Received string from the server</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>str receive_str = socket_read_str(0)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>if (SD_SOCKET_LAST_READ_0){</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>    debug “receive_str”</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Receives a string from the server connected to socket 0, and if there is a received string, it is displayed in the alarm window.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># When the server sends “rainbow”, “rainbow” is stored in the receivce_str string variable.</span></span></code></pre></div><h4 id="_9-9-socket-read-var-v" tabindex="-1" data-v-ac8caa8c>9.9 socket_read_var(v) <a class="header-anchor" href="#_9-9-socket-read-var-v" aria-label="Permalink to &quot;9.9 socket_read_var(v)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>If the string received from the server through TCP/IP communication is in the form of a number, it is returned as a number.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Index of Socket-Handler. (0 ~ 4)</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v: Received number from the server</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var receive_var = socket_read_var(0)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>if (SD_SOCKET_LAST_READ_0){</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>    debug “receive_var”</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Receives a string from the server connected to socket 0, and converts the received string into a numeric variable. And if there is a reception, it is displayed in the alarm window.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># When the server sends “123.456”, 123.456 is stored in the receivce_var.</span></span></code></pre></div><h4 id="_9-10-hmi-set-one-word-v-v-v-v-1" tabindex="-1" data-v-ac8caa8c>9.10 hmi_set_one_word (v, v, v, v=1) <a class="header-anchor" href="#_9-10-hmi-set-one-word-v-v-v-v-1" aria-label="Permalink to &quot;9.10 hmi_set_one_word (v, v, v, v=1)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>It sends the desired word data (16 bits) to the desired address value of the HMI equipment. (via Memory-Link by Proface/TOP)</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Index of Socket-Handler. (0 ~ 4)<br data-v-ac8caa8c> v: HMI address value (0 ~ 9999)<br data-v-ac8caa8c> v: desired value for transmission (variable)<br data-v-ac8caa8c> v: Handshake signal Timeout <strong data-v-ac8caa8c>(Unit: second) (default: 1)</strong></p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v: Whether or not a valid (Handshake) signal is received from the HMI.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0: Receive Fail</li><li data-v-ac8caa8c>1: Receive Success</li></ul></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var target_address = 6000</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var target_write_value = 150</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var is_tx_success = hmi_set_one_word(0, target_address, target_write_value)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Using socket 0, send the value 150 to HMI address 6000.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Same meaning can be written as below.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var is_tx_success = hmi_set_one_word(0, 6000, 150)</span></span></code></pre></div><h4 id="_9-11-hmi-set-multi-word-v-v-v-v-1-a" tabindex="-1" data-v-ac8caa8c>9.11 hmi_set_multi_word (v, v, v, v=1, A) <a class="header-anchor" href="#_9-11-hmi-set-multi-word-v-v-v-v-1-a" aria-label="Permalink to &quot;9.11 hmi_set_multi_word (v, v, v, v=1, A)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>It sends the desired word data-s (16 bits x desired length) to the desired address area of the HMI equipment. (via Memory-Link by Proface/TOP)</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Index of Socket-Handler. (0 ~ 4)<br data-v-ac8caa8c> v: starting HMI address value (0 ~ 9999) 시작 값<br data-v-ac8caa8c> v: Number of data to send to HMI device (Max 20)<br data-v-ac8caa8c> v: Handshake signal Timeout <strong data-v-ac8caa8c>(Unit: second) (default: 1)</strong> A: Array name to send</p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v: Whether or not a valid (Handshake) signal is received from the HMI.</p><ul data-v-ac8caa8c><li data-v-ac8caa8c>0: Receive Fail</li><li data-v-ac8caa8c>1: Receive Success</li></ul></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>arr my_arr = {150, 160, 200, 210}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var is_tx_success = hmi_set_multi_word(0, 6000, 4, my_arr)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Using socket 0, send the 4 values (150, 160, 200, 210) stored in the array to the 4 address values (6000 ~ 6003) of the HMI.</span></span></code></pre></div><h4 id="_9-12-hmi-req-one-word-v-v-v-1" tabindex="-1" data-v-ac8caa8c>9.12 hmi_req_one_word (v, v, v=1) <a class="header-anchor" href="#_9-12-hmi-req-one-word-v-v-v-1" aria-label="Permalink to &quot;9.12 hmi_req_one_word (v, v, v=1)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>It reads the desired word data (16 bits) from the desired address value of the HMI equipment. (via Memory-Link provided by Proface/TOP)</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Index of Socket-Handler. (0 ~ 4)<br data-v-ac8caa8c> v: HMI address value (0 ~ 9999)<br data-v-ac8caa8c> v: Handshake signal Timeout <strong data-v-ac8caa8c>(Unit: second) (default: 1)</strong></p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> v: Value stored in the corresponding address value of the HMI</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_num</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>my_num = hmi_req_one_word(0, 7000)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Using socket 0, read the value of HMI address 7000 and store it in the variable my_num.</span></span></code></pre></div><h4 id="_9-13-hmi-req-multi-word-v-v-v-v-1" tabindex="-1" data-v-ac8caa8c>9.13 hmi_req_multi_word (v, v, v, v=1) <a class="header-anchor" href="#_9-13-hmi-req-multi-word-v-v-v-v-1" aria-label="Permalink to &quot;9.13 hmi_req_multi_word (v, v, v, v=1)&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>It reads the desired word data-s (16 bits x desired length) from the desired address area of the HMI equipment. (via Memory-Link provided by Proface/TOP)</p><ul data-v-ac8caa8c><li data-v-ac8caa8c><p data-v-ac8caa8c>Input :<br data-v-ac8caa8c> v: Index of Socket-Handler. (0 ~ 4)<br data-v-ac8caa8c> v: starting HMI address value (0 ~ 9999)<br data-v-ac8caa8c> v: Number of data to read from HMI device (Max 20)<br data-v-ac8caa8c> v: Handshake signal Timeout <strong data-v-ac8caa8c>(Unit: second) (default: 1)</strong></p></li><li data-v-ac8caa8c><p data-v-ac8caa8c>Return :<br data-v-ac8caa8c> A: Handshake signal Timeout (array)</p></li></ul><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>arr my_array</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>my_array = hmi_req_multi_word(0, 7000, 10)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Using socket 0, read 10 values (address values 7000~7009) from HMI and store them in the array ‘my_array’.</span></span></code></pre></div><h3 id="_10-vector" tabindex="-1" data-v-ac8caa8c>10. VECTOR <a class="header-anchor" href="#_10-vector" aria-label="Permalink to &quot;10. VECTOR&quot;" data-v-ac8caa8c>​</a></h3><p data-v-ac8caa8c>A vector refers to a dynamically allocated variable type. An array of unspecified length.<br data-v-ac8caa8c></p><p data-v-ac8caa8c>Often, in languages like C++, they are declared in the form vector&lt;float&gt; or vector&lt;string&gt;.<br data-v-ac8caa8c> Rainbow Robotics&#39; script system supports both numeric vectors and string vectors, each corresponding to the C++ standard, vector&lt;float&gt; and vector&lt;string&gt;.</p><h4 id="_10-1-number-vector" tabindex="-1" data-v-ac8caa8c>10.1 Number Vector <a class="header-anchor" href="#_10-1-number-vector" aria-label="Permalink to &quot;10.1 Number Vector&quot;" data-v-ac8caa8c>​</a></h4><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># The declaration uses the declarator vec.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>vec hello_world</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Initialization is possible at the same time as declaration.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>vec hello_world = {10, 20, 30}</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># The length of the vector can be obtained with the vec_length (or vec_leng) function.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># In this case, the input argument of the function is the name of the vector.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var num = vec_length( hello_world)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># To add an argument to a vector, use the vec_push (or vec_push_back, or vec_add) function.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># In this case, the input argument of the function is the name of vector and the number to be added.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>vec_push( hello_world, 40)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>vec_push( hello_world, 50)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Vector can be cleared through the vec_clear (or vec_clr) function.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># In this case, the input argument of the function is the name of the vector.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>vec_clear(hello_world)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c></span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># If you want to refer to the value stored in the vector, use the vec_at function.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># In this case, the input parameters of the function are the name of the vector and the index to be referenced.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c># Index references are also possible through the [] operator.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var value = vec_at(hello_world, 2)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var value = hello_world[2]</span></span></code></pre></div><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>vec mung = {10, 20}             # declare vector. Name = mung, initial values are 10 and 20</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_num = vec_length(mung)   # my_num = 2 (length of the vector)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>vec_push( mung, 30)             # Add the number 30 to the end of the mung vector</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>vec_push( mung, 40)             # Add the number 40 to the end of the mung vector</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_num = vec_length(mung)   # my_num = 4 (length of the vector)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var a = vec_at(mung, 1)         # a = 20 (value saved in the index 1 of the vector mung)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var b = mung[3]                 # b = 40 (value saved in the index 3 of the vector mung)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>vec_clear(mung)                 # clear the vector mung</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_num = vec_length(mung)   # my_num = 0 (length of the vector)</span></span></code></pre></div><h4 id="_10-2-string-vector" tabindex="-1" data-v-ac8caa8c>10.2 String Vector <a class="header-anchor" href="#_10-2-string-vector" aria-label="Permalink to &quot;10.2 String Vector&quot;" data-v-ac8caa8c>​</a></h4><p data-v-ac8caa8c>For string vectors, the usage of functions is the same as for numeric vectors.<br data-v-ac8caa8c></p><p data-v-ac8caa8c>However, due to system memory limitations, only predefined names can be used for string vectors.<br data-v-ac8caa8c> There are 10 string vectors defined in the system as shown below. Users can use the string vector with the name immediately below without having to declare it.<br data-v-ac8caa8c></p><p data-v-ac8caa8c>Predefined string vectors : <strong data-v-ac8caa8c>str_vec_0, str_vec_1, … , str_vec_9</strong><br data-v-ac8caa8c></p><p data-v-ac8caa8c>The functions used for vectors are the same as for numeric vectors introduced in the previous chapter.</p><p data-v-ac8caa8c>Example :</p><div class="language- vp-adaptive-theme" data-v-ac8caa8c><button title="Copy Code" class="copy" data-v-ac8caa8c></button><span class="lang" data-v-ac8caa8c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-ac8caa8c><code data-v-ac8caa8c><span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>vec_push(str_vec_3, “hello”)        # add “hello” to the string vector ‘str_vec_3’</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>vec_push(str_vec_3, “world”)        # add “world” to the string vector ‘str_vec_3’</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_num = vec_length(str_vec_3)  # my_num = 2 (length of the vector)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>vec_push(str_vec_3, “aa”)           # add “aa” to the string vector ‘str_vec_3’</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>vec_push(str_vec_3, “bb”)           # add “bb” to the string vector ‘str_vec_3’</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_num = vec_length(str_vec_3)  # my_num = 4 (length of the vector)</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>str sa = vec_at(str_vec_3, 1)       # “world” is stored in ‘sa’ with reference to str_vec_3 vector index 1.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>str sb = str_vec_3[3]               # “bb” is stored in ‘sb’ with reference to str_vec_3 vector index 3.</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>vec_clear(str_vec_3)                # clear the string vector ‘str_vec_3’</span></span>
<span class="line" data-v-ac8caa8c><span data-v-ac8caa8c>var my_num = vec_length(str_vec_3)  # my_num = 0 (length of the vector)</span></span></code></pre></div>`,905),d=[i];function v(p,o,l,r,h,u){return t(),c("div",null,d)}const m=a(s,[["render",v],["__scopeId","data-v-ac8caa8c"]]);export{g as __pageData,m as default};
