import{_ as a,c as e,o as t,U as o}from"./chunks/framework.fHC5UfPI.js";const m=JSON.parse('{"title":"Control Box Digital I/O Dedicated Function","description":"","frontmatter":{"layout":"doc","outline":"deep"},"headers":[],"relativePath":"technical_docs/digital_io_function.md","filePath":"technical_docs/digital_io_function.md"}'),r={name:"technical_docs/digital_io_function.md"},i=o('<h1 id="control-box-digital-i-o-dedicated-function" tabindex="-1">Control Box Digital I/O Dedicated Function <a class="header-anchor" href="#control-box-digital-i-o-dedicated-function" aria-label="Permalink to &quot;Control Box Digital I/O Dedicated Function&quot;">​</a></h1><h3 id="_1-control-box-digital-input-function-definition" tabindex="-1">1. Control Box Digital Input Function Definition <a class="header-anchor" href="#_1-control-box-digital-input-function-definition" aria-label="Permalink to &quot;1. Control Box Digital Input Function Definition&quot;">​</a></h3><br><h4 id="_1-1-r-start-program-once" tabindex="-1">1.1 R=Start Program (Once) <a class="header-anchor" href="#_1-1-r-start-program-once" aria-label="Permalink to &quot;1.1 R=Start Program (Once)&quot;">​</a></h4><p>Idle: Run the program currently loaded once.<br> Pause: Restart the program.<br> (Rising Edge)</p><h4 id="_1-2-r-stop-program" tabindex="-1">1.2 R=Stop Program <a class="header-anchor" href="#_1-2-r-stop-program" aria-label="Permalink to &quot;1.2 R=Stop Program&quot;">​</a></h4><p>Stops actions and running programs.<br> (Rising Edge)</p><h4 id="_1-3-r-pause-program" tabindex="-1">1.3 R=Pause Program <a class="header-anchor" href="#_1-3-r-pause-program" aria-label="Permalink to &quot;1.3 R=Pause Program&quot;">​</a></h4><p>Pause the running program.<br> (Rising Edge)</p><h4 id="_1-4-r-freedriveon-f-off" tabindex="-1">1.4 R=FreeDriveOn / F=Off <a class="header-anchor" href="#_1-4-r-freedriveon-f-off" aria-label="Permalink to &quot;1.4 R=FreeDriveOn / F=Off&quot;">​</a></h4><p>R=Use direct teaching mode.<br> F=Don’t use direct teaching mode.</p><h4 id="_1-5-r-speed-100-f-0" tabindex="-1">1.5 R=Speed 100% / F=0% <a class="header-anchor" href="#_1-5-r-speed-100-f-0" aria-label="Permalink to &quot;1.5 R=Speed 100% / F=0%&quot;">​</a></h4><p>R=Set the speed bar to 100%.<br> F=Set the speed bar to 0%.</p><h4 id="_1-6-r-real-mode-f-simulation" tabindex="-1">1.6 R=Real mode / F=simulation <a class="header-anchor" href="#_1-6-r-real-mode-f-simulation" aria-label="Permalink to &quot;1.6 R=Real mode / F=simulation&quot;">​</a></h4><p>R=Change to real robot mode.<br> F=Change to simulation mode.</p><h4 id="_1-7-r-initialize-robot" tabindex="-1">1.7 R=Initialize Robot <a class="header-anchor" href="#_1-7-r-initialize-robot" aria-label="Permalink to &quot;1.7 R=Initialize Robot&quot;">​</a></h4><p>Activate robot arm (Servo on) and switch to real robot mode.<br> (Rising Edge)</p><h4 id="_1-8-h-temporary-collision-off" tabindex="-1">1.8 H=Temporary Collision off <a class="header-anchor" href="#_1-8-h-temporary-collision-off" aria-label="Permalink to &quot;1.8 H=Temporary Collision off&quot;">​</a></h4><p>Turns off external crash detection.<br> (High State)</p><h4 id="_1-9-h-auto-initialize-key" tabindex="-1">1.9 H=Auto-Initialize Key <a class="header-anchor" href="#_1-9-h-auto-initialize-key" aria-label="Permalink to &quot;1.9 H=Auto-Initialize Key&quot;">​</a></h4><p>Key port for using the &#39;Automatic Activation with Key&#39; setting.<br> (High State)</p><h4 id="_1-10-r-resume-from-out-coll-stop" tabindex="-1">1.10 R=Resume from Out Coll. Stop <a class="header-anchor" href="#_1-10-r-resume-from-out-coll-stop" aria-label="Permalink to &quot;1.10 R=Resume from Out Coll. Stop&quot;">​</a></h4><p>Release the stop due to external collision detection.<br> (Rising Edge)</p><h4 id="_1-11-r-point-add" tabindex="-1">1.11 R=Point Add <a class="header-anchor" href="#_1-11-r-point-add" aria-label="Permalink to &quot;1.11 R=Point Add&quot;">​</a></h4><p>Add the current position-information of the robot arm as a point under the Move function.<br> (Rising Edge)</p><h4 id="_1-12-r-start-program-repeat" tabindex="-1">1.12 R=Start Program (Repeat) <a class="header-anchor" href="#_1-12-r-start-program-repeat" aria-label="Permalink to &quot;1.12 R=Start Program (Repeat)&quot;">​</a></h4><p>Idle: Repeat starting the program currently loaded.<br> Pause: Restart the program.<br> (Rising Edge)</p><h4 id="_1-13-r-approach-to-begin" tabindex="-1">1.13 R=Approach to Begin <a class="header-anchor" href="#_1-13-r-approach-to-begin" aria-label="Permalink to &quot;1.13 R=Approach to Begin&quot;">​</a></h4><p>Move to the starting position (Home-pos) defined in the program currently loaded.<br> (Rising Edge)</p><h4 id="_1-14-r-program-resume" tabindex="-1">1.14 R=Program Resume <a class="header-anchor" href="#_1-14-r-program-resume" aria-label="Permalink to &quot;1.14 R=Program Resume&quot;">​</a></h4><p>Restart the paused program.<br> (Rising Edge)</p><h4 id="_1-15-h-quick-freedrive-change" tabindex="-1">1.15 H=Quick Freedrive Change <a class="header-anchor" href="#_1-15-h-quick-freedrive-change" aria-label="Permalink to &quot;1.15 H=Quick Freedrive Change&quot;">​</a></h4><p>It&#39;s a function to grab the Servo-lock when exit the direct teaching mode.<br> (High State)</p><h4 id="_1-16-r-pause-f-resume-program" tabindex="-1">1.16 R=Pause / F=Resume Program <a class="header-anchor" href="#_1-16-r-pause-f-resume-program" aria-label="Permalink to &quot;1.16 R=Pause / F=Resume Program&quot;">​</a></h4><p>R=Pause the program.<br> F=Restart the program.</p><h4 id="_1-17-f-pause-r-resume-program" tabindex="-1">1.17 F=Pause / R=Resume Program <a class="header-anchor" href="#_1-17-f-pause-r-resume-program" aria-label="Permalink to &quot;1.17 F=Pause / R=Resume Program&quot;">​</a></h4><p>F=Pause the program.<br> R=Restart the program.</p><h4 id="_1-18-h-speed-100-f-0" tabindex="-1">1.18 H=Speed 100% / F=0% <a class="header-anchor" href="#_1-18-h-speed-100-f-0" aria-label="Permalink to &quot;1.18 H=Speed 100% / F=0%&quot;">​</a></h4><p>H=Set the speed bar to 100%.<br> F=Set the speed bar to 0%.</p><h4 id="_1-19-r-load-default-program" tabindex="-1">1.19 R=Load Default Program <a class="header-anchor" href="#_1-19-r-load-default-program" aria-label="Permalink to &quot;1.19 R=Load Default Program&quot;">​</a></h4><p>Loads a program set as the default program.<br> (Rising Edge)</p><h4 id="_1-20-f-robot-arm-power-down" tabindex="-1">1.20 F=Robot Arm Power Down <a class="header-anchor" href="#_1-20-f-robot-arm-power-down" aria-label="Permalink to &quot;1.20 F=Robot Arm Power Down&quot;">​</a></h4><p>Turn off the DC power applied to the robot&#39;s arm.<br> (Falling Edge)</p><h4 id="_1-21-r-touch-sensing" tabindex="-1">1.21 R=Touch Sensing <a class="header-anchor" href="#_1-21-r-touch-sensing" aria-label="Permalink to &quot;1.21 R=Touch Sensing&quot;">​</a></h4><p>When using the touch sensing function, this is the port that connects the touch sensing signal output-line from the welding machine.<br> (Rising Edge)</p><h4 id="_1-22-f-touch-sensing" tabindex="-1">1.22 F=Touch Sensing <a class="header-anchor" href="#_1-22-f-touch-sensing" aria-label="Permalink to &quot;1.22 F=Touch Sensing&quot;">​</a></h4><p>When using the touch sensing function, this is the port that connects the touch sensing signal output-line from the welding machine.<br> (Falling Edge)</p><h4 id="_1-23-h-no-arc" tabindex="-1">1.23 H=No Arc <a class="header-anchor" href="#_1-23-h-no-arc" aria-label="Permalink to &quot;1.23 H=No Arc&quot;">​</a></h4><p>When a signal is on (if high-state), activate the No-Arc function.<br> (High State)</p><h4 id="_1-24-h-program-start-block" tabindex="-1">1.24 H=Program Start Block <a class="header-anchor" href="#_1-24-h-program-start-block" aria-label="Permalink to &quot;1.24 H=Program Start Block&quot;">​</a></h4><p>The signal cannot start the program while it is in the high-state.<br> (High State)</p><h4 id="_1-25-r-ext-joint-0-plus-f-stop" tabindex="-1">1.25 R=Ext.Joint 0 Plus / F=stop <a class="header-anchor" href="#_1-25-r-ext-joint-0-plus-f-stop" aria-label="Permalink to &quot;1.25 R=Ext.Joint 0 Plus / F=stop&quot;">​</a></h4><p>R=Additional axis 0 moves in the (+) direction / F=stop</p><h4 id="_1-26-r-ext-joint-0-minus-f-stop" tabindex="-1">1.26 R=Ext.Joint 0 Minus / F=stop <a class="header-anchor" href="#_1-26-r-ext-joint-0-minus-f-stop" aria-label="Permalink to &quot;1.26 R=Ext.Joint 0 Minus / F=stop&quot;">​</a></h4><p>R=Additional axis 0 moves in the (-) direction / F=stop</p><h4 id="_1-27-r-ext-joint-1-plus-f-stop" tabindex="-1">1.27 R=Ext.Joint 1 Plus / F=stop <a class="header-anchor" href="#_1-27-r-ext-joint-1-plus-f-stop" aria-label="Permalink to &quot;1.27 R=Ext.Joint 1 Plus / F=stop&quot;">​</a></h4><p>R=Additional axis 1 moves in the (+) direction / F=stop</p><h4 id="_1-28-r-ext-joint-1-minus-f-stop" tabindex="-1">1.28 R=Ext.Joint 1 Minus / F=stop <a class="header-anchor" href="#_1-28-r-ext-joint-1-minus-f-stop" aria-label="Permalink to &quot;1.28 R=Ext.Joint 1 Minus / F=stop&quot;">​</a></h4><p>R=Additional axis 1 moves in the (-) direction / F=stop</p><h4 id="_1-29-r-ext-joint-2-plus-f-stop" tabindex="-1">1.29 R=Ext.Joint 2 Plus / F=stop <a class="header-anchor" href="#_1-29-r-ext-joint-2-plus-f-stop" aria-label="Permalink to &quot;1.29 R=Ext.Joint 2 Plus / F=stop&quot;">​</a></h4><p>R=Additional axis 2 moves in the (+) direction / F=stop</p><h4 id="_1-30-r-ext-joint-2-minus-f-stop" tabindex="-1">1.30 R=Ext.Joint 2 Minus / F=stop <a class="header-anchor" href="#_1-30-r-ext-joint-2-minus-f-stop" aria-label="Permalink to &quot;1.30 R=Ext.Joint 2 Minus / F=stop&quot;">​</a></h4><p>R=Additional axis 2 moves in the (-) direction / F=stop</p><h4 id="_1-31-h-safety-speed" tabindex="-1">1.31 H=Safety Speed <a class="header-anchor" href="#_1-31-h-safety-speed" aria-label="Permalink to &quot;1.31 H=Safety Speed&quot;">​</a></h4><p>Switch the robot arm&#39;s motion speed to the safe speed range.<br> (High State)</p><h4 id="_1-32-f-user-coord-0-←-tcp-frame" tabindex="-1">1.32 F=User Coord 0 ← TCP frame <a class="header-anchor" href="#_1-32-f-user-coord-0-←-tcp-frame" aria-label="Permalink to &quot;1.32 F=User Coord 0 ← TCP frame&quot;">​</a></h4><p>Change the setting value of user coordinate 0 to the position/rotation of the TCP coordinate system of the current robot arm.<br> (Falling Edge)</p><h4 id="_1-33-f-user-coord-1-←-tcp-frame" tabindex="-1">1.33 F=User Coord 1 ← TCP frame <a class="header-anchor" href="#_1-33-f-user-coord-1-←-tcp-frame" aria-label="Permalink to &quot;1.33 F=User Coord 1 ← TCP frame&quot;">​</a></h4><p>Change the setting value of user coordinate 1 to the position/rotation of the TCP coordinate system of the current robot arm.<br> (Falling Edge)</p><h4 id="_1-34-f-user-coord-2-←-tcp-frame" tabindex="-1">1.34 F=User Coord 2 ← TCP frame <a class="header-anchor" href="#_1-34-f-user-coord-2-←-tcp-frame" aria-label="Permalink to &quot;1.34 F=User Coord 2 ← TCP frame&quot;">​</a></h4><p>Change the setting value of user coordinate 2 to the position/rotation of the TCP coordinate system of the current robot arm.<br> (Falling Edge)</p><h4 id="_1-35-f-load-run-program-table" tabindex="-1">1.35 F=Load &amp; Run Program Table <a class="header-anchor" href="#_1-35-f-load-run-program-table" aria-label="Permalink to &quot;1.35 F=Load &amp; Run Program Table&quot;">​</a></h4><p>Loads and plays the program set at the number of the corresponding input port in the Program Table.<br> (Falling Edge)</p><h4 id="_1-36-r-start-prog-once-f-stop-prog" tabindex="-1">1.36 R=Start Prog. (Once) / F=Stop Prog. <a class="header-anchor" href="#_1-36-r-start-prog-once-f-stop-prog" aria-label="Permalink to &quot;1.36 R=Start Prog. (Once) / F=Stop Prog.&quot;">​</a></h4><p>R=Run the loaded program once / F=Stop the program</p><h4 id="_1-37-r-start-prog-repeat-f-stop-prog" tabindex="-1">1.37 R=Start Prog. (Repeat) / F=Stop Prog. <a class="header-anchor" href="#_1-37-r-start-prog-repeat-f-stop-prog" aria-label="Permalink to &quot;1.37 R=Start Prog. (Repeat) / F=Stop Prog.&quot;">​</a></h4><p>R=Run the loaded program repeatedly / F=Stop the program</p><h4 id="_1-38-f-change-global-pinpoint-s-pos" tabindex="-1">1.38 F=Change Global Pinpoint #’s Pos <a class="header-anchor" href="#_1-38-f-change-global-pinpoint-s-pos" aria-label="Permalink to &quot;1.38 F=Change Global Pinpoint #’s Pos&quot;">​</a></h4><p>Save the global pin-point as the current point value of the robot arm.<br> (Falling Edge)</p><h4 id="_1-39-r-ext-joint-0-slow-plus-f-stop" tabindex="-1">1.39 R=EXT.Joint 0 Slow Plus / F=stop <a class="header-anchor" href="#_1-39-r-ext-joint-0-slow-plus-f-stop" aria-label="Permalink to &quot;1.39 R=EXT.Joint 0 Slow Plus / F=stop&quot;">​</a></h4><p>R=Additional axis 0 slowly moves in the (+) direction / F=stop</p><h4 id="_1-40-r-ext-joint-0-slow-minus-f-stop" tabindex="-1">1.40 R=EXT.Joint 0 Slow Minus / F=stop <a class="header-anchor" href="#_1-40-r-ext-joint-0-slow-minus-f-stop" aria-label="Permalink to &quot;1.40 R=EXT.Joint 0 Slow Minus / F=stop&quot;">​</a></h4><p>R=Additional axis 0 slowly moves in the (-) direction / F=stop</p><h4 id="_1-41-r-ext-joint-1-slow-plus-f-stop" tabindex="-1">1.41 R=EXT.Joint 1 Slow Plus / F=stop <a class="header-anchor" href="#_1-41-r-ext-joint-1-slow-plus-f-stop" aria-label="Permalink to &quot;1.41 R=EXT.Joint 1 Slow Plus / F=stop&quot;">​</a></h4><p>R=Additional axis 1 slowly moves in the (+) direction / F=stop</p><h4 id="_1-42-r-ext-joint-1-slow-minus-f-stop" tabindex="-1">1.42 R=EXT.Joint 1 Slow Minus / F=stop <a class="header-anchor" href="#_1-42-r-ext-joint-1-slow-minus-f-stop" aria-label="Permalink to &quot;1.42 R=EXT.Joint 1 Slow Minus / F=stop&quot;">​</a></h4><p>R=Additional axis 1 slowly moves in the (-) direction / F=stop</p><h4 id="_1-43-r-ext-joint-2-slow-plus-f-stop" tabindex="-1">1.43 R=EXT.Joint 2 Slow Plus / F=stop <a class="header-anchor" href="#_1-43-r-ext-joint-2-slow-plus-f-stop" aria-label="Permalink to &quot;1.43 R=EXT.Joint 2 Slow Plus / F=stop&quot;">​</a></h4><p>R=Additional axis 2 slowly moves in the (+) direction / F=stop</p><h4 id="_1-44-r-ext-joint-2-slow-minus-f-stop" tabindex="-1">1.44 R=EXT.Joint 2 Slow Minus / F=stop <a class="header-anchor" href="#_1-44-r-ext-joint-2-slow-minus-f-stop" aria-label="Permalink to &quot;1.44 R=EXT.Joint 2 Slow Minus / F=stop&quot;">​</a></h4><p>R=Additional axis 2 slowly moves in the (-) direction / F=stop</p><h4 id="_1-45-r-reset-sos" tabindex="-1">1.45 R=Reset SOS <a class="header-anchor" href="#_1-45-r-reset-sos" aria-label="Permalink to &quot;1.45 R=Reset SOS&quot;">​</a></h4><p>Initialize (reset) the SOS state.<br> (Rising Edge)</p><h4 id="_1-46-f-reset-sos" tabindex="-1">1.46 F=Reset SOS <a class="header-anchor" href="#_1-46-f-reset-sos" aria-label="Permalink to &quot;1.46 F=Reset SOS&quot;">​</a></h4><p>Initialize (reset) the SOS state.<br> (Falling Edge)</p><h3 id="_2-control-box-digital-output-function-definition" tabindex="-1">2. Control Box Digital Output Function Definition <a class="header-anchor" href="#_2-control-box-digital-output-function-definition" aria-label="Permalink to &quot;2. Control Box Digital Output Function Definition&quot;">​</a></h3><br><h4 id="_2-1-h-program-run-l-idle" tabindex="-1">2.1 H=Program Run / L=Idle <a class="header-anchor" href="#_2-1-h-program-run-l-idle" aria-label="Permalink to &quot;2.1 H=Program Run / L=Idle&quot;">​</a></h4><p>H=Running a program or executing an action command<br> L=Idle Situation</p><h4 id="_2-2-l-program-run-h-idle" tabindex="-1">2.2 L=Program Run / H=Idle <a class="header-anchor" href="#_2-2-l-program-run-h-idle" aria-label="Permalink to &quot;2.2 L=Program Run / H=Idle&quot;">​</a></h4><p>L=Running a program or executing an action command<br> H=Idle Situation</p><h4 id="_2-3-h-collision-detected" tabindex="-1">2.3 H=Collision Detected <a class="header-anchor" href="#_2-3-h-collision-detected" aria-label="Permalink to &quot;2.3 H=Collision Detected&quot;">​</a></h4><p>Indicates whether an out-collision or self-collision has been detected.<br> (High State)</p><h4 id="_2-4-h-direct-teaching-mode" tabindex="-1">2.4 H=Direct Teaching mode <a class="header-anchor" href="#_2-4-h-direct-teaching-mode" aria-label="Permalink to &quot;2.4 H=Direct Teaching mode&quot;">​</a></h4><p>Indicates that direct instruction mode is running.<br> (High State)</p><h4 id="_2-5-bypass-din" tabindex="-1">2.5 Bypass Din <a class="header-anchor" href="#_2-5-bypass-din" aria-label="Permalink to &quot;2.5 Bypass Din&quot;">​</a></h4><p>Passes digital input signals of the same number as the selected port.</p><h4 id="_2-6-bypass-tool-din-0" tabindex="-1">2.6 Bypass Tool Din 0 <a class="header-anchor" href="#_2-6-bypass-tool-din-0" aria-label="Permalink to &quot;2.6 Bypass Tool Din 0&quot;">​</a></h4><p>Passes tool flange input port 0 signal.</p><h4 id="_2-7-bypass-tool-din-1" tabindex="-1">2.7 Bypass Tool Din 1 <a class="header-anchor" href="#_2-7-bypass-tool-din-1" aria-label="Permalink to &quot;2.7 Bypass Tool Din 1&quot;">​</a></h4><p>Passes tool flange input port 1 signal.</p><h4 id="_2-8-h-robot-ready-l-not-init" tabindex="-1">2.8 H=Robot Ready / L=Not Init. <a class="header-anchor" href="#_2-8-h-robot-ready-l-not-init" aria-label="Permalink to &quot;2.8 H=Robot Ready / L=Not Init.&quot;">​</a></h4><p>H=Robot Arm Activation Status<br> L=Robot Arm Disabled</p><h4 id="_2-9-h-real-mode-l-simulation" tabindex="-1">2.9 H=Real mode / L=Simulation <a class="header-anchor" href="#_2-9-h-real-mode-l-simulation" aria-label="Permalink to &quot;2.9 H=Real mode / L=Simulation&quot;">​</a></h4><p>H=Real Robot Mode Status<br> L=Simulation Mode Status</p><h4 id="_2-10-h-robot-moving-l-idle" tabindex="-1">2.10 H=Robot Moving / L=Idle <a class="header-anchor" href="#_2-10-h-robot-moving-l-idle" aria-label="Permalink to &quot;2.10 H=Robot Moving / L=Idle&quot;">​</a></h4><p>H=When the robot&#39;s arm is moving<br> L=When the robot arm is stationary</p><h4 id="_2-11-l-robot-moving-h-idle" tabindex="-1">2.11 L=Robot Moving / H=Idle <a class="header-anchor" href="#_2-11-l-robot-moving-h-idle" aria-label="Permalink to &quot;2.11 L=Robot Moving / H=Idle&quot;">​</a></h4><p>L=When the robot&#39;s arm is moving<br> H=When the robot arm is stationary</p><h4 id="_2-12-h-robot-initialize-fail" tabindex="-1">2.12 H=Robot Initialize Fail <a class="header-anchor" href="#_2-12-h-robot-initialize-fail" aria-label="Permalink to &quot;2.12 H=Robot Initialize Fail&quot;">​</a></h4><p>When the robot fails during the activation process<br> (High State)</p><h4 id="_2-13-h-robot-power-on-l-off" tabindex="-1">2.13 H=Robot Power On / L=Off <a class="header-anchor" href="#_2-13-h-robot-power-on-l-off" aria-label="Permalink to &quot;2.13 H=Robot Power On / L=Off&quot;">​</a></h4><p>H=DC power applied to robot arm<br> L=Power-off Status</p><h4 id="_2-14-h-coll-detection-on-l-off" tabindex="-1">2.14 H=Coll. Detection On / L=Off <a class="header-anchor" href="#_2-14-h-coll-detection-on-l-off" aria-label="Permalink to &quot;2.14 H=Coll. Detection On / L=Off&quot;">​</a></h4><p>H=External collision detection mode on<br> L=External collision detection mode off</p><h4 id="_2-15-h-pause-state" tabindex="-1">2.15 H=Pause state <a class="header-anchor" href="#_2-15-h-pause-state" aria-label="Permalink to &quot;2.15 H=Pause state&quot;">​</a></h4><p>Indicates that the program and operation are paused.<br> (High State)</p><h4 id="_2-16-h-inbox-0-trap-flag-on" tabindex="-1">2.16 H=Inbox 0 Trap Flag On <a class="header-anchor" href="#_2-16-h-inbox-0-trap-flag-on" aria-label="Permalink to &quot;2.16 H=Inbox 0 Trap Flag On&quot;">​</a></h4><p>Indicates the status of the trap at in-box 0.<br> (High State)</p><h4 id="_2-17-h-inbox-1-trap-flag-on" tabindex="-1">2.17 H=Inbox 1 Trap Flag On <a class="header-anchor" href="#_2-17-h-inbox-1-trap-flag-on" aria-label="Permalink to &quot;2.17 H=Inbox 1 Trap Flag On&quot;">​</a></h4><p>Indicates the status of the trap at in-box 1.<br> (High State)</p><h4 id="_2-18-pwm-module" tabindex="-1">2.18 PWM Module <a class="header-anchor" href="#_2-18-pwm-module" aria-label="Permalink to &quot;2.18 PWM Module&quot;">​</a></h4><p>Use the port as a PWM module.</p><h4 id="_2-19-h-tpu-is-conndected" tabindex="-1">2.19 H=TPU is conndected <a class="header-anchor" href="#_2-19-h-tpu-is-conndected" aria-label="Permalink to &quot;2.19 H=TPU is conndected&quot;">​</a></h4><p>Indicates that the Teaching Pendant (Ui) is connected.<br> (High State)</p><h4 id="_2-20-h-run-in-make-page" tabindex="-1">2.20 H=Run in MAKE page <a class="header-anchor" href="#_2-20-h-run-in-make-page" aria-label="Permalink to &quot;2.20 H=Run in MAKE page&quot;">​</a></h4><p>Indicates that the program is currently running in the MAKE window.<br> (High State)</p><h4 id="_2-21-h-run-in-play-page" tabindex="-1">2.21 H=Run in PLAY page <a class="header-anchor" href="#_2-21-h-run-in-play-page" aria-label="Permalink to &quot;2.21 H=Run in PLAY page&quot;">​</a></h4><p>Indicates that the program is currently running in the PLAY window.<br> (High State)</p><h4 id="_2-22-h-is-conveyor-mode" tabindex="-1">2.22 H=Is Conveyor mode <a class="header-anchor" href="#_2-22-h-is-conveyor-mode" aria-label="Permalink to &quot;2.22 H=Is Conveyor mode&quot;">​</a></h4><p>Indicates that conveyor mode is in use.<br> (High State)</p><h4 id="_2-23-h-control-box-boot" tabindex="-1">2.23 H=Control Box Boot <a class="header-anchor" href="#_2-23-h-control-box-boot" aria-label="Permalink to &quot;2.23 H=Control Box Boot&quot;">​</a></h4><p>Indicates the controller box boot-complete status.<br> (High State)</p><h4 id="_2-24-h-force-control-mode" tabindex="-1">2.24 H=Force Control mode <a class="header-anchor" href="#_2-24-h-force-control-mode" aria-label="Permalink to &quot;2.24 H=Force Control mode&quot;">​</a></h4><p>Indicates that force control mode is in use.<br> (High State)</p><h4 id="_2-25-pc-alive-pulse" tabindex="-1">2.25 PC Alive Pulse <a class="header-anchor" href="#_2-25-pc-alive-pulse" aria-label="Permalink to &quot;2.25 PC Alive Pulse&quot;">​</a></h4><p>A pulse signal (Alive signal) 0.5 Hz to confirm that the main PC in the control box is alive.</p><h4 id="_2-26-h-speed-bar-100" tabindex="-1">2.26 H=Speed Bar 100% <a class="header-anchor" href="#_2-26-h-speed-bar-100" aria-label="Permalink to &quot;2.26 H=Speed Bar 100%&quot;">​</a></h4><p>Indicates that the speed control bar is 100%.<br> (High State)</p><h4 id="_2-27-h-last-program-load-success" tabindex="-1">2.27 H=Last Program Load Success <a class="header-anchor" href="#_2-27-h-last-program-load-success" aria-label="Permalink to &quot;2.27 H=Last Program Load Success&quot;">​</a></h4><p>Indicates that the last run of &#39;Load a program&#39; was successful.<br> If there is a grammatical error in the written program, the load fails.<br> (High State)</p><h4 id="_2-28-h-tcp-is-in-inbox-0" tabindex="-1">2.28 H=TCP is in Inbox 0 <a class="header-anchor" href="#_2-28-h-tcp-is-in-inbox-0" aria-label="Permalink to &quot;2.28 H=TCP is in Inbox 0&quot;">​</a></h4><p>Indicates that TCP has entered the in-box area 0.<br> (High State)</p><h4 id="_2-29-h-tcp-is-in-inbox-1" tabindex="-1">2.29 H=TCP is in Inbox 1 <a class="header-anchor" href="#_2-29-h-tcp-is-in-inbox-1" aria-label="Permalink to &quot;2.29 H=TCP is in Inbox 1&quot;">​</a></h4><p>Indicates that TCP has entered the in-box area 1.<br> (High State)</p><h4 id="_2-30-h-is-alarm" tabindex="-1">2.30 H=Is Alarm <a class="header-anchor" href="#_2-30-h-is-alarm" aria-label="Permalink to &quot;2.30 H=Is Alarm&quot;">​</a></h4><p>Indicates that the alarm function on the program has been turned on and program is paused.<br> (High State)</p><h4 id="_2-31-h-robot-posture-is-begin-posture" tabindex="-1">2.31 H=Robot posture is Begin posture <a class="header-anchor" href="#_2-31-h-robot-posture-is-begin-posture" aria-label="Permalink to &quot;2.31 H=Robot posture is Begin posture&quot;">​</a></h4><p>Indicates that the robot arm is currently in the start position (home position).<br> The starting position (home position) is defined based on the currently loaded program.<br> (High State)</p><h4 id="_2-32-h-emergency-teaching-enable" tabindex="-1">2.32 H=Emergency Teaching Enable <a class="header-anchor" href="#_2-32-h-emergency-teaching-enable" aria-label="Permalink to &quot;2.32 H=Emergency Teaching Enable&quot;">​</a></h4><p>Indicates that emergency direct teaching mode is enabled.<br> (High State)</p><h4 id="_2-33-h-prog-run-in-sub-p-area" tabindex="-1">2.33 H=Prog. Run in Sub.P area <a class="header-anchor" href="#_2-33-h-prog-run-in-sub-p-area" aria-label="Permalink to &quot;2.33 H=Prog. Run in Sub.P area&quot;">​</a></h4><p>When the currently running program section is a sub-program (Sub.P ), High signal is output.<br> (High State)</p><h4 id="_2-34-h-normal-program-run-l-others" tabindex="-1">2.34 H=Normal Program Run / L=Others <a class="header-anchor" href="#_2-34-h-normal-program-run-l-others" aria-label="Permalink to &quot;2.34 H=Normal Program Run / L=Others&quot;">​</a></h4><p>H=Normal program play status / L=Other cases<br> (A case that is not a pause due to pause or external collision detection is defined as &#39;normal&#39;)<br> (High State)</p><h4 id="_2-35-l-normal-program-run-h-others" tabindex="-1">2.35 L=Normal Program Run / H=Others <a class="header-anchor" href="#_2-35-l-normal-program-run-h-others" aria-label="Permalink to &quot;2.35 L=Normal Program Run / H=Others&quot;">​</a></h4><p>L=Normal program play status / H=Other cases<br> (A case that is not a pause due to pause or external collision detection is defined as &#39;normal&#39;)<br> (Low State)</p><h4 id="_2-36-h-hand-controller-f1-pressed" tabindex="-1">2.36 H=Hand Controller F1 pressed <a class="header-anchor" href="#_2-36-h-hand-controller-f1-pressed" aria-label="Permalink to &quot;2.36 H=Hand Controller F1 pressed&quot;">​</a></h4><p>Indicates that the F1 button on the hand controller is pressed.</p><h4 id="_2-37-h-hand-controller-f2-pressed" tabindex="-1">2.37 H=Hand Controller F2 pressed <a class="header-anchor" href="#_2-37-h-hand-controller-f2-pressed" aria-label="Permalink to &quot;2.37 H=Hand Controller F2 pressed&quot;">​</a></h4><p>Indicates that the F2 button on the hand controller is pressed.</p><h4 id="_2-38-h-hand-controller-f3-pressed" tabindex="-1">2.38 H=Hand Controller F3 pressed <a class="header-anchor" href="#_2-38-h-hand-controller-f3-pressed" aria-label="Permalink to &quot;2.38 H=Hand Controller F3 pressed&quot;">​</a></h4><p>Indicates that the F3 button on the hand controller is pressed.</p><h4 id="_2-39-h-hand-controller-f4-pressed" tabindex="-1">2.39 H=Hand Controller F4 pressed <a class="header-anchor" href="#_2-39-h-hand-controller-f4-pressed" aria-label="Permalink to &quot;2.39 H=Hand Controller F4 pressed&quot;">​</a></h4><p>Indicates that the F4 button on the hand controller is pressed.</p><h4 id="_2-40-l-tcp-is-in-inbox-0" tabindex="-1">2.40 L=TCP is in Inbox 0 <a class="header-anchor" href="#_2-40-l-tcp-is-in-inbox-0" aria-label="Permalink to &quot;2.40 L=TCP is in Inbox 0&quot;">​</a></h4><p>Indicates that TCP has entered the in-box area 0.<br> (Low State)</p><h4 id="_2-41-l-tcp-is-in-inbox-1" tabindex="-1">2.41 L=TCP is in Inbox 1 <a class="header-anchor" href="#_2-41-l-tcp-is-in-inbox-1" aria-label="Permalink to &quot;2.41 L=TCP is in Inbox 1&quot;">​</a></h4><p>Indicates that TCP has entered the in-box area 1.<br> (Low State)</p><h4 id="_2-42-sync-with-dout-0-15" tabindex="-1">2.42 Sync with Dout 0~15 <a class="header-anchor" href="#_2-42-sync-with-dout-0-15" aria-label="Permalink to &quot;2.42 Sync with Dout 0~15&quot;">​</a></h4><p>Indicates the signal in synchronization with the signal from 0 to 15.</p><h4 id="_2-43-h-is-sos-state" tabindex="-1">2.43 H=Is SOS State <a class="header-anchor" href="#_2-43-h-is-sos-state" aria-label="Permalink to &quot;2.43 H=Is SOS State&quot;">​</a></h4><p>Indicates the SOS status.<br> (High state)</p><h4 id="_2-44-l-is-sos-state" tabindex="-1">2.44 L=Is SOS State <a class="header-anchor" href="#_2-44-l-is-sos-state" aria-label="Permalink to &quot;2.44 L=Is SOS State&quot;">​</a></h4><p>Indicates the SOS status.<br> (Low state)</p>',185),n=[i];function s(h,l,d,p,c,u){return t(),e("div",null,n)}const g=a(r,[["render",s]]);export{m as __pageData,g as default};
